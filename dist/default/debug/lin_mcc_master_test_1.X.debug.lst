

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Sep 12 21:07:21 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	dabs	1,0x7E,2
    69  0000                     
    70                           ; Version 1.45
    71                           ; Generated 16/11/2017 GMT
    72                           ; 
    73                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F1825 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000E                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  0019                     	;# 
   127  001A                     	;# 
   128  001B                     	;# 
   129  001C                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  008C                     	;# 
   133  008E                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  010C                     	;# 
   149  010E                     	;# 
   150  0111                     	;# 
   151  0112                     	;# 
   152  0113                     	;# 
   153  0114                     	;# 
   154  0115                     	;# 
   155  0116                     	;# 
   156  0117                     	;# 
   157  0118                     	;# 
   158  0119                     	;# 
   159  011A                     	;# 
   160  011B                     	;# 
   161  011D                     	;# 
   162  011E                     	;# 
   163  018C                     	;# 
   164  018E                     	;# 
   165  0191                     	;# 
   166  0191                     	;# 
   167  0192                     	;# 
   168  0193                     	;# 
   169  0193                     	;# 
   170  0193                     	;# 
   171  0194                     	;# 
   172  0195                     	;# 
   173  0196                     	;# 
   174  0199                     	;# 
   175  019A                     	;# 
   176  019B                     	;# 
   177  019B                     	;# 
   178  019C                     	;# 
   179  019D                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  020C                     	;# 
   183  020E                     	;# 
   184  0211                     	;# 
   185  0211                     	;# 
   186  0212                     	;# 
   187  0212                     	;# 
   188  0213                     	;# 
   189  0213                     	;# 
   190  0214                     	;# 
   191  0214                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0216                     	;# 
   196  0216                     	;# 
   197  0217                     	;# 
   198  0217                     	;# 
   199  0291                     	;# 
   200  0291                     	;# 
   201  0292                     	;# 
   202  0293                     	;# 
   203  0294                     	;# 
   204  0295                     	;# 
   205  0295                     	;# 
   206  0296                     	;# 
   207  0298                     	;# 
   208  0298                     	;# 
   209  0299                     	;# 
   210  029A                     	;# 
   211  029B                     	;# 
   212  029C                     	;# 
   213  029D                     	;# 
   214  029E                     	;# 
   215  0311                     	;# 
   216  0311                     	;# 
   217  0312                     	;# 
   218  0313                     	;# 
   219  0318                     	;# 
   220  0318                     	;# 
   221  0319                     	;# 
   222  031A                     	;# 
   223  038C                     	;# 
   224  038E                     	;# 
   225  0391                     	;# 
   226  0392                     	;# 
   227  0393                     	;# 
   228  039A                     	;# 
   229  039C                     	;# 
   230  039D                     	;# 
   231  039E                     	;# 
   232  039F                     	;# 
   233  0415                     	;# 
   234  0416                     	;# 
   235  0417                     	;# 
   236  041C                     	;# 
   237  041D                     	;# 
   238  041E                     	;# 
   239  0FE4                     	;# 
   240  0FE5                     	;# 
   241  0FE6                     	;# 
   242  0FE7                     	;# 
   243  0FE8                     	;# 
   244  0FE9                     	;# 
   245  0FEA                     	;# 
   246  0FEB                     	;# 
   247  0FED                     	;# 
   248  0FEE                     	;# 
   249  0FEF                     	;# 
   250  0000                     	;# 
   251  0001                     	;# 
   252  0002                     	;# 
   253  0003                     	;# 
   254  0004                     	;# 
   255  0005                     	;# 
   256  0006                     	;# 
   257  0007                     	;# 
   258  0008                     	;# 
   259  0009                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000E                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  008C                     	;# 
   279  008E                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  010C                     	;# 
   295  010E                     	;# 
   296  0111                     	;# 
   297  0112                     	;# 
   298  0113                     	;# 
   299  0114                     	;# 
   300  0115                     	;# 
   301  0116                     	;# 
   302  0117                     	;# 
   303  0118                     	;# 
   304  0119                     	;# 
   305  011A                     	;# 
   306  011B                     	;# 
   307  011D                     	;# 
   308  011E                     	;# 
   309  018C                     	;# 
   310  018E                     	;# 
   311  0191                     	;# 
   312  0191                     	;# 
   313  0192                     	;# 
   314  0193                     	;# 
   315  0193                     	;# 
   316  0193                     	;# 
   317  0194                     	;# 
   318  0195                     	;# 
   319  0196                     	;# 
   320  0199                     	;# 
   321  019A                     	;# 
   322  019B                     	;# 
   323  019B                     	;# 
   324  019C                     	;# 
   325  019D                     	;# 
   326  019E                     	;# 
   327  019F                     	;# 
   328  020C                     	;# 
   329  020E                     	;# 
   330  0211                     	;# 
   331  0211                     	;# 
   332  0212                     	;# 
   333  0212                     	;# 
   334  0213                     	;# 
   335  0213                     	;# 
   336  0214                     	;# 
   337  0214                     	;# 
   338  0215                     	;# 
   339  0215                     	;# 
   340  0215                     	;# 
   341  0216                     	;# 
   342  0216                     	;# 
   343  0217                     	;# 
   344  0217                     	;# 
   345  0291                     	;# 
   346  0291                     	;# 
   347  0292                     	;# 
   348  0293                     	;# 
   349  0294                     	;# 
   350  0295                     	;# 
   351  0295                     	;# 
   352  0296                     	;# 
   353  0298                     	;# 
   354  0298                     	;# 
   355  0299                     	;# 
   356  029A                     	;# 
   357  029B                     	;# 
   358  029C                     	;# 
   359  029D                     	;# 
   360  029E                     	;# 
   361  0311                     	;# 
   362  0311                     	;# 
   363  0312                     	;# 
   364  0313                     	;# 
   365  0318                     	;# 
   366  0318                     	;# 
   367  0319                     	;# 
   368  031A                     	;# 
   369  038C                     	;# 
   370  038E                     	;# 
   371  0391                     	;# 
   372  0392                     	;# 
   373  0393                     	;# 
   374  039A                     	;# 
   375  039C                     	;# 
   376  039D                     	;# 
   377  039E                     	;# 
   378  039F                     	;# 
   379  0415                     	;# 
   380  0416                     	;# 
   381  0417                     	;# 
   382  041C                     	;# 
   383  041D                     	;# 
   384  041E                     	;# 
   385  0FE4                     	;# 
   386  0FE5                     	;# 
   387  0FE6                     	;# 
   388  0FE7                     	;# 
   389  0FE8                     	;# 
   390  0FE9                     	;# 
   391  0FEA                     	;# 
   392  0FEB                     	;# 
   393  0FED                     	;# 
   394  0FEE                     	;# 
   395  0FEF                     	;# 
   396  0000                     	;# 
   397  0001                     	;# 
   398  0002                     	;# 
   399  0003                     	;# 
   400  0004                     	;# 
   401  0005                     	;# 
   402  0006                     	;# 
   403  0007                     	;# 
   404  0008                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000E                     	;# 
   410  0011                     	;# 
   411  0012                     	;# 
   412  0013                     	;# 
   413  0015                     	;# 
   414  0016                     	;# 
   415  0016                     	;# 
   416  0017                     	;# 
   417  0018                     	;# 
   418  0019                     	;# 
   419  001A                     	;# 
   420  001B                     	;# 
   421  001C                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  008C                     	;# 
   425  008E                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  010C                     	;# 
   441  010E                     	;# 
   442  0111                     	;# 
   443  0112                     	;# 
   444  0113                     	;# 
   445  0114                     	;# 
   446  0115                     	;# 
   447  0116                     	;# 
   448  0117                     	;# 
   449  0118                     	;# 
   450  0119                     	;# 
   451  011A                     	;# 
   452  011B                     	;# 
   453  011D                     	;# 
   454  011E                     	;# 
   455  018C                     	;# 
   456  018E                     	;# 
   457  0191                     	;# 
   458  0191                     	;# 
   459  0192                     	;# 
   460  0193                     	;# 
   461  0193                     	;# 
   462  0193                     	;# 
   463  0194                     	;# 
   464  0195                     	;# 
   465  0196                     	;# 
   466  0199                     	;# 
   467  019A                     	;# 
   468  019B                     	;# 
   469  019B                     	;# 
   470  019C                     	;# 
   471  019D                     	;# 
   472  019E                     	;# 
   473  019F                     	;# 
   474  020C                     	;# 
   475  020E                     	;# 
   476  0211                     	;# 
   477  0211                     	;# 
   478  0212                     	;# 
   479  0212                     	;# 
   480  0213                     	;# 
   481  0213                     	;# 
   482  0214                     	;# 
   483  0214                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0216                     	;# 
   488  0216                     	;# 
   489  0217                     	;# 
   490  0217                     	;# 
   491  0291                     	;# 
   492  0291                     	;# 
   493  0292                     	;# 
   494  0293                     	;# 
   495  0294                     	;# 
   496  0295                     	;# 
   497  0295                     	;# 
   498  0296                     	;# 
   499  0298                     	;# 
   500  0298                     	;# 
   501  0299                     	;# 
   502  029A                     	;# 
   503  029B                     	;# 
   504  029C                     	;# 
   505  029D                     	;# 
   506  029E                     	;# 
   507  0311                     	;# 
   508  0311                     	;# 
   509  0312                     	;# 
   510  0313                     	;# 
   511  0318                     	;# 
   512  0318                     	;# 
   513  0319                     	;# 
   514  031A                     	;# 
   515  038C                     	;# 
   516  038E                     	;# 
   517  0391                     	;# 
   518  0392                     	;# 
   519  0393                     	;# 
   520  039A                     	;# 
   521  039C                     	;# 
   522  039D                     	;# 
   523  039E                     	;# 
   524  039F                     	;# 
   525  0415                     	;# 
   526  0416                     	;# 
   527  0417                     	;# 
   528  041C                     	;# 
   529  041D                     	;# 
   530  041E                     	;# 
   531  0FE4                     	;# 
   532  0FE5                     	;# 
   533  0FE6                     	;# 
   534  0FE7                     	;# 
   535  0FE8                     	;# 
   536  0FE9                     	;# 
   537  0FEA                     	;# 
   538  0FEB                     	;# 
   539  0FED                     	;# 
   540  0FEE                     	;# 
   541  0FEF                     	;# 
   542  0000                     	;# 
   543  0001                     	;# 
   544  0002                     	;# 
   545  0003                     	;# 
   546  0004                     	;# 
   547  0005                     	;# 
   548  0006                     	;# 
   549  0007                     	;# 
   550  0008                     	;# 
   551  0009                     	;# 
   552  000A                     	;# 
   553  000B                     	;# 
   554  000C                     	;# 
   555  000E                     	;# 
   556  0011                     	;# 
   557  0012                     	;# 
   558  0013                     	;# 
   559  0015                     	;# 
   560  0016                     	;# 
   561  0016                     	;# 
   562  0017                     	;# 
   563  0018                     	;# 
   564  0019                     	;# 
   565  001A                     	;# 
   566  001B                     	;# 
   567  001C                     	;# 
   568  001E                     	;# 
   569  001F                     	;# 
   570  008C                     	;# 
   571  008E                     	;# 
   572  0091                     	;# 
   573  0092                     	;# 
   574  0093                     	;# 
   575  0095                     	;# 
   576  0096                     	;# 
   577  0097                     	;# 
   578  0098                     	;# 
   579  0099                     	;# 
   580  009A                     	;# 
   581  009B                     	;# 
   582  009B                     	;# 
   583  009C                     	;# 
   584  009D                     	;# 
   585  009E                     	;# 
   586  010C                     	;# 
   587  010E                     	;# 
   588  0111                     	;# 
   589  0112                     	;# 
   590  0113                     	;# 
   591  0114                     	;# 
   592  0115                     	;# 
   593  0116                     	;# 
   594  0117                     	;# 
   595  0118                     	;# 
   596  0119                     	;# 
   597  011A                     	;# 
   598  011B                     	;# 
   599  011D                     	;# 
   600  011E                     	;# 
   601  018C                     	;# 
   602  018E                     	;# 
   603  0191                     	;# 
   604  0191                     	;# 
   605  0192                     	;# 
   606  0193                     	;# 
   607  0193                     	;# 
   608  0193                     	;# 
   609  0194                     	;# 
   610  0195                     	;# 
   611  0196                     	;# 
   612  0199                     	;# 
   613  019A                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019C                     	;# 
   617  019D                     	;# 
   618  019E                     	;# 
   619  019F                     	;# 
   620  020C                     	;# 
   621  020E                     	;# 
   622  0211                     	;# 
   623  0211                     	;# 
   624  0212                     	;# 
   625  0212                     	;# 
   626  0213                     	;# 
   627  0213                     	;# 
   628  0214                     	;# 
   629  0214                     	;# 
   630  0215                     	;# 
   631  0215                     	;# 
   632  0215                     	;# 
   633  0216                     	;# 
   634  0216                     	;# 
   635  0217                     	;# 
   636  0217                     	;# 
   637  0291                     	;# 
   638  0291                     	;# 
   639  0292                     	;# 
   640  0293                     	;# 
   641  0294                     	;# 
   642  0295                     	;# 
   643  0295                     	;# 
   644  0296                     	;# 
   645  0298                     	;# 
   646  0298                     	;# 
   647  0299                     	;# 
   648  029A                     	;# 
   649  029B                     	;# 
   650  029C                     	;# 
   651  029D                     	;# 
   652  029E                     	;# 
   653  0311                     	;# 
   654  0311                     	;# 
   655  0312                     	;# 
   656  0313                     	;# 
   657  0318                     	;# 
   658  0318                     	;# 
   659  0319                     	;# 
   660  031A                     	;# 
   661  038C                     	;# 
   662  038E                     	;# 
   663  0391                     	;# 
   664  0392                     	;# 
   665  0393                     	;# 
   666  039A                     	;# 
   667  039C                     	;# 
   668  039D                     	;# 
   669  039E                     	;# 
   670  039F                     	;# 
   671  0415                     	;# 
   672  0416                     	;# 
   673  0417                     	;# 
   674  041C                     	;# 
   675  041D                     	;# 
   676  041E                     	;# 
   677  0FE4                     	;# 
   678  0FE5                     	;# 
   679  0FE6                     	;# 
   680  0FE7                     	;# 
   681  0FE8                     	;# 
   682  0FE9                     	;# 
   683  0FEA                     	;# 
   684  0FEB                     	;# 
   685  0FED                     	;# 
   686  0FEE                     	;# 
   687  0FEF                     	;# 
   688  0000                     	;# 
   689  0001                     	;# 
   690  0002                     	;# 
   691  0003                     	;# 
   692  0004                     	;# 
   693  0005                     	;# 
   694  0006                     	;# 
   695  0007                     	;# 
   696  0008                     	;# 
   697  0009                     	;# 
   698  000A                     	;# 
   699  000B                     	;# 
   700  000C                     	;# 
   701  000E                     	;# 
   702  0011                     	;# 
   703  0012                     	;# 
   704  0013                     	;# 
   705  0015                     	;# 
   706  0016                     	;# 
   707  0016                     	;# 
   708  0017                     	;# 
   709  0018                     	;# 
   710  0019                     	;# 
   711  001A                     	;# 
   712  001B                     	;# 
   713  001C                     	;# 
   714  001E                     	;# 
   715  001F                     	;# 
   716  008C                     	;# 
   717  008E                     	;# 
   718  0091                     	;# 
   719  0092                     	;# 
   720  0093                     	;# 
   721  0095                     	;# 
   722  0096                     	;# 
   723  0097                     	;# 
   724  0098                     	;# 
   725  0099                     	;# 
   726  009A                     	;# 
   727  009B                     	;# 
   728  009B                     	;# 
   729  009C                     	;# 
   730  009D                     	;# 
   731  009E                     	;# 
   732  010C                     	;# 
   733  010E                     	;# 
   734  0111                     	;# 
   735  0112                     	;# 
   736  0113                     	;# 
   737  0114                     	;# 
   738  0115                     	;# 
   739  0116                     	;# 
   740  0117                     	;# 
   741  0118                     	;# 
   742  0119                     	;# 
   743  011A                     	;# 
   744  011B                     	;# 
   745  011D                     	;# 
   746  011E                     	;# 
   747  018C                     	;# 
   748  018E                     	;# 
   749  0191                     	;# 
   750  0191                     	;# 
   751  0192                     	;# 
   752  0193                     	;# 
   753  0193                     	;# 
   754  0193                     	;# 
   755  0194                     	;# 
   756  0195                     	;# 
   757  0196                     	;# 
   758  0199                     	;# 
   759  019A                     	;# 
   760  019B                     	;# 
   761  019B                     	;# 
   762  019C                     	;# 
   763  019D                     	;# 
   764  019E                     	;# 
   765  019F                     	;# 
   766  020C                     	;# 
   767  020E                     	;# 
   768  0211                     	;# 
   769  0211                     	;# 
   770  0212                     	;# 
   771  0212                     	;# 
   772  0213                     	;# 
   773  0213                     	;# 
   774  0214                     	;# 
   775  0214                     	;# 
   776  0215                     	;# 
   777  0215                     	;# 
   778  0215                     	;# 
   779  0216                     	;# 
   780  0216                     	;# 
   781  0217                     	;# 
   782  0217                     	;# 
   783  0291                     	;# 
   784  0291                     	;# 
   785  0292                     	;# 
   786  0293                     	;# 
   787  0294                     	;# 
   788  0295                     	;# 
   789  0295                     	;# 
   790  0296                     	;# 
   791  0298                     	;# 
   792  0298                     	;# 
   793  0299                     	;# 
   794  029A                     	;# 
   795  029B                     	;# 
   796  029C                     	;# 
   797  029D                     	;# 
   798  029E                     	;# 
   799  0311                     	;# 
   800  0311                     	;# 
   801  0312                     	;# 
   802  0313                     	;# 
   803  0318                     	;# 
   804  0318                     	;# 
   805  0319                     	;# 
   806  031A                     	;# 
   807  038C                     	;# 
   808  038E                     	;# 
   809  0391                     	;# 
   810  0392                     	;# 
   811  0393                     	;# 
   812  039A                     	;# 
   813  039C                     	;# 
   814  039D                     	;# 
   815  039E                     	;# 
   816  039F                     	;# 
   817  0415                     	;# 
   818  0416                     	;# 
   819  0417                     	;# 
   820  041C                     	;# 
   821  041D                     	;# 
   822  041E                     	;# 
   823  0FE4                     	;# 
   824  0FE5                     	;# 
   825  0FE6                     	;# 
   826  0FE7                     	;# 
   827  0FE8                     	;# 
   828  0FE9                     	;# 
   829  0FEA                     	;# 
   830  0FEB                     	;# 
   831  0FED                     	;# 
   832  0FEE                     	;# 
   833  0FEF                     	;# 
   834  0000                     	;# 
   835  0001                     	;# 
   836  0002                     	;# 
   837  0003                     	;# 
   838  0004                     	;# 
   839  0005                     	;# 
   840  0006                     	;# 
   841  0007                     	;# 
   842  0008                     	;# 
   843  0009                     	;# 
   844  000A                     	;# 
   845  000B                     	;# 
   846  000C                     	;# 
   847  000E                     	;# 
   848  0011                     	;# 
   849  0012                     	;# 
   850  0013                     	;# 
   851  0015                     	;# 
   852  0016                     	;# 
   853  0016                     	;# 
   854  0017                     	;# 
   855  0018                     	;# 
   856  0019                     	;# 
   857  001A                     	;# 
   858  001B                     	;# 
   859  001C                     	;# 
   860  001E                     	;# 
   861  001F                     	;# 
   862  008C                     	;# 
   863  008E                     	;# 
   864  0091                     	;# 
   865  0092                     	;# 
   866  0093                     	;# 
   867  0095                     	;# 
   868  0096                     	;# 
   869  0097                     	;# 
   870  0098                     	;# 
   871  0099                     	;# 
   872  009A                     	;# 
   873  009B                     	;# 
   874  009B                     	;# 
   875  009C                     	;# 
   876  009D                     	;# 
   877  009E                     	;# 
   878  010C                     	;# 
   879  010E                     	;# 
   880  0111                     	;# 
   881  0112                     	;# 
   882  0113                     	;# 
   883  0114                     	;# 
   884  0115                     	;# 
   885  0116                     	;# 
   886  0117                     	;# 
   887  0118                     	;# 
   888  0119                     	;# 
   889  011A                     	;# 
   890  011B                     	;# 
   891  011D                     	;# 
   892  011E                     	;# 
   893  018C                     	;# 
   894  018E                     	;# 
   895  0191                     	;# 
   896  0191                     	;# 
   897  0192                     	;# 
   898  0193                     	;# 
   899  0193                     	;# 
   900  0193                     	;# 
   901  0194                     	;# 
   902  0195                     	;# 
   903  0196                     	;# 
   904  0199                     	;# 
   905  019A                     	;# 
   906  019B                     	;# 
   907  019B                     	;# 
   908  019C                     	;# 
   909  019D                     	;# 
   910  019E                     	;# 
   911  019F                     	;# 
   912  020C                     	;# 
   913  020E                     	;# 
   914  0211                     	;# 
   915  0211                     	;# 
   916  0212                     	;# 
   917  0212                     	;# 
   918  0213                     	;# 
   919  0213                     	;# 
   920  0214                     	;# 
   921  0214                     	;# 
   922  0215                     	;# 
   923  0215                     	;# 
   924  0215                     	;# 
   925  0216                     	;# 
   926  0216                     	;# 
   927  0217                     	;# 
   928  0217                     	;# 
   929  0291                     	;# 
   930  0291                     	;# 
   931  0292                     	;# 
   932  0293                     	;# 
   933  0294                     	;# 
   934  0295                     	;# 
   935  0295                     	;# 
   936  0296                     	;# 
   937  0298                     	;# 
   938  0298                     	;# 
   939  0299                     	;# 
   940  029A                     	;# 
   941  029B                     	;# 
   942  029C                     	;# 
   943  029D                     	;# 
   944  029E                     	;# 
   945  0311                     	;# 
   946  0311                     	;# 
   947  0312                     	;# 
   948  0313                     	;# 
   949  0318                     	;# 
   950  0318                     	;# 
   951  0319                     	;# 
   952  031A                     	;# 
   953  038C                     	;# 
   954  038E                     	;# 
   955  0391                     	;# 
   956  0392                     	;# 
   957  0393                     	;# 
   958  039A                     	;# 
   959  039C                     	;# 
   960  039D                     	;# 
   961  039E                     	;# 
   962  039F                     	;# 
   963  0415                     	;# 
   964  0416                     	;# 
   965  0417                     	;# 
   966  041C                     	;# 
   967  041D                     	;# 
   968  041E                     	;# 
   969  0FE4                     	;# 
   970  0FE5                     	;# 
   971  0FE6                     	;# 
   972  0FE7                     	;# 
   973  0FE8                     	;# 
   974  0FE9                     	;# 
   975  0FEA                     	;# 
   976  0FEB                     	;# 
   977  0FED                     	;# 
   978  0FEE                     	;# 
   979  0FEF                     	;# 
   980  0000                     	;# 
   981  0001                     	;# 
   982  0002                     	;# 
   983  0003                     	;# 
   984  0004                     	;# 
   985  0005                     	;# 
   986  0006                     	;# 
   987  0007                     	;# 
   988  0008                     	;# 
   989  0009                     	;# 
   990  000A                     	;# 
   991  000B                     	;# 
   992  000C                     	;# 
   993  000E                     	;# 
   994  0011                     	;# 
   995  0012                     	;# 
   996  0013                     	;# 
   997  0015                     	;# 
   998  0016                     	;# 
   999  0016                     	;# 
  1000  0017                     	;# 
  1001  0018                     	;# 
  1002  0019                     	;# 
  1003  001A                     	;# 
  1004  001B                     	;# 
  1005  001C                     	;# 
  1006  001E                     	;# 
  1007  001F                     	;# 
  1008  008C                     	;# 
  1009  008E                     	;# 
  1010  0091                     	;# 
  1011  0092                     	;# 
  1012  0093                     	;# 
  1013  0095                     	;# 
  1014  0096                     	;# 
  1015  0097                     	;# 
  1016  0098                     	;# 
  1017  0099                     	;# 
  1018  009A                     	;# 
  1019  009B                     	;# 
  1020  009B                     	;# 
  1021  009C                     	;# 
  1022  009D                     	;# 
  1023  009E                     	;# 
  1024  010C                     	;# 
  1025  010E                     	;# 
  1026  0111                     	;# 
  1027  0112                     	;# 
  1028  0113                     	;# 
  1029  0114                     	;# 
  1030  0115                     	;# 
  1031  0116                     	;# 
  1032  0117                     	;# 
  1033  0118                     	;# 
  1034  0119                     	;# 
  1035  011A                     	;# 
  1036  011B                     	;# 
  1037  011D                     	;# 
  1038  011E                     	;# 
  1039  018C                     	;# 
  1040  018E                     	;# 
  1041  0191                     	;# 
  1042  0191                     	;# 
  1043  0192                     	;# 
  1044  0193                     	;# 
  1045  0193                     	;# 
  1046  0193                     	;# 
  1047  0194                     	;# 
  1048  0195                     	;# 
  1049  0196                     	;# 
  1050  0199                     	;# 
  1051  019A                     	;# 
  1052  019B                     	;# 
  1053  019B                     	;# 
  1054  019C                     	;# 
  1055  019D                     	;# 
  1056  019E                     	;# 
  1057  019F                     	;# 
  1058  020C                     	;# 
  1059  020E                     	;# 
  1060  0211                     	;# 
  1061  0211                     	;# 
  1062  0212                     	;# 
  1063  0212                     	;# 
  1064  0213                     	;# 
  1065  0213                     	;# 
  1066  0214                     	;# 
  1067  0214                     	;# 
  1068  0215                     	;# 
  1069  0215                     	;# 
  1070  0215                     	;# 
  1071  0216                     	;# 
  1072  0216                     	;# 
  1073  0217                     	;# 
  1074  0217                     	;# 
  1075  0291                     	;# 
  1076  0291                     	;# 
  1077  0292                     	;# 
  1078  0293                     	;# 
  1079  0294                     	;# 
  1080  0295                     	;# 
  1081  0295                     	;# 
  1082  0296                     	;# 
  1083  0298                     	;# 
  1084  0298                     	;# 
  1085  0299                     	;# 
  1086  029A                     	;# 
  1087  029B                     	;# 
  1088  029C                     	;# 
  1089  029D                     	;# 
  1090  029E                     	;# 
  1091  0311                     	;# 
  1092  0311                     	;# 
  1093  0312                     	;# 
  1094  0313                     	;# 
  1095  0318                     	;# 
  1096  0318                     	;# 
  1097  0319                     	;# 
  1098  031A                     	;# 
  1099  038C                     	;# 
  1100  038E                     	;# 
  1101  0391                     	;# 
  1102  0392                     	;# 
  1103  0393                     	;# 
  1104  039A                     	;# 
  1105  039C                     	;# 
  1106  039D                     	;# 
  1107  039E                     	;# 
  1108  039F                     	;# 
  1109  0415                     	;# 
  1110  0416                     	;# 
  1111  0417                     	;# 
  1112  041C                     	;# 
  1113  041D                     	;# 
  1114  041E                     	;# 
  1115  0FE4                     	;# 
  1116  0FE5                     	;# 
  1117  0FE6                     	;# 
  1118  0FE7                     	;# 
  1119  0FE8                     	;# 
  1120  0FE9                     	;# 
  1121  0FEA                     	;# 
  1122  0FEB                     	;# 
  1123  0FED                     	;# 
  1124  0FEE                     	;# 
  1125  0FEF                     	;# 
  1126                           
  1127                           	psect	idataBANK0
  1128  06FE                     __pidataBANK0:	
  1129                           
  1130                           ;initializer for _LIN_timeout
  1131  06FE  340A               	retlw	10
  1132                           
  1133                           	psect	stringtext1
  1134  05E6                     __pstringtext1:	
  1135  05E6                     _scheduleTable:	
  1136  05E6  3400               	retlw	0
  1137  05E7  3400               	retlw	0
  1138  05E8  3401               	retlw	1
  1139  05E9  3400               	retlw	0
  1140  05EA  3464               	retlw	100
  1141  05EB  3443               	retlw	low (_UNLOCK_Data| 0)
  1142  05EC  3401               	retlw	1
  1143  05ED  3400               	retlw	0
  1144  05EE  3401               	retlw	1
  1145  05EF  3400               	retlw	0
  1146  05F0  3414               	retlw	20
  1147  05F1  3442               	retlw	low (_RSSI_Data| 0)
  1148  05F2  3402               	retlw	2
  1149  05F3  3401               	retlw	1
  1150  05F4  3408               	retlw	8
  1151  05F5  3464               	retlw	100
  1152  05F6  3400               	retlw	0
  1153  05F7  34BC               	retlw	low (_LFRX_Data| 0)
  1154  05F8  3403               	retlw	3
  1155  05F9  3400               	retlw	0
  1156  05FA  3401               	retlw	1
  1157  05FB  3405               	retlw	5
  1158  05FC  3414               	retlw	20
  1159  05FD  3441               	retlw	low (_SIGNAL_Data| 0)
  1160  05FE                     __end_of_scheduleTable:	
  1161                           
  1162                           	psect	nvBANK0
  1163  005B                     __pnvBANK0:	
  1164  005B                     _schedule:	
  1165  005B                     	ds	2
  1166  005D                     _TMR2_InterruptHandler:	
  1167  005D                     	ds	2
  1168  005F                     _EUSART_FramingErrorHandler:	
  1169  005F                     	ds	2
  1170  0061                     _EUSART_RxDefaultInterruptHandler:	
  1171  0061                     	ds	2
  1172  0063                     _EUSART_TxDefaultInterruptHandler:	
  1173  0063                     	ds	2
  1174  0065                     _scheduleLength:	
  1175  0065                     	ds	1
  1176  0066                     _eusartTxBufferRemaining:	
  1177  0066                     	ds	1
  1178                           
  1179                           	psect	nvBANK1
  1180  00CF                     __pnvBANK1:	
  1181  00CF                     _LIN_processData:	
  1182  00CF                     	ds	2
  1183  00D1                     _EUSART_ErrorHandler:	
  1184  00D1                     	ds	2
  1185  00D3                     _EUSART_OverrunErrorHandler:	
  1186  00D3                     	ds	2
  1187  00D5                     _LIN_enablePeriodTx:	
  1188  00D5                     	ds	1
  1189  001C                     _T2CONbits	set	28
  1190  001C                     _T2CON	set	28
  1191  001A                     _TMR2	set	26
  1192  001B                     _PR2	set	27
  1193  0011                     _PIR1bits	set	17
  1194  000B                     _INTCONbits	set	11
  1195  0095                     _OPTION_REGbits	set	149
  1196  008E                     _TRISC	set	142
  1197  008C                     _TRISA	set	140
  1198  0097                     _WDTCON	set	151
  1199  0098                     _OSCTUNE	set	152
  1200  0099                     _OSCCON	set	153
  1201  0091                     _PIE1bits	set	145
  1202  011E                     _APFCON1	set	286
  1203  011D                     _APFCON0	set	285
  1204  010E                     _LATC	set	270
  1205  010C                     _LATA	set	268
  1206  0116                     _BORCON	set	278
  1207  018C                     _ANSELA	set	396
  1208  018E                     _ANSELC	set	398
  1209  0199                     _RCREG	set	409
  1210  019D                     _RCSTAbits	set	413
  1211  019A                     _TXREG	set	410
  1212  019E                     _TXSTAbits	set	414
  1213  019C                     _SPBRGH	set	412
  1214  019B                     _SPBRGL	set	411
  1215  019E                     _TXSTA	set	414
  1216  019D                     _RCSTA	set	413
  1217  019F                     _BAUDCON	set	415
  1218  020E                     _WPUC	set	526
  1219  020C                     _WPUA	set	524
  1220                           
  1221                           ; #config settings
  1222  0000                     
  1223                           	psect	cinit
  1224  0032                     start_initialization:	
  1225  0032                     __initialization:	
  1226                           
  1227                           ; Initialize objects allocated to BANK0
  1228  0032  3186  26FE  3180   	fcall	__pidataBANK0	;fetch initializer
  1229  0035  00E7               	movwf	__pdataBANK0& (0+127)
  1230                           
  1231                           ; Clear objects allocated to BANK0
  1232  0036  3020               	movlw	low __pbssBANK0
  1233  0037  0084               	movwf	4
  1234  0038  3000               	movlw	high __pbssBANK0
  1235  0039  0085               	movwf	5
  1236  003A  3024               	movlw	36
  1237  003B  3186  26B1  3180   	fcall	clear_ram0
  1238                           
  1239                           ; Clear objects allocated to BANK1
  1240  003E  30A0               	movlw	low __pbssBANK1
  1241  003F  0084               	movwf	4
  1242  0040  3000               	movlw	high __pbssBANK1
  1243  0041  0085               	movwf	5
  1244  0042  3024               	movlw	36
  1245  0043  3186  26B1         	fcall	clear_ram0
  1246  0045                     end_of_initialization:	
  1247                           ;End of C runtime variable initialization code
  1248                           
  1249  0045                     __end_of__initialization:	
  1250  0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1251  0046  0020               	movlb	0
  1252  0047  3185  2D7A         	ljmp	_main	;jump to C main() function
  1253                           
  1254                           	psect	bssBANK0
  1255  0020                     __pbssBANK0:	
  1256  0020                     _eusartRxStatusBuffer:	
  1257  0020                     	ds	8
  1258  0028                     LIN_sendPeriodicTx@scheduleIndex:	
  1259  0028                     	ds	1
  1260  0029                     LIN_receivePacket@rxIndex:	
  1261  0029                     	ds	1
  1262  002A                     LIN_handler@LIN_state:	
  1263  002A                     	ds	1
  1264  002B                     _LIN_periodCallBack:	
  1265  002B                     	ds	1
  1266  002C                     _LIN_timerCallBack:	
  1267  002C                     	ds	1
  1268  002D                     _LIN_timerRunning:	
  1269  002D                     	ds	1
  1270  002E                     _LIN_period:	
  1271  002E                     	ds	1
  1272  002F                     _LIN_txReady:	
  1273  002F                     	ds	1
  1274  0030                     _eusartRxLastError:	
  1275  0030                     	ds	1
  1276  0031                     _eusartRxCount:	
  1277  0031                     	ds	1
  1278  0032                     _eusartRxTail:	
  1279  0032                     	ds	1
  1280  0033                     _eusartRxHead:	
  1281  0033                     	ds	1
  1282  0034                     _eusartTxTail:	
  1283  0034                     	ds	1
  1284  0035                     _eusartTxHead:	
  1285  0035                     	ds	1
  1286  0036                     _LIN_packet:	
  1287  0036                     	ds	11
  1288  0041                     _SIGNAL_Data:	
  1289  0041                     	ds	1
  1290  0042                     _RSSI_Data:	
  1291  0042                     	ds	1
  1292  0043                     _UNLOCK_Data:	
  1293  0043                     	ds	1
  1294                           
  1295                           	psect	dataBANK0
  1296  0067                     __pdataBANK0:	
  1297  0067                     _LIN_timeout:	
  1298  0067                     	ds	1
  1299                           
  1300                           	psect	bssBANK1
  1301  00A0                     __pbssBANK1:	
  1302  00A0                     _eusartRxBuffer:	
  1303  00A0                     	ds	8
  1304  00A8                     _eusartTxBuffer:	
  1305  00A8                     	ds	8
  1306  00B0                     _LIN_rxPacket:	
  1307  00B0                     	ds	12
  1308  00BC                     _LFRX_Data:	
  1309  00BC                     	ds	8
  1310                           
  1311                           	psect	clrtext
  1312  06B1                     clear_ram0:	
  1313                           ;	Called with FSR0 containing the base address, and
  1314                           ;	WREG with the size to clear
  1315                           
  1316  06B1  0064               	clrwdt	;clear the watchdog before getting into this loop
  1317  06B2                     clrloop0:	
  1318  06B2  0180               	clrf	0	;clear RAM location pointed to by FSR
  1319  06B3  3101               	addfsr 0,1
  1320  06B4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1321  06B5  2EB2               	goto	clrloop0	;have we reached the end yet?
  1322  06B6  3400               	retlw	0	;all done for this memory range, return
  1323                           
  1324                           	psect	cstackBANK1
  1325  00C4                     __pcstackBANK1:	
  1326  00C4                     processLIN@tempRxData:	
  1327                           
  1328                           ; 8 bytes @ 0x0
  1329  00C4                     	ds	8
  1330  00CC                     processLIN@cmd:	
  1331                           
  1332                           ; 1 bytes @ 0x8
  1333  00CC                     	ds	1
  1334  00CD                     ??_main:	
  1335                           
  1336                           ; 1 bytes @ 0x9
  1337  00CD                     	ds	1
  1338  00CE                     main@data_to_send:	
  1339                           
  1340                           ; 1 bytes @ 0xA
  1341  00CE                     	ds	1
  1342                           
  1343                           	psect	cstackCOMMON
  1344  0070                     __pcstackCOMMON:	
  1345  0070                     ?_TMR2_ISR:	
  1346  0070                     ?_PIN_MANAGER_Initialize:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349  0070                     ?_OSCILLATOR_Initialize:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352  0070                     ?_WDT_Initialize:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355  0070                     ?_TMR2_Initialize:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358  0070                     ?_EUSART_Initialize:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361  0070                     ?_LIN_Master_Initialize:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364  0070                     ?_LIN_handler:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  0070                     ?_processLIN:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370  0070                     ?_EUSART_Receive_ISR:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373  0070                     ?_EUSART_Transmit_ISR:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376  0070                     ??_EUSART_Transmit_ISR:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391  0070                     ?_EUSART_DefaultErrorHandler:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394  0070                     ?_EUSART_RxDataHandler:	
  1395                           ; 1 bytes @ 0x0
  1396                           
  1397  0070                     ??_EUSART_RxDataHandler:	
  1398                           ; 1 bytes @ 0x0
  1399                           
  1400  0070                     ?_TMR2_DefaultInterruptHandler:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403  0070                     ??_TMR2_DefaultInterruptHandler:	
  1404                           ; 1 bytes @ 0x0
  1405                           
  1406  0070                     ?_LIN_getPacket:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409  0070                     ?_LIN_stopTimer:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412  0070                     ?_LIN_setTimerHandler:	
  1413                           ; 1 bytes @ 0x0
  1414                           
  1415  0070                     ?_LIN_startPeriod:	
  1416                           ; 1 bytes @ 0x0
  1417                           
  1418  0070                     ?_LIN_calcParity:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0070                     ?_LIN_disableRx:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424  0070                     ?_LIN_sendPacket:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427  0070                     ?_LIN_startTimer:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430  0070                     ?_LIN_enableRx:	
  1431                           ; 1 bytes @ 0x0
  1432                           
  1433  0070                     ?_LIN_receivePacket:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436  0070                     ?_LIN_sendBreak:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439  0070                     ?_LIN_sendPeriodicTx:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442  0070                     ?_INTERRUPT_InterruptManager:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0070                     ?_SYSTEM_Initialize:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448  0070                     ?_main:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451  0070                     ?_EUSART_is_rx_ready:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454  0070                     ?_EUSART_Read:	
  1455                           ; 1 bytes @ 0x0
  1456                           
  1457  0070                     ?_EUSART_Write:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460  0070                     ?_TMR2_StartTimer:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463  0070                     ?_TMR2_WriteTimer:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466  0070                     ?_LIN_timerHandler:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469  0070                     ?i1_LIN_calcParity:	
  1470                           ; 1 bytes @ 0x0
  1471                           
  1472  0070                     ??i1_LIN_calcParity:	
  1473                           ; 1 bytes @ 0x0
  1474                           
  1475  0070                     ?i1_LIN_getChecksum:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478  0070                     ?i1_LIN_stopTimer:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481  0070                     ??i1_LIN_stopTimer:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484  0070                     ?___wmul:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487  0070                     i1LIN_getChecksum@data:	
  1488                           ; 2 bytes @ 0x0
  1489                           
  1490  0070                     ___wmul@multiplier:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493                           
  1494                           ; 2 bytes @ 0x0
  1495  0070                     	ds	1
  1496  0071                     ??_EUSART_Receive_ISR:	
  1497  0071                     ??_EUSART_DefaultErrorHandler:	
  1498                           ; 1 bytes @ 0x1
  1499                           
  1500  0071                     ??i1_LIN_getChecksum:	
  1501                           ; 1 bytes @ 0x1
  1502                           
  1503  0071                     i1LIN_calcParity@CMD:	
  1504                           ; 1 bytes @ 0x1
  1505                           
  1506                           
  1507                           ; 1 bytes @ 0x1
  1508  0071                     	ds	1
  1509  0072                     i1LIN_calcParity@PID:	
  1510  0072                     i1LIN_getChecksum@length:	
  1511                           ; 1 bytes @ 0x2
  1512                           
  1513  0072                     ___wmul@multiplicand:	
  1514                           ; 1 bytes @ 0x2
  1515                           
  1516                           
  1517                           ; 2 bytes @ 0x2
  1518  0072                     	ds	1
  1519  0073                     i1LIN_getChecksum@i:	
  1520                           
  1521                           ; 1 bytes @ 0x3
  1522  0073                     	ds	1
  1523  0074                     ??___wmul:	
  1524  0074                     ___wmul@product:	
  1525                           ; 1 bytes @ 0x4
  1526                           
  1527  0074                     i1LIN_getChecksum@checksum:	
  1528                           ; 2 bytes @ 0x4
  1529                           
  1530                           
  1531                           ; 2 bytes @ 0x4
  1532  0074                     	ds	2
  1533  0076                     ?i1_LIN_queuePacket:	
  1534  0076                     i1LIN_queuePacket@data:	
  1535                           ; 1 bytes @ 0x6
  1536                           
  1537                           
  1538                           ; 1 bytes @ 0x6
  1539  0076                     	ds	1
  1540  0077                     ??i1_LIN_queuePacket:	
  1541                           
  1542                           ; 1 bytes @ 0x7
  1543  0077                     	ds	4
  1544  007B                     ??_LIN_sendPeriodicTx:	
  1545                           
  1546                           ; 1 bytes @ 0xB
  1547  007B                     	ds	3
  1548  007E                     ??_TMR2_ISR:	
  1549                           
  1550                           	psect	cstackBANK0
  1551  0044                     __pcstackBANK0:	
  1552                           ; 1 bytes @ 0xE
  1553                           
  1554  0044                     i1LIN_queuePacket@cmd:	
  1555                           
  1556                           ; 1 bytes @ 0x0
  1557  0044                     	ds	1
  1558  0045                     i1LIN_queuePacket@i:	
  1559                           
  1560                           ; 1 bytes @ 0x1
  1561  0045                     	ds	1
  1562  0046                     i1LIN_queuePacket@tempSchedule:	
  1563                           
  1564                           ; 2 bytes @ 0x2
  1565  0046                     	ds	2
  1566  0048                     LIN_sendPeriodicTx@periodicTx:	
  1567                           
  1568                           ; 2 bytes @ 0x4
  1569  0048                     	ds	2
  1570  004A                     ??_LIN_timerHandler:	
  1571                           
  1572                           ; 1 bytes @ 0x6
  1573  004A                     	ds	1
  1574  004B                     ??_INTERRUPT_InterruptManager:	
  1575                           
  1576                           ; 1 bytes @ 0x7
  1577  004B                     	ds	1
  1578  004C                     ??_PIN_MANAGER_Initialize:	
  1579  004C                     ??_OSCILLATOR_Initialize:	
  1580                           ; 1 bytes @ 0x8
  1581                           
  1582  004C                     ??_WDT_Initialize:	
  1583                           ; 1 bytes @ 0x8
  1584                           
  1585  004C                     ?_EUSART_SetRxInterruptHandler:	
  1586                           ; 1 bytes @ 0x8
  1587                           
  1588  004C                     ?_EUSART_SetTxInterruptHandler:	
  1589                           ; 1 bytes @ 0x8
  1590                           
  1591  004C                     ?_EUSART_SetFramingErrorHandler:	
  1592                           ; 1 bytes @ 0x8
  1593                           
  1594  004C                     ?_EUSART_SetOverrunErrorHandler:	
  1595                           ; 1 bytes @ 0x8
  1596                           
  1597  004C                     ?_EUSART_SetErrorHandler:	
  1598                           ; 1 bytes @ 0x8
  1599                           
  1600  004C                     ?_TMR2_SetInterruptHandler:	
  1601                           ; 1 bytes @ 0x8
  1602                           
  1603  004C                     ??_LIN_stopTimer:	
  1604                           ; 1 bytes @ 0x8
  1605                           
  1606  004C                     ??_LIN_startPeriod:	
  1607                           ; 1 bytes @ 0x8
  1608                           
  1609  004C                     ??_LIN_calcParity:	
  1610                           ; 1 bytes @ 0x8
  1611                           
  1612  004C                     ?_LIN_getChecksum:	
  1613                           ; 1 bytes @ 0x8
  1614                           
  1615  004C                     ??_LIN_disableRx:	
  1616                           ; 1 bytes @ 0x8
  1617                           
  1618  004C                     ?_memset:	
  1619                           ; 1 bytes @ 0x8
  1620                           
  1621  004C                     ??_LIN_enableRx:	
  1622                           ; 1 bytes @ 0x8
  1623                           
  1624  004C                     ??_LIN_sendBreak:	
  1625                           ; 1 bytes @ 0x8
  1626                           
  1627  004C                     ??_EUSART_is_rx_ready:	
  1628                           ; 1 bytes @ 0x8
  1629                           
  1630  004C                     ??_EUSART_Read:	
  1631                           ; 1 bytes @ 0x8
  1632                           
  1633  004C                     ??_EUSART_Write:	
  1634                           ; 1 bytes @ 0x8
  1635                           
  1636  004C                     ??_TMR2_StartTimer:	
  1637                           ; 1 bytes @ 0x8
  1638                           
  1639  004C                     ??_TMR2_WriteTimer:	
  1640                           ; 1 bytes @ 0x8
  1641                           
  1642  004C                     TMR2_WriteTimer@timerVal:	
  1643                           ; 1 bytes @ 0x8
  1644                           
  1645  004C                     LIN_getChecksum@data:	
  1646                           ; 1 bytes @ 0x8
  1647                           
  1648  004C                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1649                           ; 1 bytes @ 0x8
  1650                           
  1651  004C                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1652                           ; 2 bytes @ 0x8
  1653                           
  1654  004C                     EUSART_SetErrorHandler@interruptHandler:	
  1655                           ; 2 bytes @ 0x8
  1656                           
  1657  004C                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1658                           ; 2 bytes @ 0x8
  1659                           
  1660  004C                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1661                           ; 2 bytes @ 0x8
  1662                           
  1663  004C                     TMR2_SetInterruptHandler@InterruptHandler:	
  1664                           ; 2 bytes @ 0x8
  1665                           
  1666  004C                     memset@c:	
  1667                           ; 2 bytes @ 0x8
  1668                           
  1669                           
  1670                           ; 2 bytes @ 0x8
  1671  004C                     	ds	1
  1672  004D                     ??_LIN_getChecksum:	
  1673  004D                     ??_LIN_startTimer:	
  1674                           ; 1 bytes @ 0x9
  1675                           
  1676  004D                     EUSART_Read@readValue:	
  1677                           ; 1 bytes @ 0x9
  1678                           
  1679  004D                     EUSART_Write@txData:	
  1680                           ; 1 bytes @ 0x9
  1681                           
  1682  004D                     LIN_calcParity@CMD:	
  1683                           ; 1 bytes @ 0x9
  1684                           
  1685                           
  1686                           ; 1 bytes @ 0x9
  1687  004D                     	ds	1
  1688  004E                     ??_TMR2_Initialize:	
  1689  004E                     ??_EUSART_Initialize:	
  1690                           ; 1 bytes @ 0xA
  1691                           
  1692  004E                     ??_EUSART_SetRxInterruptHandler:	
  1693                           ; 1 bytes @ 0xA
  1694                           
  1695  004E                     ??_EUSART_SetTxInterruptHandler:	
  1696                           ; 1 bytes @ 0xA
  1697                           
  1698  004E                     ??_EUSART_SetFramingErrorHandler:	
  1699                           ; 1 bytes @ 0xA
  1700                           
  1701  004E                     ??_EUSART_SetOverrunErrorHandler:	
  1702                           ; 1 bytes @ 0xA
  1703                           
  1704  004E                     ??_EUSART_SetErrorHandler:	
  1705                           ; 1 bytes @ 0xA
  1706                           
  1707  004E                     ??_TMR2_SetInterruptHandler:	
  1708                           ; 1 bytes @ 0xA
  1709                           
  1710  004E                     ?_LIN_init:	
  1711                           ; 1 bytes @ 0xA
  1712                           
  1713  004E                     ??_LIN_setTimerHandler:	
  1714                           ; 1 bytes @ 0xA
  1715                           
  1716  004E                     ??_LIN_sendPacket:	
  1717                           ; 1 bytes @ 0xA
  1718                           
  1719  004E                     LIN_calcParity@PID:	
  1720                           ; 1 bytes @ 0xA
  1721                           
  1722  004E                     LIN_getChecksum@length:	
  1723                           ; 1 bytes @ 0xA
  1724                           
  1725  004E                     LIN_startTimer@timeout:	
  1726                           ; 1 bytes @ 0xA
  1727                           
  1728  004E                     LIN_init@table:	
  1729                           ; 1 bytes @ 0xA
  1730                           
  1731  004E                     memset@n:	
  1732                           ; 2 bytes @ 0xA
  1733                           
  1734                           
  1735                           ; 2 bytes @ 0xA
  1736  004E                     	ds	1
  1737  004F                     LIN_sendPacket@i:	
  1738  004F                     LIN_getChecksum@i:	
  1739                           ; 1 bytes @ 0xB
  1740                           
  1741                           
  1742                           ; 1 bytes @ 0xB
  1743  004F                     	ds	1
  1744  0050                     ??_memset:	
  1745  0050                     LIN_init@processData:	
  1746                           ; 1 bytes @ 0xC
  1747                           
  1748  0050                     LIN_getChecksum@checksum:	
  1749                           ; 2 bytes @ 0xC
  1750                           
  1751                           
  1752                           ; 2 bytes @ 0xC
  1753  0050                     	ds	1
  1754  0051                     memset@p:	
  1755                           
  1756                           ; 1 bytes @ 0xD
  1757  0051                     	ds	1
  1758  0052                     ?_LIN_queuePacket:	
  1759  0052                     ??_LIN_init:	
  1760                           ; 1 bytes @ 0xE
  1761                           
  1762  0052                     ??_LIN_receivePacket:	
  1763                           ; 1 bytes @ 0xE
  1764                           
  1765  0052                     LIN_queuePacket@data:	
  1766                           ; 1 bytes @ 0xE
  1767                           
  1768  0052                     memset@p1:	
  1769                           ; 1 bytes @ 0xE
  1770                           
  1771                           
  1772                           ; 1 bytes @ 0xE
  1773  0052                     	ds	1
  1774  0053                     ??_LIN_queuePacket:	
  1775  0053                     ??_LIN_getPacket:	
  1776                           ; 1 bytes @ 0xF
  1777                           
  1778  0053                     LIN_init@tableLength:	
  1779                           ; 1 bytes @ 0xF
  1780                           
  1781                           
  1782                           ; 1 bytes @ 0xF
  1783  0053                     	ds	1
  1784  0054                     ??_LIN_Master_Initialize:	
  1785  0054                     ??_SYSTEM_Initialize:	
  1786                           ; 1 bytes @ 0x10
  1787                           
  1788  0054                     LIN_getPacket@data:	
  1789                           ; 1 bytes @ 0x10
  1790                           
  1791                           
  1792                           ; 1 bytes @ 0x10
  1793  0054                     	ds	1
  1794  0055                     LIN_getPacket@cmd:	
  1795                           
  1796                           ; 1 bytes @ 0x11
  1797  0055                     	ds	1
  1798  0056                     ??_processLIN:	
  1799                           
  1800                           ; 1 bytes @ 0x12
  1801  0056                     	ds	1
  1802  0057                     ??_LIN_handler:	
  1803  0057                     LIN_queuePacket@cmd:	
  1804                           ; 1 bytes @ 0x13
  1805                           
  1806                           
  1807                           ; 1 bytes @ 0x13
  1808  0057                     	ds	1
  1809  0058                     LIN_queuePacket@i:	
  1810                           
  1811                           ; 1 bytes @ 0x14
  1812  0058                     	ds	1
  1813  0059                     LIN_queuePacket@tempSchedule:	
  1814                           
  1815                           ; 2 bytes @ 0x15
  1816  0059                     	ds	2
  1817                           
  1818                           	psect	maintext
  1819  057A                     __pmaintext:	
  1820 ;;
  1821 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1822 ;;
  1823 ;; *************** function _main *****************
  1824 ;; Defined at:
  1825 ;;		line 49 in file "main.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  data_to_send    1   10[BANK1 ] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : B1F/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1840 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1841 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1842 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1843 ;;Total ram usage:        2 bytes
  1844 ;; Hardware stack levels required when called:   11
  1845 ;; This function calls:
  1846 ;;		_LIN_Master_Initialize
  1847 ;;		_LIN_handler
  1848 ;;		_LIN_queuePacket
  1849 ;;		_SYSTEM_Initialize
  1850 ;;		_processLIN
  1851 ;; This function is called by:
  1852 ;;		Startup code after reset
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           
  1857                           ;psect for function _main
  1858  057A                     _main:	
  1859                           
  1860                           ;main.c: 52: SYSTEM_Initialize();
  1861                           
  1862                           ;incstack = 0
  1863                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1864  057A  3186  2643  3185   	fcall	_SYSTEM_Initialize
  1865                           
  1866                           ;main.c: 70: uint8_t data_to_send = 0x34;
  1867  057D  3034               	movlw	52
  1868  057E  0021               	movlb	1	; select bank1
  1869  057F  00CD               	movwf	??_main^(0+128)
  1870  0580  084D               	movf	??_main^(0+128),w
  1871  0581  00CE               	movwf	main@data_to_send^(0+128)
  1872                           
  1873                           ;main.c: 72: LIN_Master_Initialize();
  1874  0582  3186  2677  3185   	fcall	_LIN_Master_Initialize
  1875  0585                     l2804:	
  1876                           ;main.c: 73: while (1)
  1877                           
  1878                           
  1879                           ;main.c: 74: {
  1880                           ;main.c: 76: LIN_queuePacket(0, &data_to_send);
  1881  0585  30CE               	movlw	(low (main@data_to_send| 0))& (0+255)
  1882  0586  0021               	movlb	1	; select bank1
  1883  0587  00CD               	movwf	??_main^(0+128)
  1884  0588  084D               	movf	??_main^(0+128),w
  1885  0589  0020               	movlb	0	; select bank0
  1886  058A  00D2               	movwf	LIN_queuePacket@data
  1887  058B  3000               	movlw	0
  1888  058C  3180  2049  3185   	fcall	_LIN_queuePacket
  1889                           
  1890                           ;main.c: 77: LIN_handler();
  1891  058F  3183  2330  3185   	fcall	_LIN_handler
  1892                           
  1893                           ;main.c: 78: processLIN();
  1894  0592  3185  25FE  3185   	fcall	_processLIN
  1895  0595  2D85               	goto	l2804
  1896  0596                     __end_of_main:	
  1897                           
  1898                           	psect	text1
  1899  0643                     __ptext1:	
  1900 ;; *************** function _SYSTEM_Initialize *****************
  1901 ;; Defined at:
  1902 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, status,0, pclath, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1920 ;;Total ram usage:        0 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; Hardware stack levels required when called:   10
  1923 ;; This function calls:
  1924 ;;		_EUSART_Initialize
  1925 ;;		_LIN_Master_Initialize
  1926 ;;		_OSCILLATOR_Initialize
  1927 ;;		_PIN_MANAGER_Initialize
  1928 ;;		_TMR2_Initialize
  1929 ;;		_WDT_Initialize
  1930 ;; This function is called by:
  1931 ;;		_main
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function _SYSTEM_Initialize
  1937  0643                     _SYSTEM_Initialize:	
  1938                           
  1939                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  1940                           
  1941                           ;incstack = 0
  1942                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1943  0643  3186  262D  3186   	fcall	_PIN_MANAGER_Initialize
  1944                           
  1945                           ;mcc.c: 54: OSCILLATOR_Initialize();
  1946  0646  3186  26AA  3186   	fcall	_OSCILLATOR_Initialize
  1947                           
  1948                           ;mcc.c: 55: WDT_Initialize();
  1949  0649  3186  26DE  3186   	fcall	_WDT_Initialize
  1950                           
  1951                           ;mcc.c: 56: TMR2_Initialize();
  1952  064C  3186  2655  3186   	fcall	_TMR2_Initialize
  1953                           
  1954                           ;mcc.c: 57: EUSART_Initialize();
  1955  064F  3183  23A0  3186   	fcall	_EUSART_Initialize
  1956                           
  1957                           ;mcc.c: 58: LIN_Master_Initialize();
  1958  0652  3186  2677         	fcall	_LIN_Master_Initialize
  1959  0654  0008               	return
  1960  0655                     __end_of_SYSTEM_Initialize:	
  1961                           
  1962                           	psect	text2
  1963  06DE                     __ptext2:	
  1964 ;; *************** function _WDT_Initialize *****************
  1965 ;; Defined at:
  1966 ;;		line 71 in file "mcc_generated_files/mcc.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    6
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_SYSTEM_Initialize
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function _WDT_Initialize
  1996  06DE                     _WDT_Initialize:	
  1997                           
  1998                           ;mcc.c: 74: WDTCON = 0x16;
  1999                           
  2000                           ;incstack = 0
  2001                           ; Regs used in _WDT_Initialize: [wreg]
  2002  06DE  3016               	movlw	22
  2003  06DF  0021               	movlb	1	; select bank1
  2004  06E0  0097               	movwf	23	;volatile
  2005  06E1  0008               	return
  2006  06E2                     __end_of_WDT_Initialize:	
  2007                           
  2008                           	psect	text3
  2009  0655                     __ptext3:	
  2010 ;; *************** function _TMR2_Initialize *****************
  2011 ;; Defined at:
  2012 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0, pclath, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2030 ;;Total ram usage:        0 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    7
  2033 ;; This function calls:
  2034 ;;		_TMR2_SetInterruptHandler
  2035 ;; This function is called by:
  2036 ;;		_SYSTEM_Initialize
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function _TMR2_Initialize
  2042  0655                     _TMR2_Initialize:	
  2043                           
  2044                           ;tmr2.c: 69: PR2 = 0xF9;
  2045                           
  2046                           ;incstack = 0
  2047                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2048  0655  30F9               	movlw	249
  2049  0656  0020               	movlb	0	; select bank0
  2050  0657  009B               	movwf	27	;volatile
  2051                           
  2052                           ;tmr2.c: 72: TMR2 = 0x00;
  2053  0658  019A               	clrf	26	;volatile
  2054                           
  2055                           ;tmr2.c: 75: PIR1bits.TMR2IF = 0;
  2056  0659  1091               	bcf	17,1	;volatile
  2057                           
  2058                           ;tmr2.c: 78: PIE1bits.TMR2IE = 1;
  2059  065A  0021               	movlb	1	; select bank1
  2060  065B  1491               	bsf	17,1	;volatile
  2061                           
  2062                           ;tmr2.c: 81: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  2063  065C  30FF               	movlw	low _TMR2_DefaultInterruptHandler
  2064  065D  0020               	movlb	0	; select bank0
  2065  065E  00CC               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2066  065F  3006               	movlw	high _TMR2_DefaultInterruptHandler
  2067  0660  00CD               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2068  0661  3186  26B7         	fcall	_TMR2_SetInterruptHandler
  2069                           
  2070                           ;tmr2.c: 84: T2CON = 0x1D;
  2071  0663  301D               	movlw	29
  2072  0664  0020               	movlb	0	; select bank0
  2073  0665  009C               	movwf	28	;volatile
  2074  0666  0008               	return
  2075  0667                     __end_of_TMR2_Initialize:	
  2076                           
  2077                           	psect	text4
  2078  062D                     __ptext4:	
  2079 ;; *************** function _PIN_MANAGER_Initialize *****************
  2080 ;; Defined at:
  2081 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, status,2
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2099 ;;Total ram usage:        0 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    6
  2102 ;; This function calls:
  2103 ;;		Nothing
  2104 ;; This function is called by:
  2105 ;;		_SYSTEM_Initialize
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           
  2110                           ;psect for function _PIN_MANAGER_Initialize
  2111  062D                     _PIN_MANAGER_Initialize:	
  2112                           
  2113                           ;pin_manager.c: 62: LATA = 0x00;
  2114                           
  2115                           ;incstack = 0
  2116                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2117  062D  0022               	movlb	2	; select bank2
  2118  062E  018C               	clrf	12	;volatile
  2119                           
  2120                           ;pin_manager.c: 63: LATC = 0x00;
  2121  062F  018E               	clrf	14	;volatile
  2122                           
  2123                           ;pin_manager.c: 68: TRISA = 0x3F;
  2124  0630  303F               	movlw	63
  2125  0631  0021               	movlb	1	; select bank1
  2126  0632  008C               	movwf	12	;volatile
  2127                           
  2128                           ;pin_manager.c: 69: TRISC = 0x3F;
  2129  0633  303F               	movlw	63
  2130  0634  008E               	movwf	14	;volatile
  2131                           
  2132                           ;pin_manager.c: 74: ANSELC = 0x0F;
  2133  0635  300F               	movlw	15
  2134  0636  0023               	movlb	3	; select bank3
  2135  0637  008E               	movwf	14	;volatile
  2136                           
  2137                           ;pin_manager.c: 75: ANSELA = 0x17;
  2138  0638  3017               	movlw	23
  2139  0639  008C               	movwf	12	;volatile
  2140                           
  2141                           ;pin_manager.c: 80: WPUA = 0x00;
  2142  063A  0024               	movlb	4	; select bank4
  2143  063B  018C               	clrf	12	;volatile
  2144                           
  2145                           ;pin_manager.c: 81: WPUC = 0x00;
  2146  063C  018E               	clrf	14	;volatile
  2147                           
  2148                           ;pin_manager.c: 82: OPTION_REGbits.nWPUEN = 1;
  2149  063D  0021               	movlb	1	; select bank1
  2150  063E  1795               	bsf	21,7	;volatile
  2151                           
  2152                           ;pin_manager.c: 89: APFCON0 = 0x00;
  2153  063F  0022               	movlb	2	; select bank2
  2154  0640  019D               	clrf	29	;volatile
  2155                           
  2156                           ;pin_manager.c: 90: APFCON1 = 0x00;
  2157  0641  019E               	clrf	30	;volatile
  2158  0642  0008               	return
  2159  0643                     __end_of_PIN_MANAGER_Initialize:	
  2160                           
  2161                           	psect	text5
  2162  06AA                     __ptext5:	
  2163 ;; *************** function _OSCILLATOR_Initialize *****************
  2164 ;; Defined at:
  2165 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;		None
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2183 ;;Total ram usage:        0 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    6
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_SYSTEM_Initialize
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           
  2194                           ;psect for function _OSCILLATOR_Initialize
  2195  06AA                     _OSCILLATOR_Initialize:	
  2196                           
  2197                           ;mcc.c: 64: OSCCON = 0x7A;
  2198                           
  2199                           ;incstack = 0
  2200                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2201  06AA  307A               	movlw	122
  2202  06AB  0021               	movlb	1	; select bank1
  2203  06AC  0099               	movwf	25	;volatile
  2204                           
  2205                           ;mcc.c: 66: OSCTUNE = 0x00;
  2206  06AD  0198               	clrf	24	;volatile
  2207                           
  2208                           ;mcc.c: 68: BORCON = 0x00;
  2209  06AE  0022               	movlb	2	; select bank2
  2210  06AF  0196               	clrf	22	;volatile
  2211  06B0  0008               	return
  2212  06B1                     __end_of_OSCILLATOR_Initialize:	
  2213                           
  2214                           	psect	text6
  2215  0677                     __ptext6:	
  2216 ;; *************** function _LIN_Master_Initialize *****************
  2217 ;; Defined at:
  2218 ;;		line 43 in file "mcc_generated_files/LINDrivers/lin_app.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;		None
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, status,2, status,0, pclath, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2236 ;;Total ram usage:        0 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    9
  2239 ;; This function calls:
  2240 ;;		_LIN_init
  2241 ;; This function is called by:
  2242 ;;		_SYSTEM_Initialize
  2243 ;;		_main
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           
  2248                           ;psect for function _LIN_Master_Initialize
  2249  0677                     _LIN_Master_Initialize:	
  2250                           
  2251                           ;lin_app.c: 45: LIN_init((sizeof(scheduleTable)/sizeof(lin_cmd_packet_t)), scheduleTable
      +                          , processLIN);
  2252                           
  2253                           ;incstack = 0
  2254                           ; Regs used in _LIN_Master_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2255  0677  30E6               	movlw	low (_scheduleTable| (0+32768))
  2256  0678  0020               	movlb	0	; select bank0
  2257  0679  00CE               	movwf	LIN_init@table
  2258  067A  3085               	movlw	high (_scheduleTable| (0+32768))
  2259  067B  00CF               	movwf	LIN_init@table+1
  2260  067C  30FE               	movlw	low _processLIN
  2261  067D  00D0               	movwf	LIN_init@processData
  2262  067E  3005               	movlw	high _processLIN
  2263  067F  00D1               	movwf	LIN_init@processData+1
  2264  0680  3004               	movlw	4
  2265  0681  3185  25CC         	fcall	_LIN_init
  2266  0683  0008               	return
  2267  0684                     __end_of_LIN_Master_Initialize:	
  2268                           
  2269                           	psect	text7
  2270  05CC                     __ptext7:	
  2271 ;; *************** function _LIN_init *****************
  2272 ;; Defined at:
  2273 ;;		line 60 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  tableLength     1    wreg     unsigned char 
  2276 ;;  table           2   10[BANK0 ] const PTR const struct .
  2277 ;;		 -> scheduleTable(24), 
  2278 ;;  processData     2   12[BANK0 ] PTR FTN()void 
  2279 ;;		 -> processLIN(1), 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  tableLength     1   15[BANK0 ] unsigned char 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0, pclath, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2291 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2292 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2293 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2294 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2295 ;;Total ram usage:        6 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    8
  2298 ;; This function calls:
  2299 ;;		_LIN_setTimerHandler
  2300 ;;		_LIN_startPeriod
  2301 ;;		_LIN_stopTimer
  2302 ;; This function is called by:
  2303 ;;		_LIN_Master_Initialize
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           
  2308                           ;psect for function _LIN_init
  2309  05CC                     _LIN_init:	
  2310                           
  2311                           ;incstack = 0
  2312                           ; Regs used in _LIN_init: [wreg+status,2+status,0+pclath+cstack]
  2313                           ;LIN_init@tableLength stored from wreg
  2314  05CC  0020               	movlb	0	; select bank0
  2315  05CD  00D3               	movwf	LIN_init@tableLength
  2316                           
  2317                           ;lin_master.c: 61: schedule = table;
  2318  05CE  084F               	movf	LIN_init@table+1,w
  2319  05CF  00DC               	movwf	_schedule+1
  2320  05D0  084E               	movf	LIN_init@table,w
  2321  05D1  00DB               	movwf	_schedule
  2322                           
  2323                           ;lin_master.c: 62: scheduleLength = tableLength;
  2324  05D2  0853               	movf	LIN_init@tableLength,w
  2325  05D3  00D2               	movwf	??_LIN_init
  2326  05D4  0852               	movf	??_LIN_init,w
  2327  05D5  00E5               	movwf	_scheduleLength
  2328                           
  2329                           ;lin_master.c: 63: LIN_processData = processData;
  2330  05D6  0851               	movf	LIN_init@processData+1,w
  2331  05D7  0021               	movlb	1	; select bank1
  2332  05D8  00D0               	movwf	(_LIN_processData+1)^(0+128)
  2333  05D9  0020               	movlb	0	; select bank0
  2334  05DA  0850               	movf	LIN_init@processData,w
  2335  05DB  0021               	movlb	1	; select bank1
  2336  05DC  00CF               	movwf	_LIN_processData^(0+128)
  2337                           
  2338                           ;lin_master.c: 64: LIN_stopTimer();
  2339  05DD  3186  26E2  3185   	fcall	_LIN_stopTimer
  2340                           
  2341                           ;lin_master.c: 65: LIN_setTimerHandler();
  2342  05E0  3186  26A2  3185   	fcall	_LIN_setTimerHandler
  2343                           
  2344                           ;lin_master.c: 67: LIN_startPeriod();
  2345  05E3  3186  26E6         	fcall	_LIN_startPeriod
  2346  05E5  0008               	return
  2347  05E6                     __end_of_LIN_init:	
  2348                           
  2349                           	psect	text8
  2350  06E2                     __ptext8:	
  2351 ;; *************** function _LIN_stopTimer *****************
  2352 ;; Defined at:
  2353 ;;		line 268 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		status,2
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;Total ram usage:        0 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    6
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_LIN_init
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           
  2382                           ;psect for function _LIN_stopTimer
  2383  06E2                     _LIN_stopTimer:	
  2384                           
  2385                           ;lin_master.c: 270: LIN_timerCallBack = 0;
  2386                           
  2387                           ;incstack = 0
  2388                           ; Regs used in _LIN_stopTimer: [status,2]
  2389  06E2  0020               	movlb	0	; select bank0
  2390  06E3  01AC               	clrf	_LIN_timerCallBack	;volatile
  2391                           
  2392                           ;lin_master.c: 271: LIN_timerRunning = 0;
  2393  06E4  01AD               	clrf	_LIN_timerRunning
  2394  06E5  0008               	return
  2395  06E6                     __end_of_LIN_stopTimer:	
  2396                           
  2397                           	psect	text9
  2398  06E6                     __ptext9:	
  2399 ;; *************** function _LIN_startPeriod *****************
  2400 ;; Defined at:
  2401 ;;		line 274 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		None
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2419 ;;Total ram usage:        0 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    6
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_LIN_init
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           
  2430                           ;psect for function _LIN_startPeriod
  2431  06E6                     _LIN_startPeriod:	
  2432                           
  2433                           ;lin_master.c: 275: LIN_enablePeriodTx = 1;
  2434                           
  2435                           ;incstack = 0
  2436                           ; Regs used in _LIN_startPeriod: []
  2437  06E6  0021               	movlb	1	; select bank1
  2438  06E7  01D5               	clrf	_LIN_enablePeriodTx^(0+128)
  2439  06E8  0AD5               	incf	_LIN_enablePeriodTx^(0+128),f
  2440  06E9  0008               	return
  2441  06EA                     __end_of_LIN_startPeriod:	
  2442                           
  2443                           	psect	text10
  2444  06A2                     __ptext10:	
  2445 ;; *************** function _LIN_setTimerHandler *****************
  2446 ;; Defined at:
  2447 ;;		line 264 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;		None
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0, pclath, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2465 ;;Total ram usage:        0 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    7
  2468 ;; This function calls:
  2469 ;;		_TMR2_SetInterruptHandler
  2470 ;; This function is called by:
  2471 ;;		_LIN_init
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           
  2476                           ;psect for function _LIN_setTimerHandler
  2477  06A2                     _LIN_setTimerHandler:	
  2478                           
  2479                           ;lin_master.c: 265: TMR2_SetInterruptHandler(LIN_timerHandler);
  2480                           
  2481                           ;incstack = 0
  2482                           ; Regs used in _LIN_setTimerHandler: [wreg+status,2+status,0+pclath+cstack]
  2483  06A2  303E               	movlw	low _LIN_timerHandler
  2484  06A3  0020               	movlb	0	; select bank0
  2485  06A4  00CC               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2486  06A5  3005               	movlw	high _LIN_timerHandler
  2487  06A6  00CD               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2488  06A7  3186  26B7         	fcall	_TMR2_SetInterruptHandler
  2489  06A9  0008               	return
  2490  06AA                     __end_of_LIN_setTimerHandler:	
  2491                           
  2492                           	psect	text11
  2493  06B7                     __ptext11:	
  2494 ;; *************** function _TMR2_SetInterruptHandler *****************
  2495 ;; Defined at:
  2496 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  InterruptHan    2    8[BANK0 ] PTR FTN()void 
  2499 ;;		 -> LIN_timerHandler(1), TMR2_DefaultInterruptHandler(1), 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;		None
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2511 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2514 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2515 ;;Total ram usage:        2 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    6
  2518 ;; This function calls:
  2519 ;;		Nothing
  2520 ;; This function is called by:
  2521 ;;		_TMR2_Initialize
  2522 ;;		_LIN_setTimerHandler
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _TMR2_SetInterruptHandler
  2528  06B7                     _TMR2_SetInterruptHandler:	
  2529                           
  2530                           ;tmr2.c: 133: TMR2_InterruptHandler = InterruptHandler;
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2534  06B7  0020               	movlb	0	; select bank0
  2535  06B8  084D               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2536  06B9  00DE               	movwf	_TMR2_InterruptHandler+1
  2537  06BA  084C               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2538  06BB  00DD               	movwf	_TMR2_InterruptHandler
  2539  06BC  0008               	return
  2540  06BD                     __end_of_TMR2_SetInterruptHandler:	
  2541                           
  2542                           	psect	text12
  2543  03A0                     __ptext12:	
  2544 ;; *************** function _EUSART_Initialize *****************
  2545 ;; Defined at:
  2546 ;;		line 85 in file "mcc_generated_files/eusart.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;		None
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0, pclath, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2562 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2563 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2564 ;;Total ram usage:        1 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    7
  2567 ;; This function calls:
  2568 ;;		_EUSART_SetErrorHandler
  2569 ;;		_EUSART_SetFramingErrorHandler
  2570 ;;		_EUSART_SetOverrunErrorHandler
  2571 ;;		_EUSART_SetRxInterruptHandler
  2572 ;;		_EUSART_SetTxInterruptHandler
  2573 ;; This function is called by:
  2574 ;;		_SYSTEM_Initialize
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           
  2579                           ;psect for function _EUSART_Initialize
  2580  03A0                     _EUSART_Initialize:	
  2581                           
  2582                           ;eusart.c: 88: PIE1bits.RCIE = 0;
  2583                           
  2584                           ;incstack = 0
  2585                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2586  03A0  0021               	movlb	1	; select bank1
  2587  03A1  1291               	bcf	17,5	;volatile
  2588                           
  2589                           ;eusart.c: 89: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  2590  03A2  30E4               	movlw	low _EUSART_Receive_ISR
  2591  03A3  0020               	movlb	0	; select bank0
  2592  03A4  00CC               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  2593  03A5  3003               	movlw	high _EUSART_Receive_ISR
  2594  03A6  00CD               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  2595  03A7  3186  26C3  3183   	fcall	_EUSART_SetRxInterruptHandler
  2596                           
  2597                           ;eusart.c: 90: PIE1bits.TXIE = 0;
  2598  03AA  0021               	movlb	1	; select bank1
  2599  03AB  1211               	bcf	17,4	;volatile
  2600                           
  2601                           ;eusart.c: 91: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  2602  03AC  305D               	movlw	low _EUSART_Transmit_ISR
  2603  03AD  0020               	movlb	0	; select bank0
  2604  03AE  00CC               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  2605  03AF  3005               	movlw	high _EUSART_Transmit_ISR
  2606  03B0  00CD               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  2607  03B1  3186  26BD  3183   	fcall	_EUSART_SetTxInterruptHandler
  2608                           
  2609                           ;eusart.c: 95: BAUDCON = 0x08;
  2610  03B4  3008               	movlw	8
  2611  03B5  0023               	movlb	3	; select bank3
  2612  03B6  009F               	movwf	31	;volatile
  2613                           
  2614                           ;eusart.c: 98: RCSTA = 0x90;
  2615  03B7  3090               	movlw	144
  2616  03B8  009D               	movwf	29	;volatile
  2617                           
  2618                           ;eusart.c: 101: TXSTA = 0x24;
  2619  03B9  3024               	movlw	36
  2620  03BA  009E               	movwf	30	;volatile
  2621                           
  2622                           ;eusart.c: 104: SPBRGL = 0xA0;
  2623  03BB  30A0               	movlw	160
  2624  03BC  009B               	movwf	27	;volatile
  2625                           
  2626                           ;eusart.c: 107: SPBRGH = 0x01;
  2627  03BD  3001               	movlw	1
  2628  03BE  009C               	movwf	28	;volatile
  2629                           
  2630                           ;eusart.c: 110: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  2631  03BF  3000               	movlw	low _EUSART_DefaultFramingErrorHandler
  2632  03C0  0020               	movlb	0	; select bank0
  2633  03C1  00CC               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  2634  03C2  3007               	movlw	high _EUSART_DefaultFramingErrorHandler
  2635  03C3  00CD               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  2636  03C4  3186  26C9  3183   	fcall	_EUSART_SetFramingErrorHandler
  2637                           
  2638                           ;eusart.c: 111: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  2639  03C7  30EE               	movlw	low _EUSART_DefaultOverrunErrorHandler
  2640  03C8  0020               	movlb	0	; select bank0
  2641  03C9  00CC               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  2642  03CA  3006               	movlw	high _EUSART_DefaultOverrunErrorHandler
  2643  03CB  00CD               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  2644  03CC  3186  2690  3183   	fcall	_EUSART_SetOverrunErrorHandler
  2645                           
  2646                           ;eusart.c: 112: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  2647  03CF  30FB               	movlw	low _EUSART_DefaultErrorHandler
  2648  03D0  0020               	movlb	0	; select bank0
  2649  03D1  00CC               	movwf	EUSART_SetErrorHandler@interruptHandler
  2650  03D2  3006               	movlw	high _EUSART_DefaultErrorHandler
  2651  03D3  00CD               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  2652  03D4  3186  2699         	fcall	_EUSART_SetErrorHandler
  2653                           
  2654                           ;eusart.c: 114: eusartRxLastError.status = 0;
  2655  03D6  0020               	movlb	0	; select bank0
  2656  03D7  01B0               	clrf	_eusartRxLastError	;volatile
  2657                           
  2658                           ;eusart.c: 117: eusartTxHead = 0;
  2659  03D8  01B5               	clrf	_eusartTxHead	;volatile
  2660                           
  2661                           ;eusart.c: 118: eusartTxTail = 0;
  2662  03D9  01B4               	clrf	_eusartTxTail	;volatile
  2663                           
  2664                           ;eusart.c: 119: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  2665  03DA  3008               	movlw	8
  2666  03DB  00CE               	movwf	??_EUSART_Initialize
  2667  03DC  084E               	movf	??_EUSART_Initialize,w
  2668  03DD  00E6               	movwf	_eusartTxBufferRemaining	;volatile
  2669                           
  2670                           ;eusart.c: 121: eusartRxHead = 0;
  2671  03DE  01B3               	clrf	_eusartRxHead	;volatile
  2672                           
  2673                           ;eusart.c: 122: eusartRxTail = 0;
  2674  03DF  01B2               	clrf	_eusartRxTail	;volatile
  2675                           
  2676                           ;eusart.c: 123: eusartRxCount = 0;
  2677  03E0  01B1               	clrf	_eusartRxCount	;volatile
  2678                           
  2679                           ;eusart.c: 126: PIE1bits.RCIE = 1;
  2680  03E1  0021               	movlb	1	; select bank1
  2681  03E2  1691               	bsf	17,5	;volatile
  2682  03E3  0008               	return
  2683  03E4                     __end_of_EUSART_Initialize:	
  2684                           
  2685                           	psect	text13
  2686  06BD                     __ptext13:	
  2687 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  2688 ;; Defined at:
  2689 ;;		line 273 in file "mcc_generated_files/eusart.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  2692 ;;		 -> EUSART_Transmit_ISR(1), 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2704 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2707 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2708 ;;Total ram usage:        2 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    6
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_EUSART_Initialize
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           
  2719                           ;psect for function _EUSART_SetTxInterruptHandler
  2720  06BD                     _EUSART_SetTxInterruptHandler:	
  2721                           
  2722                           ;eusart.c: 274: EUSART_TxDefaultInterruptHandler = interruptHandler;
  2723                           
  2724                           ;incstack = 0
  2725                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  2726  06BD  0020               	movlb	0	; select bank0
  2727  06BE  084D               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  2728  06BF  00E4               	movwf	_EUSART_TxDefaultInterruptHandler+1
  2729  06C0  084C               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  2730  06C1  00E3               	movwf	_EUSART_TxDefaultInterruptHandler
  2731  06C2  0008               	return
  2732  06C3                     __end_of_EUSART_SetTxInterruptHandler:	
  2733                           
  2734                           	psect	text14
  2735  06C3                     __ptext14:	
  2736 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  2737 ;; Defined at:
  2738 ;;		line 277 in file "mcc_generated_files/eusart.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  2741 ;;		 -> EUSART_Receive_ISR(1), 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2753 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2756 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2757 ;;Total ram usage:        2 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    6
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_EUSART_Initialize
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           
  2768                           ;psect for function _EUSART_SetRxInterruptHandler
  2769  06C3                     _EUSART_SetRxInterruptHandler:	
  2770                           
  2771                           ;eusart.c: 278: EUSART_RxDefaultInterruptHandler = interruptHandler;
  2772                           
  2773                           ;incstack = 0
  2774                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  2775  06C3  0020               	movlb	0	; select bank0
  2776  06C4  084D               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  2777  06C5  00E2               	movwf	_EUSART_RxDefaultInterruptHandler+1
  2778  06C6  084C               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  2779  06C7  00E1               	movwf	_EUSART_RxDefaultInterruptHandler
  2780  06C8  0008               	return
  2781  06C9                     __end_of_EUSART_SetRxInterruptHandler:	
  2782                           
  2783                           	psect	text15
  2784  0690                     __ptext15:	
  2785 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2786 ;; Defined at:
  2787 ;;		line 265 in file "mcc_generated_files/eusart.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  2790 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2802 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2805 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2806 ;;Total ram usage:        2 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; Hardware stack levels required when called:    6
  2809 ;; This function calls:
  2810 ;;		Nothing
  2811 ;; This function is called by:
  2812 ;;		_EUSART_Initialize
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           
  2817                           ;psect for function _EUSART_SetOverrunErrorHandler
  2818  0690                     _EUSART_SetOverrunErrorHandler:	
  2819                           
  2820                           ;eusart.c: 266: EUSART_OverrunErrorHandler = interruptHandler;
  2821                           
  2822                           ;incstack = 0
  2823                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2824  0690  0020               	movlb	0	; select bank0
  2825  0691  084D               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  2826  0692  0021               	movlb	1	; select bank1
  2827  0693  00D4               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  2828  0694  0020               	movlb	0	; select bank0
  2829  0695  084C               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  2830  0696  0021               	movlb	1	; select bank1
  2831  0697  00D3               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  2832  0698  0008               	return
  2833  0699                     __end_of_EUSART_SetOverrunErrorHandler:	
  2834                           
  2835                           	psect	text16
  2836  06C9                     __ptext16:	
  2837 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2838 ;; Defined at:
  2839 ;;		line 261 in file "mcc_generated_files/eusart.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  2842 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2854 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2857 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2858 ;;Total ram usage:        2 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    6
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_EUSART_Initialize
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           
  2869                           ;psect for function _EUSART_SetFramingErrorHandler
  2870  06C9                     _EUSART_SetFramingErrorHandler:	
  2871                           
  2872                           ;eusart.c: 262: EUSART_FramingErrorHandler = interruptHandler;
  2873                           
  2874                           ;incstack = 0
  2875                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2876  06C9  0020               	movlb	0	; select bank0
  2877  06CA  084D               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  2878  06CB  00E0               	movwf	_EUSART_FramingErrorHandler+1
  2879  06CC  084C               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  2880  06CD  00DF               	movwf	_EUSART_FramingErrorHandler
  2881  06CE  0008               	return
  2882  06CF                     __end_of_EUSART_SetFramingErrorHandler:	
  2883                           
  2884                           	psect	text17
  2885  0699                     __ptext17:	
  2886 ;; *************** function _EUSART_SetErrorHandler *****************
  2887 ;; Defined at:
  2888 ;;		line 269 in file "mcc_generated_files/eusart.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  2891 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      void 
  2896 ;; Registers used:
  2897 ;;		wreg
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2903 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2906 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2907 ;;Total ram usage:        2 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    6
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_EUSART_Initialize
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           
  2918                           ;psect for function _EUSART_SetErrorHandler
  2919  0699                     _EUSART_SetErrorHandler:	
  2920                           
  2921                           ;eusart.c: 270: EUSART_ErrorHandler = interruptHandler;
  2922                           
  2923                           ;incstack = 0
  2924                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2925  0699  0020               	movlb	0	; select bank0
  2926  069A  084D               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  2927  069B  0021               	movlb	1	; select bank1
  2928  069C  00D2               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  2929  069D  0020               	movlb	0	; select bank0
  2930  069E  084C               	movf	EUSART_SetErrorHandler@interruptHandler,w
  2931  069F  0021               	movlb	1	; select bank1
  2932  06A0  00D1               	movwf	_EUSART_ErrorHandler^(0+128)
  2933  06A1  0008               	return
  2934  06A2                     __end_of_EUSART_SetErrorHandler:	
  2935                           
  2936                           	psect	text18
  2937  0049                     __ptext18:	
  2938 ;; *************** function _LIN_queuePacket *****************
  2939 ;; Defined at:
  2940 ;;		line 70 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  cmd             1    wreg     unsigned char 
  2943 ;;  data            1   14[BANK0 ] PTR unsigned char 
  2944 ;;		 -> main@data_to_send(1), SIGNAL_Data(1), LFRX_Data(8), RSSI_Data(1), 
  2945 ;;		 -> UNLOCK_Data(1), 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  cmd             1   19[BANK0 ] unsigned char 
  2948 ;;  i               1   20[BANK0 ] unsigned char 
  2949 ;;  tempSchedule    2   21[BANK0 ] PTR const struct .
  2950 ;;		 -> ROM(8192), scheduleTable(24), 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2960 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2961 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2962 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2963 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2964 ;;Total ram usage:        9 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    7
  2967 ;; This function calls:
  2968 ;;		_LIN_calcParity
  2969 ;;		_LIN_getChecksum
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           
  2976                           ;psect for function _LIN_queuePacket
  2977  0049                     _LIN_queuePacket:	
  2978                           
  2979                           ;incstack = 0
  2980                           ; Regs used in _LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2981                           ;LIN_queuePacket@cmd stored from wreg
  2982  0049  0020               	movlb	0	; select bank0
  2983  004A  00D7               	movwf	LIN_queuePacket@cmd
  2984                           
  2985                           ;lin_master.c: 71: const lin_cmd_packet_t* tempSchedule = schedule;
  2986  004B  085C               	movf	_schedule+1,w
  2987  004C  00DA               	movwf	LIN_queuePacket@tempSchedule+1
  2988  004D  085B               	movf	_schedule,w
  2989  004E  00D9               	movwf	LIN_queuePacket@tempSchedule
  2990                           
  2991                           ;lin_master.c: 73: for(uint8_t i = 0; i < scheduleLength; i++){
  2992  004F  01D8               	clrf	LIN_queuePacket@i
  2993  0050                     l2294:	
  2994  0050  0865               	movf	_scheduleLength,w
  2995  0051  0258               	subwf	LIN_queuePacket@i,w
  2996  0052  1803               	btfsc	3,0
  2997  0053  2865               	goto	l2296
  2998                           
  2999                           ;lin_master.c: 74: if(cmd == tempSchedule->cmd){
  3000  0054  0859               	movf	LIN_queuePacket@tempSchedule,w
  3001  0055  0084               	movwf	4
  3002  0056  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3003  0057  0085               	movwf	5
  3004  0058  0800               	movf	0,w	;code access
  3005  0059  0657               	xorwf	LIN_queuePacket@cmd,w
  3006  005A  1903               	btfsc	3,2
  3007  005B  2865               	goto	l2296
  3008                           
  3009                           ;lin_master.c: 76: }
  3010                           ;lin_master.c: 77: tempSchedule++;
  3011                           
  3012                           ;lin_master.c: 75: break;
  3013  005C  3006               	movlw	6
  3014  005D  07D9               	addwf	LIN_queuePacket@tempSchedule,f
  3015  005E  3000               	movlw	0
  3016  005F  3DDA               	addwfc	LIN_queuePacket@tempSchedule+1,f
  3017  0060  3001               	movlw	1
  3018  0061  00D3               	movwf	??_LIN_queuePacket
  3019  0062  0853               	movf	??_LIN_queuePacket,w
  3020  0063  07D8               	addwf	LIN_queuePacket@i,f
  3021  0064  2850               	goto	l2294
  3022  0065                     l2296:	
  3023                           
  3024                           ;lin_master.c: 78: }
  3025                           ;lin_master.c: 81: LIN_packet.PID = LIN_calcParity(tempSchedule->cmd);
  3026  0065  0859               	movf	LIN_queuePacket@tempSchedule,w
  3027  0066  0084               	movwf	4
  3028  0067  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3029  0068  0085               	movwf	5
  3030  0069  0800               	movf	0,w	;code access
  3031  006A  3181  21BF  3180   	fcall	_LIN_calcParity
  3032  006D  0020               	movlb	0	; select bank0
  3033  006E  00D3               	movwf	??_LIN_queuePacket
  3034  006F  0853               	movf	??_LIN_queuePacket,w
  3035  0070  00B6               	movwf	_LIN_packet
  3036                           
  3037                           ;lin_master.c: 83: if(tempSchedule->type == TRANSMIT){
  3038  0071  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3039  0072  00D4               	movwf	??_LIN_queuePacket+1
  3040  0073  0859               	movf	LIN_queuePacket@tempSchedule,w
  3041  0074  00D3               	movwf	??_LIN_queuePacket
  3042  0075  3001               	movlw	1
  3043  0076  0753               	addwf	??_LIN_queuePacket,w
  3044  0077  0084               	movwf	4
  3045  0078  0854               	movf	??_LIN_queuePacket+1,w
  3046  0079  1803               	skipnc
  3047  007A  0A54               	incf	??_LIN_queuePacket+1,w
  3048  007B  0085               	movwf	5
  3049  007C  0012               	moviw fsr0++
  3050  007D  1D03               	btfss	3,2
  3051  007E  28D5               	goto	l2310
  3052                           
  3053                           ;lin_master.c: 86: if(tempSchedule->length > 0){
  3054  007F  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3055  0080  00D4               	movwf	??_LIN_queuePacket+1
  3056  0081  0859               	movf	LIN_queuePacket@tempSchedule,w
  3057  0082  00D3               	movwf	??_LIN_queuePacket
  3058  0083  3002               	movlw	2
  3059  0084  0753               	addwf	??_LIN_queuePacket,w
  3060  0085  0084               	movwf	4
  3061  0086  0854               	movf	??_LIN_queuePacket+1,w
  3062  0087  1803               	skipnc
  3063  0088  0A54               	incf	??_LIN_queuePacket+1,w
  3064  0089  0085               	movwf	5
  3065  008A  0012               	moviw fsr0++
  3066  008B  1903               	btfsc	3,2
  3067  008C  28C1               	goto	l444
  3068                           
  3069                           ;lin_master.c: 87: LIN_packet.length = tempSchedule->length;
  3070  008D  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3071  008E  00D4               	movwf	??_LIN_queuePacket+1
  3072  008F  0859               	movf	LIN_queuePacket@tempSchedule,w
  3073  0090  00D3               	movwf	??_LIN_queuePacket
  3074  0091  3002               	movlw	2
  3075  0092  0753               	addwf	??_LIN_queuePacket,w
  3076  0093  0084               	movwf	4
  3077  0094  0854               	movf	??_LIN_queuePacket+1,w
  3078  0095  1803               	skipnc
  3079  0096  0A54               	incf	??_LIN_queuePacket+1,w
  3080  0097  0085               	movwf	5
  3081  0098  0800               	movf	0,w	;code access
  3082  0099  00D5               	movwf	??_LIN_queuePacket+2
  3083  009A  0855               	movf	??_LIN_queuePacket+2,w
  3084  009B  00C0               	movwf	_LIN_packet+10
  3085                           
  3086                           ;lin_master.c: 88: __builtin_memcpy(LIN_packet.data,data,tempSchedule->length);
  3087  009C  3001               	movlw	1
  3088  009D  3E36               	addlw	(low (_LIN_packet| 0))& (0+255)
  3089  009E  0086               	movwf	6
  3090  009F  0187               	clrf	7
  3091  00A0  0020               	movlb	0	; select bank0
  3092  00A1  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3093  00A2  00D4               	movwf	??_LIN_queuePacket+1
  3094  00A3  0859               	movf	LIN_queuePacket@tempSchedule,w
  3095  00A4  00D3               	movwf	??_LIN_queuePacket
  3096  00A5  3002               	movlw	2
  3097  00A6  0753               	addwf	??_LIN_queuePacket,w
  3098  00A7  0084               	movwf	4
  3099  00A8  0854               	movf	??_LIN_queuePacket+1,w
  3100  00A9  1803               	skipnc
  3101  00AA  0A54               	incf	??_LIN_queuePacket+1,w
  3102  00AB  0085               	movwf	5
  3103  00AC  0800               	movf	0,w	;code access
  3104  00AD  00D5               	movwf	??_LIN_queuePacket+2
  3105  00AE  01D6               	clrf	??_LIN_queuePacket+3
  3106  00AF  0855               	movf	??_LIN_queuePacket+2,w
  3107  00B0  0656               	xorwf	??_LIN_queuePacket+3,w
  3108  00B1  1903               	skipnz
  3109  00B2  28C7               	goto	l2308
  3110  00B3  0852               	movf	LIN_queuePacket@data,w
  3111  00B4  0084               	movwf	4
  3112  00B5  0185               	clrf	5
  3113  00B6                     u263m0:	
  3114  00B6  0012               	moviw fsr0++
  3115  00B7  001E               	movwi fsr1++
  3116  00B8  3001               	movlw	1
  3117  00B9  02D5               	subwf	??_LIN_queuePacket+2,f
  3118  00BA  3000               	movlw	0
  3119  00BB  3BD6               	subwfb	??_LIN_queuePacket+3,f
  3120  00BC  0856               	movf	??_LIN_queuePacket+3,w
  3121  00BD  0455               	iorwf	??_LIN_queuePacket+2,w
  3122  00BE  1D03               	btfss	3,2
  3123  00BF  28B6               	goto	u263m0
  3124  00C0  28C7               	goto	l2308
  3125  00C1                     l444:	
  3126                           ;lin_master.c: 89: } else {
  3127                           
  3128                           
  3129                           ;lin_master.c: 90: LIN_packet.length = 1;
  3130  00C1  01C0               	clrf	_LIN_packet+10
  3131  00C2  0AC0               	incf	_LIN_packet+10,f
  3132                           
  3133                           ;lin_master.c: 91: LIN_packet.data[0] = 0xAA;
  3134  00C3  30AA               	movlw	170
  3135  00C4  00D3               	movwf	??_LIN_queuePacket
  3136  00C5  0853               	movf	??_LIN_queuePacket,w
  3137  00C6  00B7               	movwf	_LIN_packet+1
  3138  00C7                     l2308:	
  3139                           
  3140                           ;lin_master.c: 92: }
  3141                           ;lin_master.c: 95: LIN_packet.checksum = LIN_getChecksum(LIN_packet.length, LIN_packet.d
      +                          ata);
  3142  00C7  3037               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
  3143  00C8  0020               	movlb	0	; select bank0
  3144  00C9  00D3               	movwf	??_LIN_queuePacket
  3145  00CA  0853               	movf	??_LIN_queuePacket,w
  3146  00CB  00CC               	movwf	LIN_getChecksum@data
  3147  00CC  0840               	movf	_LIN_packet+10,w
  3148  00CD  3184  2476  3180   	fcall	_LIN_getChecksum
  3149  00D0  0020               	movlb	0	; select bank0
  3150  00D1  00D4               	movwf	??_LIN_queuePacket+1
  3151  00D2  0854               	movf	??_LIN_queuePacket+1,w
  3152  00D3  00BF               	movwf	_LIN_packet+9
  3153                           
  3154                           ;lin_master.c: 97: } else {
  3155  00D4  2900               	goto	l2312
  3156  00D5                     l2310:	
  3157                           
  3158                           ;lin_master.c: 98: LIN_rxPacket.rxLength = tempSchedule->length;
  3159  00D5  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3160  00D6  00D4               	movwf	??_LIN_queuePacket+1
  3161  00D7  0859               	movf	LIN_queuePacket@tempSchedule,w
  3162  00D8  00D3               	movwf	??_LIN_queuePacket
  3163  00D9  3002               	movlw	2
  3164  00DA  0753               	addwf	??_LIN_queuePacket,w
  3165  00DB  0084               	movwf	4
  3166  00DC  0854               	movf	??_LIN_queuePacket+1,w
  3167  00DD  1803               	skipnc
  3168  00DE  0A54               	incf	??_LIN_queuePacket+1,w
  3169  00DF  0085               	movwf	5
  3170  00E0  0800               	movf	0,w	;code access
  3171  00E1  00D5               	movwf	??_LIN_queuePacket+2
  3172  00E2  0855               	movf	??_LIN_queuePacket+2,w
  3173  00E3  0021               	movlb	1	; select bank1
  3174  00E4  00B1               	movwf	(_LIN_rxPacket^(0+128)+1)
  3175                           
  3176                           ;lin_master.c: 99: LIN_rxPacket.cmd = tempSchedule->cmd;
  3177  00E5  0020               	movlb	0	; select bank0
  3178  00E6  0859               	movf	LIN_queuePacket@tempSchedule,w
  3179  00E7  0084               	movwf	4
  3180  00E8  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3181  00E9  0085               	movwf	5
  3182  00EA  0800               	movf	0,w	;code access
  3183  00EB  00D3               	movwf	??_LIN_queuePacket
  3184  00EC  0853               	movf	??_LIN_queuePacket,w
  3185  00ED  0021               	movlb	1	; select bank1
  3186  00EE  00B0               	movwf	_LIN_rxPacket^(0+128)
  3187                           
  3188                           ;lin_master.c: 100: LIN_rxPacket.timeout = tempSchedule->timeout;
  3189  00EF  0020               	movlb	0	; select bank0
  3190  00F0  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3191  00F1  00D4               	movwf	??_LIN_queuePacket+1
  3192  00F2  0859               	movf	LIN_queuePacket@tempSchedule,w
  3193  00F3  00D3               	movwf	??_LIN_queuePacket
  3194  00F4  3003               	movlw	3
  3195  00F5  0753               	addwf	??_LIN_queuePacket,w
  3196  00F6  0084               	movwf	4
  3197  00F7  0854               	movf	??_LIN_queuePacket+1,w
  3198  00F8  1803               	skipnc
  3199  00F9  0A54               	incf	??_LIN_queuePacket+1,w
  3200  00FA  0085               	movwf	5
  3201  00FB  0800               	movf	0,w	;code access
  3202  00FC  00D5               	movwf	??_LIN_queuePacket+2
  3203  00FD  0855               	movf	??_LIN_queuePacket+2,w
  3204  00FE  0021               	movlb	1	; select bank1
  3205  00FF  00BB               	movwf	(_LIN_rxPacket^(0+128)+11)
  3206  0100                     l2312:	
  3207                           
  3208                           ;lin_master.c: 101: }
  3209                           ;lin_master.c: 103: LIN_txReady = 1;
  3210  0100  0020               	movlb	0	; select bank0
  3211  0101  01AF               	clrf	_LIN_txReady
  3212  0102  0AAF               	incf	_LIN_txReady,f
  3213  0103  0008               	return
  3214  0104                     __end_of_LIN_queuePacket:	
  3215                           
  3216                           	psect	text19
  3217  01BF                     __ptext19:	
  3218 ;; *************** function _LIN_calcParity *****************
  3219 ;; Defined at:
  3220 ;;		line 210 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  CMD             1    wreg     unsigned char 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  CMD             1    9[BANK0 ] unsigned char 
  3225 ;;  PID             1   10[BANK0 ] struct .
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      unsigned char 
  3228 ;; Registers used:
  3229 ;;		wreg, status,0
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3236 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3237 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3238 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3239 ;;Total ram usage:        3 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    6
  3242 ;; This function calls:
  3243 ;;		Nothing
  3244 ;; This function is called by:
  3245 ;;		_LIN_queuePacket
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           
  3250                           ;psect for function _LIN_calcParity
  3251  01BF                     _LIN_calcParity:	
  3252                           
  3253                           ;incstack = 0
  3254                           ; Regs used in _LIN_calcParity: [wreg+status,0]
  3255                           ;LIN_calcParity@CMD stored from wreg
  3256  01BF  0020               	movlb	0	; select bank0
  3257  01C0  00CD               	movwf	LIN_calcParity@CMD
  3258                           
  3259                           ;lin_master.c: 211: lin_pid_t PID;
  3260                           ;lin_master.c: 212: PID.rawPID = CMD;
  3261  01C1  084D               	movf	LIN_calcParity@CMD,w
  3262  01C2  00CC               	movwf	??_LIN_calcParity
  3263  01C3  084C               	movf	??_LIN_calcParity,w
  3264  01C4  00CE               	movwf	LIN_calcParity@PID
  3265                           
  3266                           ;lin_master.c: 217: PID.P0 = PID.ID0 ^ PID.ID1;
  3267  01C5  1CCE               	btfss	LIN_calcParity@PID,1
  3268  01C6  29C9               	goto	u2280
  3269  01C7  3001               	movlw	1
  3270  01C8  29CA               	goto	u2282
  3271  01C9                     u2280:	
  3272  01C9  3000               	movlw	0
  3273  01CA                     u2282:	
  3274  01CA  00CC               	movwf	??_LIN_calcParity
  3275  01CB  1C4E               	btfss	LIN_calcParity@PID,0
  3276  01CC  29CF               	goto	u2290
  3277  01CD  3001               	movlw	1
  3278  01CE  29D0               	goto	u2292
  3279  01CF                     u2290:	
  3280  01CF  3000               	movlw	0
  3281  01D0                     u2292:	
  3282  01D0  064C               	xorwf	??_LIN_calcParity,w
  3283  01D1  1903               	btfsc	3,2
  3284  01D2  29D6               	goto	u2300
  3285  01D3  0020               	movlb	0	; select bank0
  3286  01D4  174E               	bsf	LIN_calcParity@PID,6
  3287  01D5  29D8               	goto	u2314
  3288  01D6                     u2300:	
  3289  01D6  0020               	movlb	0	; select bank0
  3290  01D7  134E               	bcf	LIN_calcParity@PID,6
  3291  01D8                     u2314:	
  3292                           
  3293                           ;lin_master.c: 218: PID.P0 = PID.P0 ^ PID.ID2;
  3294  01D8  1D4E               	btfss	LIN_calcParity@PID,2
  3295  01D9  29DC               	goto	u2320
  3296  01DA  3001               	movlw	1
  3297  01DB  29DD               	goto	u2322
  3298  01DC                     u2320:	
  3299  01DC  3000               	movlw	0
  3300  01DD                     u2322:	
  3301  01DD  00CC               	movwf	??_LIN_calcParity
  3302  01DE  1F4E               	btfss	LIN_calcParity@PID,6
  3303  01DF  29E2               	goto	u2330
  3304  01E0  3001               	movlw	1
  3305  01E1  29E3               	goto	u2332
  3306  01E2                     u2330:	
  3307  01E2  3000               	movlw	0
  3308  01E3                     u2332:	
  3309  01E3  064C               	xorwf	??_LIN_calcParity,w
  3310  01E4  1903               	btfsc	3,2
  3311  01E5  29E9               	goto	u2340
  3312  01E6  0020               	movlb	0	; select bank0
  3313  01E7  174E               	bsf	LIN_calcParity@PID,6
  3314  01E8  29EB               	goto	u2354
  3315  01E9                     u2340:	
  3316  01E9  0020               	movlb	0	; select bank0
  3317  01EA  134E               	bcf	LIN_calcParity@PID,6
  3318  01EB                     u2354:	
  3319                           
  3320                           ;lin_master.c: 219: PID.P0 = PID.P0 ^ PID.ID4;
  3321  01EB  1E4E               	btfss	LIN_calcParity@PID,4
  3322  01EC  29EF               	goto	u2360
  3323  01ED  3001               	movlw	1
  3324  01EE  29F0               	goto	u2362
  3325  01EF                     u2360:	
  3326  01EF  3000               	movlw	0
  3327  01F0                     u2362:	
  3328  01F0  00CC               	movwf	??_LIN_calcParity
  3329  01F1  1F4E               	btfss	LIN_calcParity@PID,6
  3330  01F2  29F5               	goto	u2370
  3331  01F3  3001               	movlw	1
  3332  01F4  29F6               	goto	u2372
  3333  01F5                     u2370:	
  3334  01F5  3000               	movlw	0
  3335  01F6                     u2372:	
  3336  01F6  064C               	xorwf	??_LIN_calcParity,w
  3337  01F7  1903               	btfsc	3,2
  3338  01F8  29FC               	goto	u2380
  3339  01F9  0020               	movlb	0	; select bank0
  3340  01FA  174E               	bsf	LIN_calcParity@PID,6
  3341  01FB  29FE               	goto	u2394
  3342  01FC                     u2380:	
  3343  01FC  0020               	movlb	0	; select bank0
  3344  01FD  134E               	bcf	LIN_calcParity@PID,6
  3345  01FE                     u2394:	
  3346                           
  3347                           ;lin_master.c: 220: PID.P1 = PID.ID1 ^ PID.ID3;
  3348  01FE  1DCE               	btfss	LIN_calcParity@PID,3
  3349  01FF  2A02               	goto	u2400
  3350  0200  3001               	movlw	1
  3351  0201  2A03               	goto	u2402
  3352  0202                     u2400:	
  3353  0202  3000               	movlw	0
  3354  0203                     u2402:	
  3355  0203  00CC               	movwf	??_LIN_calcParity
  3356  0204  1CCE               	btfss	LIN_calcParity@PID,1
  3357  0205  2A08               	goto	u2410
  3358  0206  3001               	movlw	1
  3359  0207  2A09               	goto	u2412
  3360  0208                     u2410:	
  3361  0208  3000               	movlw	0
  3362  0209                     u2412:	
  3363  0209  064C               	xorwf	??_LIN_calcParity,w
  3364  020A  1903               	btfsc	3,2
  3365  020B  2A0F               	goto	u2420
  3366  020C  0020               	movlb	0	; select bank0
  3367  020D  17CE               	bsf	LIN_calcParity@PID,7
  3368  020E  2A11               	goto	u2434
  3369  020F                     u2420:	
  3370  020F  0020               	movlb	0	; select bank0
  3371  0210  13CE               	bcf	LIN_calcParity@PID,7
  3372  0211                     u2434:	
  3373                           
  3374                           ;lin_master.c: 221: PID.P1 = PID.P1 ^ PID.ID4;
  3375  0211  1E4E               	btfss	LIN_calcParity@PID,4
  3376  0212  2A15               	goto	u2440
  3377  0213  3001               	movlw	1
  3378  0214  2A16               	goto	u2442
  3379  0215                     u2440:	
  3380  0215  3000               	movlw	0
  3381  0216                     u2442:	
  3382  0216  00CC               	movwf	??_LIN_calcParity
  3383  0217  1FCE               	btfss	LIN_calcParity@PID,7
  3384  0218  2A1B               	goto	u2450
  3385  0219  3001               	movlw	1
  3386  021A  2A1C               	goto	u2452
  3387  021B                     u2450:	
  3388  021B  3000               	movlw	0
  3389  021C                     u2452:	
  3390  021C  064C               	xorwf	??_LIN_calcParity,w
  3391  021D  1903               	btfsc	3,2
  3392  021E  2A22               	goto	u2460
  3393  021F  0020               	movlb	0	; select bank0
  3394  0220  17CE               	bsf	LIN_calcParity@PID,7
  3395  0221  2A24               	goto	u2474
  3396  0222                     u2460:	
  3397  0222  0020               	movlb	0	; select bank0
  3398  0223  13CE               	bcf	LIN_calcParity@PID,7
  3399  0224                     u2474:	
  3400                           
  3401                           ;lin_master.c: 222: PID.P1 = PID.P1 ^ PID.ID5;
  3402  0224  1ECE               	btfss	LIN_calcParity@PID,5
  3403  0225  2A28               	goto	u2480
  3404  0226  3001               	movlw	1
  3405  0227  2A29               	goto	u2482
  3406  0228                     u2480:	
  3407  0228  3000               	movlw	0
  3408  0229                     u2482:	
  3409  0229  00CC               	movwf	??_LIN_calcParity
  3410  022A  1FCE               	btfss	LIN_calcParity@PID,7
  3411  022B  2A2E               	goto	u2490
  3412  022C  3001               	movlw	1
  3413  022D  2A2F               	goto	u2492
  3414  022E                     u2490:	
  3415  022E  3000               	movlw	0
  3416  022F                     u2492:	
  3417  022F  064C               	xorwf	??_LIN_calcParity,w
  3418  0230  1903               	btfsc	3,2
  3419  0231  2A35               	goto	u2500
  3420  0232  0020               	movlb	0	; select bank0
  3421  0233  17CE               	bsf	LIN_calcParity@PID,7
  3422  0234  2A37               	goto	l2218
  3423  0235                     u2500:	
  3424  0235  0020               	movlb	0	; select bank0
  3425  0236  13CE               	bcf	LIN_calcParity@PID,7
  3426  0237                     l2218:	
  3427                           
  3428                           ;lin_master.c: 223: PID.P1 = ~PID.P1;
  3429  0237  1003               	clrc
  3430  0238  1FCE               	btfss	LIN_calcParity@PID,7
  3431  0239  1403               	setc
  3432  023A  1C03               	btfss	3,0
  3433  023B  2A3F               	goto	u2520
  3434  023C  0020               	movlb	0	; select bank0
  3435  023D  17CE               	bsf	LIN_calcParity@PID,7
  3436  023E  2A41               	goto	l2220
  3437  023F                     u2520:	
  3438  023F  0020               	movlb	0	; select bank0
  3439  0240  13CE               	bcf	LIN_calcParity@PID,7
  3440  0241                     l2220:	
  3441                           
  3442                           ;lin_master.c: 225: return PID.rawPID;
  3443  0241  084E               	movf	LIN_calcParity@PID,w
  3444  0242  0008               	return
  3445  0243                     __end_of_LIN_calcParity:	
  3446                           
  3447                           	psect	text20
  3448  0330                     __ptext20:	
  3449 ;; *************** function _LIN_handler *****************
  3450 ;; Defined at:
  3451 ;;		line 106 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;		None
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;		None
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  1    wreg      enum E2866
  3458 ;; Registers used:
  3459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3467 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3468 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3469 ;;Total ram usage:        1 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    9
  3472 ;; This function calls:
  3473 ;;		Absolute function
  3474 ;;		_EUSART_is_rx_ready
  3475 ;;		_LIN_disableRx
  3476 ;;		_LIN_enableRx
  3477 ;;		_LIN_receivePacket
  3478 ;;		_LIN_sendPacket
  3479 ;;		_LIN_startTimer
  3480 ;;		_memset
  3481 ;;		_processLIN
  3482 ;; This function is called by:
  3483 ;;		_main
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           
  3488                           ;psect for function _LIN_handler
  3489  0330                     _LIN_handler:	
  3490                           
  3491                           ;lin_master.c: 107: static lin_state_t LIN_state = LIN_IDLE;
  3492                           ;lin_master.c: 110: switch(LIN_state){
  3493                           
  3494                           ;incstack = 0
  3495                           ; Regs used in _LIN_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3496  0330  2B90               	goto	l2760
  3497  0331                     l2718:	
  3498                           ;lin_master.c: 111: case LIN_IDLE:
  3499                           
  3500                           
  3501                           ;lin_master.c: 112: if(LIN_txReady == 1){
  3502  0331  0020               	movlb	0	; select bank0
  3503  0332  032F               	decf	_LIN_txReady,w
  3504  0333  1D03               	btfss	3,2
  3505  0334  0008               	return
  3506                           
  3507                           ;lin_master.c: 113: LIN_txReady = 0;
  3508  0335  01AF               	clrf	_LIN_txReady
  3509                           
  3510                           ;lin_master.c: 114: LIN_disableRx();
  3511  0336  3186  26D9  3183   	fcall	_LIN_disableRx
  3512                           
  3513                           ;lin_master.c: 116: LIN_sendPacket();
  3514  0339  3184  2449  3183   	fcall	_LIN_sendPacket
  3515                           
  3516                           ;lin_master.c: 117: memset(LIN_packet.rawPacket, 0, sizeof(LIN_packet.rawPacket));
  3517  033C  3000               	movlw	0
  3518  033D  0020               	movlb	0	; select bank0
  3519  033E  00CC               	movwf	memset@c
  3520  033F  00CD               	movwf	memset@c+1
  3521  0340  300B               	movlw	11
  3522  0341  00CE               	movwf	memset@n
  3523  0342  3000               	movlw	0
  3524  0343  00CF               	movwf	memset@n+1
  3525  0344  3036               	movlw	(low (_LIN_packet| 0))& (0+255)
  3526  0345  3185  2596         	fcall	_memset
  3527                           
  3528                           ;lin_master.c: 118: LIN_state = LIN_TX_IP;
  3529  0347  0020               	movlb	0	; select bank0
  3530  0348  01AA               	clrf	LIN_handler@LIN_state
  3531  0349  0AAA               	incf	LIN_handler@LIN_state,f
  3532                           
  3533                           ;lin_master.c: 121: }
  3534                           ;lin_master.c: 122: break;
  3535                           
  3536                           ;lin_master.c: 119: } else {
  3537  034A  0008               	return
  3538  034B                     l457:	
  3539                           ;lin_master.c: 123: case LIN_TX_IP:
  3540                           
  3541                           
  3542                           ;lin_master.c: 125: if(PIE1bits.TXIE == 0){
  3543  034B  0021               	movlb	1	; select bank1
  3544  034C  1A11               	btfsc	17,4	;volatile
  3545  034D  0008               	return
  3546                           
  3547                           ;lin_master.c: 126: if(TXSTAbits.TRMT == 1){
  3548  034E  0023               	movlb	3	; select bank3
  3549  034F  1C9E               	btfss	30,1	;volatile
  3550  0350  0008               	return
  3551                           
  3552                           ;lin_master.c: 128: if(LIN_rxPacket.rxLength > 0){
  3553  0351  0021               	movlb	1	; select bank1
  3554  0352  0831               	movf	(_LIN_rxPacket^(0+128)+1),w
  3555  0353  1903               	btfsc	3,2
  3556  0354  2B61               	goto	l2738
  3557                           
  3558                           ;lin_master.c: 130: LIN_startTimer(LIN_rxPacket.timeout);
  3559  0355  083B               	movf	(_LIN_rxPacket^(0+128)+11),w
  3560  0356  3186  2667  3183   	fcall	_LIN_startTimer
  3561                           
  3562                           ;lin_master.c: 131: LIN_enableRx();
  3563  0359  3186  26D4         	fcall	_LIN_enableRx
  3564                           
  3565                           ;lin_master.c: 132: LIN_state = LIN_RX_IP;
  3566  035B  3002               	movlw	2
  3567  035C  0020               	movlb	0	; select bank0
  3568  035D  00D7               	movwf	??_LIN_handler
  3569  035E  0857               	movf	??_LIN_handler,w
  3570  035F  00AA               	movwf	LIN_handler@LIN_state
  3571                           
  3572                           ;lin_master.c: 133: } else {
  3573  0360  0008               	return
  3574  0361                     l2738:	
  3575                           
  3576                           ;lin_master.c: 134: LIN_state = LIN_IDLE;
  3577  0361  0020               	movlb	0	; select bank0
  3578  0362  01AA               	clrf	LIN_handler@LIN_state
  3579                           
  3580                           ;lin_master.c: 135: }
  3581                           ;lin_master.c: 136: }
  3582                           ;lin_master.c: 137: }
  3583                           ;lin_master.c: 138: break;
  3584  0363  0008               	return
  3585  0364                     l2740:	
  3586                           ;lin_master.c: 139: case LIN_RX_IP:
  3587                           
  3588                           
  3589                           ;lin_master.c: 141: if(LIN_timerRunning == 0){
  3590  0364  082D               	movf	_LIN_timerRunning,w
  3591  0365  1D03               	btfss	3,2
  3592  0366  2B73               	goto	l2746
  3593                           
  3594                           ;lin_master.c: 143: LIN_state = LIN_IDLE;
  3595  0367  01AA               	clrf	LIN_handler@LIN_state
  3596                           
  3597                           ;lin_master.c: 144: memset(LIN_rxPacket.rawPacket, 0, sizeof(LIN_rxPacket.rawPacket));
  3598  0368  3000               	movlw	0
  3599  0369  00CC               	movwf	memset@c
  3600  036A  00CD               	movwf	memset@c+1
  3601  036B  300C               	movlw	12
  3602  036C  00CE               	movwf	memset@n
  3603  036D  3000               	movlw	0
  3604  036E  00CF               	movwf	memset@n+1
  3605  036F  30B0               	movlw	(low (_LIN_rxPacket| 0))& (0+255)
  3606  0370  3185  2596         	fcall	_memset
  3607                           
  3608                           ;lin_master.c: 145: } else if(EUSART_is_rx_ready()){
  3609  0372  0008               	return
  3610  0373                     l2746:	
  3611  0373  3186  26F8  3183   	fcall	_EUSART_is_rx_ready
  3612  0376  3A00               	xorlw	0
  3613  0377  1903               	skipnz
  3614  0378  0008               	return
  3615                           
  3616                           ;lin_master.c: 146: if(LIN_receivePacket() == 1){
  3617  0379  3184  2419  3183   	fcall	_LIN_receivePacket
  3618  037C  3A01               	xorlw	1
  3619  037D  1D03               	skipz
  3620  037E  0008               	return
  3621                           
  3622                           ;lin_master.c: 148: LIN_disableRx();
  3623  037F  3186  26D9         	fcall	_LIN_disableRx
  3624                           
  3625                           ;lin_master.c: 149: LIN_state = LIN_RX_RDY;
  3626  0381  3003               	movlw	3
  3627  0382  0020               	movlb	0	; select bank0
  3628  0383  00D7               	movwf	??_LIN_handler
  3629  0384  0857               	movf	??_LIN_handler,w
  3630  0385  00AA               	movwf	LIN_handler@LIN_state
  3631                           
  3632                           ;lin_master.c: 150: }
  3633                           ;lin_master.c: 151: }
  3634                           ;lin_master.c: 152: break;
  3635  0386  0008               	return
  3636  0387                     l2754:	
  3637                           ;lin_master.c: 153: case LIN_RX_RDY:
  3638                           
  3639                           
  3640                           ;lin_master.c: 155: LIN_processData();
  3641  0387  0021               	movlb	1	; select bank1
  3642  0388  0850               	movf	(_LIN_processData+1)^(0+128),w
  3643  0389  008A               	movwf	10
  3644  038A  084F               	movf	_LIN_processData^(0+128),w
  3645  038B  000A               	callw
  3646  038C  3183               	pagesel	$
  3647                           
  3648                           ;lin_master.c: 156: LIN_state = LIN_IDLE;
  3649  038D  0020               	movlb	0	; select bank0
  3650  038E  01AA               	clrf	LIN_handler@LIN_state
  3651                           
  3652                           ;lin_master.c: 158: }
  3653                           
  3654                           ;lin_master.c: 157: break;
  3655  038F  0008               	return
  3656  0390                     l2760:	
  3657  0390  0020               	movlb	0	; select bank0
  3658  0391  082A               	movf	LIN_handler@LIN_state,w
  3659                           
  3660                           ; Switch size 1, requested type "space"
  3661                           ; Number of cases is 4, Range of values is 0 to 3
  3662                           ; switch strategies available:
  3663                           ; Name         Instructions Cycles
  3664                           ; simple_byte           13     7 (average)
  3665                           ; direct_byte           14     6 (fixed)
  3666                           ; jumptable            260     6 (fixed)
  3667                           ;	Chosen strategy is simple_byte
  3668  0392  3A00               	xorlw	0	; case 0
  3669  0393  1903               	skipnz
  3670  0394  2B31               	goto	l2718
  3671  0395  3A01               	xorlw	1	; case 1
  3672  0396  1903               	skipnz
  3673  0397  2B4B               	goto	l457
  3674  0398  3A03               	xorlw	3	; case 2
  3675  0399  1903               	skipnz
  3676  039A  2B64               	goto	l2740
  3677  039B  3A01               	xorlw	1	; case 3
  3678  039C  1903               	skipnz
  3679  039D  2B87               	goto	l2754
  3680  039E  2B9F               	goto	l468
  3681  039F                     l468:	
  3682                           ;lin_master.c: 159: return LIN_state;
  3683                           ;	Return value of _LIN_handler is never used
  3684                           
  3685  039F  0008               	return
  3686  03A0                     __end_of_LIN_handler:	
  3687                           
  3688                           	psect	text21
  3689  05FE                     __ptext21:	
  3690 ;; *************** function _processLIN *****************
  3691 ;; Defined at:
  3692 ;;		line 49 in file "mcc_generated_files/LINDrivers/lin_app.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;		None
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;  tempRxData      8    0[BANK1 ] unsigned char [8]
  3697 ;;  cmd             1    8[BANK1 ] unsigned char 
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3708 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3709 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3710 ;;      Totals:         0       1       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3711 ;;Total ram usage:       10 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; Hardware stack levels required when called:    8
  3714 ;; This function calls:
  3715 ;;		_LIN_getPacket
  3716 ;; This function is called by:
  3717 ;;		_main
  3718 ;;		_LIN_Master_Initialize
  3719 ;;		_LIN_handler
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           
  3724                           ;psect for function _processLIN
  3725  05FE                     _processLIN:	
  3726                           
  3727                           ;lin_app.c: 50: uint8_t tempRxData[8];
  3728                           ;lin_app.c: 51: uint8_t cmd;
  3729                           ;lin_app.c: 53: cmd = LIN_getPacket(tempRxData);
  3730                           
  3731                           ;incstack = 0
  3732                           ; Regs used in _processLIN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3733  05FE  30C4               	movlw	(low (processLIN@tempRxData| 0))& (0+255)
  3734  05FF  3184  24CB  3185   	fcall	_LIN_getPacket
  3735  0602  0020               	movlb	0	; select bank0
  3736  0603  00D6               	movwf	??_processLIN
  3737  0604  0856               	movf	??_processLIN,w
  3738  0605  0021               	movlb	1	; select bank1
  3739  0606  00CC               	movwf	processLIN@cmd^(0+128)
  3740                           
  3741                           ;lin_app.c: 65: }
  3742                           
  3743                           ;lin_app.c: 64: break;
  3744                           
  3745                           ;lin_app.c: 63: default:
  3746                           
  3747                           ;lin_app.c: 62: break;
  3748                           
  3749                           ;lin_app.c: 61: case SIGNAL:
  3750                           
  3751                           ;lin_app.c: 60: break;
  3752                           
  3753                           ;lin_app.c: 59: case LFRX:
  3754                           
  3755                           ;lin_app.c: 58: break;
  3756                           
  3757                           ;lin_app.c: 57: case RSSI:
  3758                           
  3759                           ;lin_app.c: 56: break;
  3760                           
  3761                           ;lin_app.c: 55: case UNLOCK:
  3762                           
  3763                           ;lin_app.c: 54: switch(cmd){
  3764  0607  084C               	movf	processLIN@cmd^(0+128),w
  3765                           
  3766                           ; Switch size 1, requested type "space"
  3767                           ; Number of cases is 4, Range of values is 0 to 3
  3768                           ; switch strategies available:
  3769                           ; Name         Instructions Cycles
  3770                           ; simple_byte           13     7 (average)
  3771                           ; direct_byte           14     6 (fixed)
  3772                           ; jumptable            260     6 (fixed)
  3773                           ;	Chosen strategy is simple_byte
  3774  0608  3A00               	xorlw	0	; case 0
  3775  0609  1903               	skipnz
  3776  060A  2E15               	goto	l357
  3777  060B  3A01               	xorlw	1	; case 1
  3778  060C  1903               	skipnz
  3779  060D  2E15               	goto	l357
  3780  060E  3A03               	xorlw	3	; case 2
  3781  060F  1903               	skipnz
  3782  0610  2E15               	goto	l357
  3783  0611  3A01               	xorlw	1	; case 3
  3784  0612  1903               	skipnz
  3785  0613  2E15               	goto	l357
  3786  0614  2E15               	goto	l357
  3787  0615                     l357:	
  3788  0615  0008               	return
  3789  0616                     __end_of_processLIN:	
  3790                           
  3791                           	psect	text22
  3792  04CB                     __ptext22:	
  3793 ;; *************** function _LIN_getPacket *****************
  3794 ;; Defined at:
  3795 ;;		line 201 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  data            1    wreg     PTR unsigned char 
  3798 ;;		 -> processLIN@tempRxData(8), 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  data            1   16[BANK0 ] PTR unsigned char 
  3801 ;;		 -> processLIN@tempRxData(8), 
  3802 ;;  cmd             1   17[BANK0 ] unsigned char 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      unsigned char 
  3805 ;; Registers used:
  3806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3813 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3814 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3815 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;Total ram usage:        3 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    7
  3819 ;; This function calls:
  3820 ;;		_memset
  3821 ;; This function is called by:
  3822 ;;		_processLIN
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           
  3827                           ;psect for function _LIN_getPacket
  3828  04CB                     _LIN_getPacket:	
  3829                           
  3830                           ;incstack = 0
  3831                           ; Regs used in _LIN_getPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3832                           ;LIN_getPacket@data stored from wreg
  3833  04CB  0020               	movlb	0	; select bank0
  3834  04CC  00D4               	movwf	LIN_getPacket@data
  3835                           
  3836                           ;lin_master.c: 202: uint8_t cmd = LIN_rxPacket.cmd & 0x3F;
  3837  04CD  0021               	movlb	1	; select bank1
  3838  04CE  0830               	movf	_LIN_rxPacket^(0+128),w
  3839  04CF  393F               	andlw	63
  3840  04D0  0020               	movlb	0	; select bank0
  3841  04D1  00D3               	movwf	??_LIN_getPacket
  3842  04D2  0853               	movf	??_LIN_getPacket,w
  3843  04D3  00D5               	movwf	LIN_getPacket@cmd
  3844                           
  3845                           ;lin_master.c: 204: __builtin_memcpy(data,LIN_rxPacket.data,sizeof(LIN_rxPacket.data));
  3846  04D4  0854               	movf	LIN_getPacket@data,w
  3847  04D5  0086               	movwf	6
  3848  04D6  0187               	clrf	7
  3849  04D7  3002               	movlw	2
  3850  04D8  3EB0               	addlw	(low (_LIN_rxPacket| 0))& (0+255)
  3851  04D9  0084               	movwf	4
  3852  04DA  0185               	clrf	5
  3853  04DB  3008               	movlw	8
  3854  04DC  0020               	movlb	0	; select bank0
  3855  04DD  00D3               	movwf	??_LIN_getPacket
  3856  04DE  0853               	movf	??_LIN_getPacket,w
  3857  04DF  1903               	skipnz
  3858  04E0  2CE5               	goto	l2114
  3859  04E1                     u225m0:	
  3860  04E1  0012               	moviw fsr0++
  3861  04E2  001E               	movwi fsr1++
  3862  04E3  0BD3               	decfsz	??_LIN_getPacket,f
  3863  04E4  2CE1               	goto	u225m0
  3864  04E5                     l2114:	
  3865                           
  3866                           ;lin_master.c: 205: memset(LIN_rxPacket.rawPacket, 0, sizeof(LIN_rxPacket.rawPacket));
  3867  04E5  3000               	movlw	0
  3868  04E6  0020               	movlb	0	; select bank0
  3869  04E7  00CC               	movwf	memset@c
  3870  04E8  00CD               	movwf	memset@c+1
  3871  04E9  300C               	movlw	12
  3872  04EA  00CE               	movwf	memset@n
  3873  04EB  3000               	movlw	0
  3874  04EC  00CF               	movwf	memset@n+1
  3875  04ED  30B0               	movlw	(low (_LIN_rxPacket| 0))& (0+255)
  3876  04EE  3185  2596         	fcall	_memset
  3877                           
  3878                           ;lin_master.c: 207: return cmd;
  3879  04F0  0020               	movlb	0	; select bank0
  3880  04F1  0855               	movf	LIN_getPacket@cmd,w
  3881  04F2  0008               	return
  3882  04F3                     __end_of_LIN_getPacket:	
  3883                           
  3884                           	psect	text23
  3885  0596                     __ptext23:	
  3886 ;; *************** function _memset *****************
  3887 ;; Defined at:
  3888 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  p1              1    wreg     PTR void 
  3891 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  3892 ;;  c               2    8[BANK0 ] int 
  3893 ;;  n               2   10[BANK0 ] unsigned int 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  p1              1   14[BANK0 ] PTR void 
  3896 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  3897 ;;  p               1   13[BANK0 ] PTR unsigned char 
  3898 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  1    wreg      PTR void 
  3901 ;; Registers used:
  3902 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3908 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3909 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3910 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3911 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3912 ;;Total ram usage:        7 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:    6
  3915 ;; This function calls:
  3916 ;;		Nothing
  3917 ;; This function is called by:
  3918 ;;		_LIN_handler
  3919 ;;		_LIN_getPacket
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           
  3924                           ;psect for function _memset
  3925  0596                     _memset:	
  3926                           
  3927                           ;incstack = 0
  3928                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  3929                           ;memset@p1 stored from wreg
  3930  0596  0020               	movlb	0	; select bank0
  3931  0597  00D2               	movwf	memset@p1
  3932  0598  0852               	movf	memset@p1,w
  3933  0599  00D0               	movwf	??_memset
  3934  059A  0850               	movf	??_memset,w
  3935  059B  00D1               	movwf	memset@p
  3936  059C                     l2048:	
  3937  059C  3001               	movlw	1
  3938  059D  02CE               	subwf	memset@n,f
  3939  059E  3000               	movlw	0
  3940  059F  3BCF               	subwfb	memset@n+1,f
  3941  05A0  0A4E               	incf	memset@n,w
  3942  05A1  1903               	btfsc	3,2
  3943  05A2  0A4F               	incf	memset@n+1,w
  3944  05A3  1903               	btfsc	3,2
  3945  05A4  0008               	return
  3946  05A5  084C               	movf	memset@c,w
  3947  05A6  00D0               	movwf	??_memset
  3948  05A7  0851               	movf	memset@p,w
  3949  05A8  0086               	movwf	6
  3950  05A9  0187               	clrf	7
  3951  05AA  0850               	movf	??_memset,w
  3952  05AB  0081               	movwf	1
  3953  05AC  3001               	movlw	1
  3954  05AD  00D0               	movwf	??_memset
  3955  05AE  0850               	movf	??_memset,w
  3956  05AF  07D1               	addwf	memset@p,f
  3957  05B0  2D9C               	goto	l2048
  3958  05B1                     __end_of_memset:	
  3959                           ;	Return value of _memset is never used
  3960                           
  3961                           
  3962                           	psect	text24
  3963  0667                     __ptext24:	
  3964 ;; *************** function _LIN_startTimer *****************
  3965 ;; Defined at:
  3966 ;;		line 241 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;  timeout         1    wreg     unsigned char 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  timeout         1   10[BANK0 ] unsigned char 
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      void 
  3973 ;; Registers used:
  3974 ;;		wreg, status,2, status,0, pclath, cstack
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3981 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3982 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3983 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3984 ;;Total ram usage:        2 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; Hardware stack levels required when called:    7
  3987 ;; This function calls:
  3988 ;;		_TMR2_StartTimer
  3989 ;;		_TMR2_WriteTimer
  3990 ;; This function is called by:
  3991 ;;		_LIN_handler
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           
  3996                           ;psect for function _LIN_startTimer
  3997  0667                     _LIN_startTimer:	
  3998                           
  3999                           ;incstack = 0
  4000                           ; Regs used in _LIN_startTimer: [wreg+status,2+status,0+pclath+cstack]
  4001                           ;LIN_startTimer@timeout stored from wreg
  4002  0667  0020               	movlb	0	; select bank0
  4003  0668  00CE               	movwf	LIN_startTimer@timeout
  4004                           
  4005                           ;lin_master.c: 242: LIN_timeout = timeout;
  4006  0669  084E               	movf	LIN_startTimer@timeout,w
  4007  066A  00CD               	movwf	??_LIN_startTimer
  4008  066B  084D               	movf	??_LIN_startTimer,w
  4009  066C  00E7               	movwf	_LIN_timeout
  4010                           
  4011                           ;lin_master.c: 243: TMR2_WriteTimer(0);
  4012  066D  3000               	movlw	0
  4013  066E  3186  26CF  3186   	fcall	_TMR2_WriteTimer
  4014                           
  4015                           ;lin_master.c: 244: TMR2_StartTimer();
  4016  0671  3186  26F2         	fcall	_TMR2_StartTimer
  4017                           
  4018                           ;lin_master.c: 245: LIN_timerRunning = 1;
  4019  0673  0020               	movlb	0	; select bank0
  4020  0674  01AD               	clrf	_LIN_timerRunning
  4021  0675  0AAD               	incf	_LIN_timerRunning,f
  4022  0676  0008               	return
  4023  0677                     __end_of_LIN_startTimer:	
  4024                           
  4025                           	psect	text25
  4026  06CF                     __ptext25:	
  4027 ;; *************** function _TMR2_WriteTimer *****************
  4028 ;; Defined at:
  4029 ;;		line 108 in file "mcc_generated_files/tmr2.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  timerVal        1    wreg     unsigned char 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  timerVal        1    8[BANK0 ] unsigned char 
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      void 
  4036 ;; Registers used:
  4037 ;;		wreg
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4044 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4046 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;Total ram usage:        1 bytes
  4048 ;; Hardware stack levels used:    1
  4049 ;; Hardware stack levels required when called:    6
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_LIN_startTimer
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           
  4058                           ;psect for function _TMR2_WriteTimer
  4059  06CF                     _TMR2_WriteTimer:	
  4060                           
  4061                           ;incstack = 0
  4062                           ; Regs used in _TMR2_WriteTimer: [wreg]
  4063                           ;TMR2_WriteTimer@timerVal stored from wreg
  4064  06CF  0020               	movlb	0	; select bank0
  4065  06D0  00CC               	movwf	TMR2_WriteTimer@timerVal
  4066                           
  4067                           ;tmr2.c: 111: TMR2 = timerVal;
  4068  06D1  084C               	movf	TMR2_WriteTimer@timerVal,w
  4069  06D2  009A               	movwf	26	;volatile
  4070  06D3  0008               	return
  4071  06D4                     __end_of_TMR2_WriteTimer:	
  4072                           
  4073                           	psect	text26
  4074  06F2                     __ptext26:	
  4075 ;; *************** function _TMR2_StartTimer *****************
  4076 ;; Defined at:
  4077 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;		None
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;		None
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  1    wreg      void 
  4084 ;; Registers used:
  4085 ;;		None
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4095 ;;Total ram usage:        0 bytes
  4096 ;; Hardware stack levels used:    1
  4097 ;; Hardware stack levels required when called:    6
  4098 ;; This function calls:
  4099 ;;		Nothing
  4100 ;; This function is called by:
  4101 ;;		_LIN_startTimer
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           
  4106                           ;psect for function _TMR2_StartTimer
  4107  06F2                     _TMR2_StartTimer:	
  4108                           
  4109                           ;tmr2.c: 90: T2CONbits.TMR2ON = 1;
  4110                           
  4111                           ;incstack = 0
  4112                           ; Regs used in _TMR2_StartTimer: []
  4113  06F2  0020               	movlb	0	; select bank0
  4114  06F3  151C               	bsf	28,2	;volatile
  4115  06F4  0008               	return
  4116  06F5                     __end_of_TMR2_StartTimer:	
  4117                           
  4118                           	psect	text27
  4119  0449                     __ptext27:	
  4120 ;; *************** function _LIN_sendPacket *****************
  4121 ;; Defined at:
  4122 ;;		line 180 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;		None
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  i               1   11[BANK0 ] unsigned char 
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      void 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4137 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4138 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4139 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4140 ;;Total ram usage:        2 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:    7
  4143 ;; This function calls:
  4144 ;;		_EUSART_Write
  4145 ;;		_LIN_sendBreak
  4146 ;; This function is called by:
  4147 ;;		_LIN_handler
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           
  4152                           ;psect for function _LIN_sendPacket
  4153  0449                     _LIN_sendPacket:	
  4154                           
  4155                           ;lin_master.c: 183: LIN_sendBreak();
  4156                           
  4157                           ;incstack = 0
  4158                           ; Regs used in _LIN_sendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4159  0449  3186  26F5  3184   	fcall	_LIN_sendBreak
  4160                           
  4161                           ;lin_master.c: 184: EUSART_Write(0x00);
  4162  044C  3000               	movlw	0
  4163  044D  3185  251A  3184   	fcall	_EUSART_Write
  4164                           
  4165                           ;lin_master.c: 186: EUSART_Write(0x55);
  4166  0450  3055               	movlw	85
  4167  0451  3185  251A  3184   	fcall	_EUSART_Write
  4168                           
  4169                           ;lin_master.c: 188: EUSART_Write(LIN_packet.PID);
  4170  0454  0020               	movlb	0	; select bank0
  4171  0455  0836               	movf	_LIN_packet,w
  4172  0456  3185  251A  3184   	fcall	_EUSART_Write
  4173                           
  4174                           ;lin_master.c: 190: if(LIN_rxPacket.rxLength == 0){
  4175  0459  0021               	movlb	1	; select bank1
  4176  045A  0831               	movf	(_LIN_rxPacket^(0+128)+1),w
  4177  045B  1D03               	btfss	3,2
  4178  045C  0008               	return
  4179                           
  4180                           ;lin_master.c: 193: for(uint8_t i = 0; i < LIN_packet.length; i++){
  4181  045D  0020               	movlb	0	; select bank0
  4182  045E  01CF               	clrf	LIN_sendPacket@i
  4183  045F                     l2242:	
  4184  045F  0840               	movf	_LIN_packet+10,w
  4185  0460  024F               	subwf	LIN_sendPacket@i,w
  4186  0461  1803               	btfsc	3,0
  4187  0462  2C72               	goto	l2244
  4188                           
  4189                           ;lin_master.c: 194: EUSART_Write(LIN_packet.data[i]);
  4190  0463  084F               	movf	LIN_sendPacket@i,w
  4191  0464  3E01               	addlw	1
  4192  0465  3E36               	addlw	(low (_LIN_packet| 0))& (0+255)
  4193  0466  0086               	movwf	6
  4194  0467  0187               	clrf	7
  4195  0468  0801               	movf	1,w
  4196  0469  3185  251A  3184   	fcall	_EUSART_Write
  4197  046C  3001               	movlw	1
  4198  046D  0020               	movlb	0	; select bank0
  4199  046E  00CE               	movwf	??_LIN_sendPacket
  4200  046F  084E               	movf	??_LIN_sendPacket,w
  4201  0470  07CF               	addwf	LIN_sendPacket@i,f
  4202  0471  2C5F               	goto	l2242
  4203  0472                     l2244:	
  4204                           
  4205                           ;lin_master.c: 195: }
  4206                           ;lin_master.c: 197: EUSART_Write(LIN_packet.checksum);
  4207  0472  083F               	movf	_LIN_packet+9,w
  4208  0473  3185  251A         	fcall	_EUSART_Write
  4209  0475  0008               	return
  4210  0476                     __end_of_LIN_sendPacket:	
  4211                           
  4212                           	psect	text28
  4213  06F5                     __ptext28:	
  4214 ;; *************** function _LIN_sendBreak *****************
  4215 ;; Defined at:
  4216 ;;		line 294 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;		None
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;		None
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  1    wreg      void 
  4223 ;; Registers used:
  4224 ;;		None
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4234 ;;Total ram usage:        0 bytes
  4235 ;; Hardware stack levels used:    1
  4236 ;; Hardware stack levels required when called:    6
  4237 ;; This function calls:
  4238 ;;		Nothing
  4239 ;; This function is called by:
  4240 ;;		_LIN_sendPacket
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           
  4245                           ;psect for function _LIN_sendBreak
  4246  06F5                     _LIN_sendBreak:	
  4247                           
  4248                           ;lin_master.c: 295: TXSTAbits.SENDB = 1;
  4249                           
  4250                           ;incstack = 0
  4251                           ; Regs used in _LIN_sendBreak: []
  4252  06F5  0023               	movlb	3	; select bank3
  4253  06F6  159E               	bsf	30,3	;volatile
  4254  06F7  0008               	return
  4255  06F8                     __end_of_LIN_sendBreak:	
  4256                           
  4257                           	psect	text29
  4258  051A                     __ptext29:	
  4259 ;; *************** function _EUSART_Write *****************
  4260 ;; Defined at:
  4261 ;;		line 170 in file "mcc_generated_files/eusart.c"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;  txData          1    wreg     unsigned char 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;  txData          1    9[BANK0 ] unsigned char 
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  1    wreg      void 
  4268 ;; Registers used:
  4269 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4276 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4277 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4278 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4279 ;;Total ram usage:        2 bytes
  4280 ;; Hardware stack levels used:    1
  4281 ;; Hardware stack levels required when called:    6
  4282 ;; This function calls:
  4283 ;;		Nothing
  4284 ;; This function is called by:
  4285 ;;		_LIN_sendPacket
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           
  4290                           ;psect for function _EUSART_Write
  4291  051A                     _EUSART_Write:	
  4292                           
  4293                           ;incstack = 0
  4294                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4295                           ;EUSART_Write@txData stored from wreg
  4296  051A  0020               	movlb	0	; select bank0
  4297  051B  00CD               	movwf	EUSART_Write@txData
  4298  051C                     l2084:	
  4299                           ;eusart.c: 173: {
  4300                           
  4301                           ;eusart.c: 172: while(0 == eusartTxBufferRemaining)
  4302                           
  4303  051C  0866               	movf	_eusartTxBufferRemaining,w	;volatile
  4304  051D  1903               	btfsc	3,2
  4305  051E  2D1C               	goto	l2084
  4306                           
  4307                           ;eusart.c: 174: }
  4308                           ;eusart.c: 176: if(0 == PIE1bits.TXIE)
  4309  051F  0021               	movlb	1	; select bank1
  4310  0520  1A11               	btfsc	17,4	;volatile
  4311  0521  2D27               	goto	l210
  4312                           
  4313                           ;eusart.c: 177: {
  4314                           ;eusart.c: 178: TXREG = txData;
  4315  0522  0020               	movlb	0	; select bank0
  4316  0523  084D               	movf	EUSART_Write@txData,w
  4317  0524  0023               	movlb	3	; select bank3
  4318  0525  009A               	movwf	26	;volatile
  4319                           
  4320                           ;eusart.c: 179: }
  4321  0526  2D3B               	goto	l2098
  4322  0527                     l210:	
  4323                           
  4324                           ;eusart.c: 180: else
  4325                           ;eusart.c: 181: {
  4326                           ;eusart.c: 182: PIE1bits.TXIE = 0;
  4327  0527  1211               	bcf	17,4	;volatile
  4328                           
  4329                           ;eusart.c: 183: eusartTxBuffer[eusartTxHead++] = txData;
  4330  0528  0020               	movlb	0	; select bank0
  4331  0529  084D               	movf	EUSART_Write@txData,w
  4332  052A  00CC               	movwf	??_EUSART_Write
  4333  052B  0835               	movf	_eusartTxHead,w
  4334  052C  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4335  052D  0086               	movwf	6
  4336  052E  0187               	clrf	7
  4337  052F  084C               	movf	??_EUSART_Write,w
  4338  0530  0081               	movwf	1
  4339  0531  3001               	movlw	1
  4340  0532  00CC               	movwf	??_EUSART_Write
  4341  0533  084C               	movf	??_EUSART_Write,w
  4342  0534  07B5               	addwf	_eusartTxHead,f	;volatile
  4343                           
  4344                           ;eusart.c: 184: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4345  0535  3008               	movlw	8
  4346  0536  0235               	subwf	_eusartTxHead,w	;volatile
  4347  0537  1803               	btfsc	3,0
  4348                           
  4349                           ;eusart.c: 185: {
  4350                           ;eusart.c: 186: eusartTxHead = 0;
  4351  0538  01B5               	clrf	_eusartTxHead	;volatile
  4352                           
  4353                           ;eusart.c: 187: }
  4354                           ;eusart.c: 188: eusartTxBufferRemaining--;
  4355  0539  3001               	movlw	1
  4356  053A  02E6               	subwf	_eusartTxBufferRemaining,f	;volatile
  4357  053B                     l2098:	
  4358                           
  4359                           ;eusart.c: 189: }
  4360                           ;eusart.c: 190: PIE1bits.TXIE = 1;
  4361  053B  0021               	movlb	1	; select bank1
  4362  053C  1611               	bsf	17,4	;volatile
  4363  053D  0008               	return
  4364  053E                     __end_of_EUSART_Write:	
  4365                           
  4366                           	psect	text30
  4367  0419                     __ptext30:	
  4368 ;; *************** function _LIN_receivePacket *****************
  4369 ;; Defined at:
  4370 ;;		line 162 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;		None
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;		None
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      unsigned char 
  4377 ;; Registers used:
  4378 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4386 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4387 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4388 ;;Total ram usage:        2 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; Hardware stack levels required when called:    7
  4391 ;; This function calls:
  4392 ;;		_EUSART_Read
  4393 ;;		_LIN_getChecksum
  4394 ;; This function is called by:
  4395 ;;		_LIN_handler
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           
  4400                           ;psect for function _LIN_receivePacket
  4401  0419                     _LIN_receivePacket:	
  4402                           
  4403                           ;lin_master.c: 163: static uint8_t rxIndex = 0;
  4404                           ;lin_master.c: 165: if(rxIndex < LIN_rxPacket.rxLength){
  4405                           
  4406                           ;incstack = 0
  4407                           ; Regs used in _LIN_receivePacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4408  0419  0021               	movlb	1	; select bank1
  4409  041A  0831               	movf	(_LIN_rxPacket^(0+128)+1),w
  4410  041B  0020               	movlb	0	; select bank0
  4411  041C  0229               	subwf	LIN_receivePacket@rxIndex,w
  4412  041D  1803               	skipnc
  4413  041E  2C31               	goto	l2262
  4414                           
  4415                           ;lin_master.c: 167: LIN_rxPacket.data[rxIndex++] = EUSART_Read();
  4416  041F  3184  24F3  3184   	fcall	_EUSART_Read
  4417  0422  0020               	movlb	0	; select bank0
  4418  0423  00D2               	movwf	??_LIN_receivePacket
  4419  0424  0829               	movf	LIN_receivePacket@rxIndex,w
  4420  0425  3E02               	addlw	2
  4421  0426  3EB0               	addlw	(low (_LIN_rxPacket| 0))& (0+255)
  4422  0427  0086               	movwf	6
  4423  0428  0187               	clrf	7
  4424  0429  0852               	movf	??_LIN_receivePacket,w
  4425  042A  0081               	movwf	1
  4426  042B  3001               	movlw	1
  4427  042C  00D2               	movwf	??_LIN_receivePacket
  4428  042D  0852               	movf	??_LIN_receivePacket,w
  4429  042E  07A9               	addwf	LIN_receivePacket@rxIndex,f
  4430                           
  4431                           ;lin_master.c: 168: __nop();
  4432  042F  0000               	nop
  4433                           
  4434                           ;lin_master.c: 169: } else {
  4435  0430  2C47               	goto	l2270
  4436  0431                     l2262:	
  4437                           
  4438                           ;lin_master.c: 170: rxIndex = 0;
  4439  0431  0020               	movlb	0	; select bank0
  4440  0432  01A9               	clrf	LIN_receivePacket@rxIndex
  4441                           
  4442                           ;lin_master.c: 172: if(EUSART_Read() == LIN_getChecksum(LIN_rxPacket.rxLength, LIN_rxPac
      +                          ket.data))
  4443  0433  30B2               	movlw	(low ((_LIN_rxPacket| 0+2)))& (0+255)
  4444  0434  00D2               	movwf	??_LIN_receivePacket
  4445  0435  0852               	movf	??_LIN_receivePacket,w
  4446  0436  00CC               	movwf	LIN_getChecksum@data
  4447  0437  0021               	movlb	1	; select bank1
  4448  0438  0831               	movf	(_LIN_rxPacket^(0+128)+1),w
  4449  0439  3184  2476  3184   	fcall	_LIN_getChecksum
  4450  043C  0020               	movlb	0	; select bank0
  4451  043D  00D3               	movwf	??_LIN_receivePacket+1
  4452  043E  3184  24F3  3184   	fcall	_EUSART_Read
  4453  0441  0020               	movlb	0	; select bank0
  4454  0442  0653               	xorwf	??_LIN_receivePacket+1,w
  4455  0443  1D03               	skipz
  4456  0444  2C47               	goto	l2270
  4457                           
  4458                           ;lin_master.c: 173: return 1;
  4459  0445  3001               	movlw	1
  4460  0446  0008               	return
  4461  0447                     l2270:	
  4462                           
  4463                           ;lin_master.c: 175: }
  4464                           ;lin_master.c: 177: return 0;
  4465  0447  3000               	movlw	0
  4466  0448  0008               	return
  4467  0449                     __end_of_LIN_receivePacket:	
  4468                           
  4469                           	psect	text31
  4470  0476                     __ptext31:	
  4471 ;; *************** function _LIN_getChecksum *****************
  4472 ;; Defined at:
  4473 ;;		line 228 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  length          1    wreg     unsigned char 
  4476 ;;  data            1    8[BANK0 ] PTR unsigned char 
  4477 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;  length          1   10[BANK0 ] unsigned char 
  4480 ;;  i               1   11[BANK0 ] unsigned char 
  4481 ;;  checksum        2   12[BANK0 ] unsigned int 
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1    wreg      unsigned char 
  4484 ;; Registers used:
  4485 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4491 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4492 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4493 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4494 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4495 ;;Total ram usage:        6 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    6
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		_LIN_queuePacket
  4502 ;;		_LIN_receivePacket
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           
  4507                           ;psect for function _LIN_getChecksum
  4508  0476                     _LIN_getChecksum:	
  4509                           
  4510                           ;incstack = 0
  4511                           ; Regs used in _LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  4512                           ;LIN_getChecksum@length stored from wreg
  4513  0476  0020               	movlb	0	; select bank0
  4514  0477  00CE               	movwf	LIN_getChecksum@length
  4515                           
  4516                           ;lin_master.c: 229: uint16_t checksum = 0;
  4517  0478  01D0               	clrf	LIN_getChecksum@checksum
  4518  0479  01D1               	clrf	LIN_getChecksum@checksum+1
  4519                           
  4520                           ;lin_master.c: 231: for (uint8_t i = 0; i < length; i++){
  4521  047A  01CF               	clrf	LIN_getChecksum@i
  4522  047B                     l2132:	
  4523  047B  084E               	movf	LIN_getChecksum@length,w
  4524  047C  024F               	subwf	LIN_getChecksum@i,w
  4525  047D  1803               	btfsc	3,0
  4526  047E  2C9D               	goto	l495
  4527                           
  4528                           ;lin_master.c: 232: checksum = checksum + *data++;
  4529  047F  084C               	movf	LIN_getChecksum@data,w
  4530  0480  0086               	movwf	6
  4531  0481  0187               	clrf	7
  4532  0482  0801               	movf	1,w
  4533  0483  0750               	addwf	LIN_getChecksum@checksum,w
  4534  0484  00D0               	movwf	LIN_getChecksum@checksum
  4535  0485  0851               	movf	LIN_getChecksum@checksum+1,w
  4536  0486  1803               	skipnc
  4537  0487  0A51               	incf	LIN_getChecksum@checksum+1,w
  4538  0488  00D1               	movwf	LIN_getChecksum@checksum+1
  4539  0489  3001               	movlw	1
  4540  048A  00CD               	movwf	??_LIN_getChecksum
  4541  048B  084D               	movf	??_LIN_getChecksum,w
  4542  048C  07CC               	addwf	LIN_getChecksum@data,f
  4543                           
  4544                           ;lin_master.c: 233: if(checksum > 0xFF)
  4545  048D  3001               	movlw	1
  4546  048E  0251               	subwf	LIN_getChecksum@checksum+1,w
  4547  048F  3000               	movlw	0
  4548  0490  1903               	skipnz
  4549  0491  0250               	subwf	LIN_getChecksum@checksum,w
  4550  0492  1C03               	skipc
  4551  0493  2C98               	goto	l2130
  4552                           
  4553                           ;lin_master.c: 234: checksum -= 0xFF;
  4554  0494  30FF               	movlw	255
  4555  0495  02D0               	subwf	LIN_getChecksum@checksum,f
  4556  0496  3000               	movlw	0
  4557  0497  3BD1               	subwfb	LIN_getChecksum@checksum+1,f
  4558  0498                     l2130:	
  4559  0498  3001               	movlw	1
  4560  0499  00CD               	movwf	??_LIN_getChecksum
  4561  049A  084D               	movf	??_LIN_getChecksum,w
  4562  049B  07CF               	addwf	LIN_getChecksum@i,f
  4563  049C  2C7B               	goto	l2132
  4564  049D                     l495:	
  4565                           
  4566                           ;lin_master.c: 235: }
  4567                           ;lin_master.c: 236: checksum = ~checksum;
  4568  049D  09D0               	comf	LIN_getChecksum@checksum,f
  4569  049E  09D1               	comf	LIN_getChecksum@checksum+1,f
  4570                           
  4571                           ;lin_master.c: 238: return (uint8_t)checksum;
  4572  049F  0850               	movf	LIN_getChecksum@checksum,w
  4573  04A0  0008               	return
  4574  04A1                     __end_of_LIN_getChecksum:	
  4575                           
  4576                           	psect	text32
  4577  04F3                     __ptext32:	
  4578 ;; *************** function _EUSART_Read *****************
  4579 ;; Defined at:
  4580 ;;		line 148 in file "mcc_generated_files/eusart.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;		None
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  readValue       1    9[BANK0 ] unsigned char 
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  1    wreg      unsigned char 
  4587 ;; Registers used:
  4588 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4596 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4597 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;Total ram usage:        2 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    6
  4601 ;; This function calls:
  4602 ;;		Nothing
  4603 ;; This function is called by:
  4604 ;;		_LIN_receivePacket
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           
  4609                           ;psect for function _EUSART_Read
  4610  04F3                     _EUSART_Read:	
  4611                           
  4612                           ;eusart.c: 150: uint8_t readValue = 0;
  4613                           
  4614                           ;incstack = 0
  4615                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  4616  04F3  0020               	movlb	0	; select bank0
  4617  04F4  01CD               	clrf	EUSART_Read@readValue
  4618  04F5                     l2062:	
  4619                           ;eusart.c: 153: {
  4620                           
  4621                           ;eusart.c: 152: while(0 == eusartRxCount)
  4622                           
  4623  04F5  0831               	movf	_eusartRxCount,w	;volatile
  4624  04F6  1903               	btfsc	3,2
  4625  04F7  2CF5               	goto	l2062
  4626                           
  4627                           ;eusart.c: 154: }
  4628                           ;eusart.c: 156: eusartRxLastError = eusartRxStatusBuffer[eusartRxTail];
  4629  04F8  0832               	movf	_eusartRxTail,w	;volatile
  4630  04F9  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4631  04FA  0086               	movwf	6
  4632  04FB  0187               	clrf	7
  4633  04FC  0801               	movf	1,w
  4634  04FD  00CC               	movwf	??_EUSART_Read
  4635  04FE  084C               	movf	??_EUSART_Read,w
  4636  04FF  00B0               	movwf	_eusartRxLastError	;volatile
  4637                           
  4638                           ;eusart.c: 158: readValue = eusartRxBuffer[eusartRxTail++];
  4639  0500  0832               	movf	_eusartRxTail,w
  4640  0501  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4641  0502  0086               	movwf	6
  4642  0503  0187               	clrf	7
  4643  0504  0801               	movf	1,w
  4644  0505  00CC               	movwf	??_EUSART_Read
  4645  0506  084C               	movf	??_EUSART_Read,w
  4646  0507  00CD               	movwf	EUSART_Read@readValue
  4647  0508  3001               	movlw	1
  4648  0509  00CC               	movwf	??_EUSART_Read
  4649  050A  084C               	movf	??_EUSART_Read,w
  4650  050B  07B2               	addwf	_eusartRxTail,f	;volatile
  4651                           
  4652                           ;eusart.c: 159: if(sizeof(eusartRxBuffer) <= eusartRxTail)
  4653  050C  3008               	movlw	8
  4654  050D  0232               	subwf	_eusartRxTail,w	;volatile
  4655  050E  1803               	btfsc	3,0
  4656                           
  4657                           ;eusart.c: 160: {
  4658                           ;eusart.c: 161: eusartRxTail = 0;
  4659  050F  01B2               	clrf	_eusartRxTail	;volatile
  4660                           
  4661                           ;eusart.c: 162: }
  4662                           ;eusart.c: 163: PIE1bits.RCIE = 0;
  4663  0510  0021               	movlb	1	; select bank1
  4664  0511  1291               	bcf	17,5	;volatile
  4665                           
  4666                           ;eusart.c: 164: eusartRxCount--;
  4667  0512  3001               	movlw	1
  4668  0513  0020               	movlb	0	; select bank0
  4669  0514  02B1               	subwf	_eusartRxCount,f	;volatile
  4670                           
  4671                           ;eusart.c: 165: PIE1bits.RCIE = 1;
  4672  0515  0021               	movlb	1	; select bank1
  4673  0516  1691               	bsf	17,5	;volatile
  4674                           
  4675                           ;eusart.c: 167: return readValue;
  4676  0517  0020               	movlb	0	; select bank0
  4677  0518  084D               	movf	EUSART_Read@readValue,w
  4678  0519  0008               	return
  4679  051A                     __end_of_EUSART_Read:	
  4680                           
  4681                           	psect	text33
  4682  06D4                     __ptext33:	
  4683 ;; *************** function _LIN_enableRx *****************
  4684 ;; Defined at:
  4685 ;;		line 284 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;		None
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;		None
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  1    wreg      void 
  4692 ;; Registers used:
  4693 ;;		None
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4703 ;;Total ram usage:        0 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; Hardware stack levels required when called:    6
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_LIN_handler
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           
  4714                           ;psect for function _LIN_enableRx
  4715  06D4                     _LIN_enableRx:	
  4716                           
  4717                           ;lin_master.c: 285: RCSTAbits.CREN = 1;
  4718                           
  4719                           ;incstack = 0
  4720                           ; Regs used in _LIN_enableRx: []
  4721  06D4  0023               	movlb	3	; select bank3
  4722  06D5  161D               	bsf	29,4	;volatile
  4723                           
  4724                           ;lin_master.c: 286: PIE1bits.RCIE = 1;
  4725  06D6  0021               	movlb	1	; select bank1
  4726  06D7  1691               	bsf	17,5	;volatile
  4727  06D8  0008               	return
  4728  06D9                     __end_of_LIN_enableRx:	
  4729                           
  4730                           	psect	text34
  4731  06D9                     __ptext34:	
  4732 ;; *************** function _LIN_disableRx *****************
  4733 ;; Defined at:
  4734 ;;		line 289 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;		None
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;		None
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      void 
  4741 ;; Registers used:
  4742 ;;		None
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4752 ;;Total ram usage:        0 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; Hardware stack levels required when called:    6
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_LIN_handler
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           
  4763                           ;psect for function _LIN_disableRx
  4764  06D9                     _LIN_disableRx:	
  4765                           
  4766                           ;lin_master.c: 290: RCSTAbits.CREN = 0;
  4767                           
  4768                           ;incstack = 0
  4769                           ; Regs used in _LIN_disableRx: []
  4770  06D9  0023               	movlb	3	; select bank3
  4771  06DA  121D               	bcf	29,4	;volatile
  4772                           
  4773                           ;lin_master.c: 291: PIE1bits.RCIE = 0;
  4774  06DB  0021               	movlb	1	; select bank1
  4775  06DC  1291               	bcf	17,5	;volatile
  4776  06DD  0008               	return
  4777  06DE                     __end_of_LIN_disableRx:	
  4778                           
  4779                           	psect	text35
  4780  06F8                     __ptext35:	
  4781 ;; *************** function _EUSART_is_rx_ready *****************
  4782 ;; Defined at:
  4783 ;;		line 134 in file "mcc_generated_files/eusart.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;		None
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      unsigned char 
  4790 ;; Registers used:
  4791 ;;		wreg
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4801 ;;Total ram usage:        0 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:    6
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_LIN_handler
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           
  4812                           ;psect for function _EUSART_is_rx_ready
  4813  06F8                     _EUSART_is_rx_ready:	
  4814                           
  4815                           ;eusart.c: 136: return eusartRxCount;
  4816                           
  4817                           ;incstack = 0
  4818                           ; Regs used in _EUSART_is_rx_ready: [wreg]
  4819  06F8  0020               	movlb	0	; select bank0
  4820  06F9  0831               	movf	_eusartRxCount,w	;volatile
  4821  06FA  0008               	return
  4822  06FB                     __end_of_EUSART_is_rx_ready:	
  4823                           
  4824                           	psect	intentry
  4825  0004                     __pintentry:	
  4826 ;; *************** function _INTERRUPT_InterruptManager *****************
  4827 ;; Defined at:
  4828 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;		None
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;		None
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      void 
  4835 ;; Registers used:
  4836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4844 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4845 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4846 ;;Total ram usage:        1 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    5
  4849 ;; This function calls:
  4850 ;;		Absolute function
  4851 ;;		_EUSART_Receive_ISR
  4852 ;;		_EUSART_Transmit_ISR
  4853 ;;		_TMR2_ISR
  4854 ;; This function is called by:
  4855 ;;		Interrupt level 1
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859  0004                     _INTERRUPT_InterruptManager:	
  4860                           
  4861                           ;incstack = 0
  4862  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4863                           
  4864                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4865  0005  3180               	pagesel	$
  4866  0006  0020               	movlb	0	; select bank0
  4867  0007  087F               	movf	127,w
  4868  0008  00CB               	movwf	??_INTERRUPT_InterruptManager
  4869                           
  4870                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  4871  0009  1F0B               	btfss	11,6	;volatile
  4872  000A  282B               	goto	i1l35
  4873                           
  4874                           ;interrupt_manager.c: 56: {
  4875                           ;interrupt_manager.c: 57: if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  4876  000B  0021               	movlb	1	; select bank1
  4877  000C  1E11               	btfss	17,4	;volatile
  4878  000D  2817               	goto	i1l28
  4879  000E  0020               	movlb	0	; select bank0
  4880  000F  1E11               	btfss	17,4	;volatile
  4881  0010  2817               	goto	i1l28
  4882                           
  4883                           ;interrupt_manager.c: 58: {
  4884                           ;interrupt_manager.c: 59: EUSART_TxDefaultInterruptHandler();
  4885  0011  0864               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  4886  0012  008A               	movwf	10
  4887  0013  0863               	movf	_EUSART_TxDefaultInterruptHandler,w
  4888  0014  000A               	callw
  4889  0015  3180               	pagesel	$
  4890                           
  4891                           ;interrupt_manager.c: 60: }
  4892  0016  282B               	goto	i1l35
  4893  0017                     i1l28:	
  4894                           
  4895                           ;interrupt_manager.c: 61: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  4896  0017  0021               	movlb	1	; select bank1
  4897  0018  1E91               	btfss	17,5	;volatile
  4898  0019  2823               	goto	i1l30
  4899  001A  0020               	movlb	0	; select bank0
  4900  001B  1E91               	btfss	17,5	;volatile
  4901  001C  2823               	goto	i1l30
  4902                           
  4903                           ;interrupt_manager.c: 62: {
  4904                           ;interrupt_manager.c: 63: EUSART_RxDefaultInterruptHandler();
  4905  001D  0862               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  4906  001E  008A               	movwf	10
  4907  001F  0861               	movf	_EUSART_RxDefaultInterruptHandler,w
  4908  0020  000A               	callw
  4909  0021  3180               	pagesel	$
  4910                           
  4911                           ;interrupt_manager.c: 64: }
  4912  0022  282B               	goto	i1l35
  4913  0023                     i1l30:	
  4914                           
  4915                           ;interrupt_manager.c: 65: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4916  0023  0021               	movlb	1	; select bank1
  4917  0024  1C91               	btfss	17,1	;volatile
  4918  0025  282B               	goto	i1l35
  4919  0026  0020               	movlb	0	; select bank0
  4920  0027  1C91               	btfss	17,1	;volatile
  4921  0028  282B               	goto	i1l35
  4922                           
  4923                           ;interrupt_manager.c: 66: {
  4924                           ;interrupt_manager.c: 67: TMR2_ISR();
  4925  0029  3186  2684         	fcall	_TMR2_ISR
  4926  002B                     i1l35:	
  4927                           ;interrupt_manager.c: 74: else
  4928                           ;interrupt_manager.c: 75: {
  4929                           
  4930                           ;interrupt_manager.c: 72: }
  4931                           ;interrupt_manager.c: 73: }
  4932                           
  4933                           ;interrupt_manager.c: 69: else
  4934                           ;interrupt_manager.c: 70: {
  4935                           
  4936                           ;interrupt_manager.c: 68: }
  4937                           
  4938  002B  0020               	movlb	0	; select bank0
  4939  002C  084B               	movf	??_INTERRUPT_InterruptManager,w
  4940  002D  00FF               	movwf	127
  4941  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4942  002F  0009               	retfie
  4943  0030                     __end_of_INTERRUPT_InterruptManager:	
  4944                           
  4945                           	psect	text37
  4946  0684                     __ptext37:	
  4947 ;; *************** function _TMR2_ISR *****************
  4948 ;; Defined at:
  4949 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;		None
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;		None
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      void 
  4956 ;; Registers used:
  4957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4967 ;;Total ram usage:        0 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; Hardware stack levels required when called:    4
  4970 ;; This function calls:
  4971 ;;		Absolute function
  4972 ;;		_LIN_timerHandler
  4973 ;;		_TMR2_DefaultInterruptHandler
  4974 ;; This function is called by:
  4975 ;;		_INTERRUPT_InterruptManager
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           
  4980                           ;psect for function _TMR2_ISR
  4981  0684                     _TMR2_ISR:	
  4982                           
  4983                           ;tmr2.c: 123: PIR1bits.TMR2IF = 0;
  4984                           
  4985                           ;incstack = 0
  4986                           ; Regs used in _TMR2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4987  0684  0020               	movlb	0	; select bank0
  4988  0685  1091               	bcf	17,1	;volatile
  4989                           
  4990                           ;tmr2.c: 125: if(TMR2_InterruptHandler)
  4991  0686  085D               	movf	_TMR2_InterruptHandler,w
  4992  0687  045E               	iorwf	_TMR2_InterruptHandler+1,w
  4993  0688  1903               	btfsc	3,2
  4994  0689  0008               	return
  4995                           
  4996                           ;tmr2.c: 126: {
  4997                           ;tmr2.c: 127: TMR2_InterruptHandler();
  4998  068A  085E               	movf	_TMR2_InterruptHandler+1,w
  4999  068B  008A               	movwf	10
  5000  068C  085D               	movf	_TMR2_InterruptHandler,w
  5001  068D  000A               	callw
  5002  068E  3186               	pagesel	$
  5003  068F  0008               	return
  5004  0690                     __end_of_TMR2_ISR:	
  5005                           
  5006                           	psect	text38
  5007  053E                     __ptext38:	
  5008 ;; *************** function _LIN_timerHandler *****************
  5009 ;; Defined at:
  5010 ;;		line 248 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;		None
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;		None
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  1    wreg      void 
  5017 ;; Registers used:
  5018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5026 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5027 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5028 ;;Total ram usage:        1 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    3
  5031 ;; This function calls:
  5032 ;;		_LIN_sendPeriodicTx
  5033 ;;		i1_LIN_stopTimer
  5034 ;; This function is called by:
  5035 ;;		_LIN_setTimerHandler
  5036 ;;		_TMR2_ISR
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           
  5041                           ;psect for function _LIN_timerHandler
  5042  053E                     _LIN_timerHandler:	
  5043                           
  5044                           ;lin_master.c: 250: if(LIN_timerRunning == 1){
  5045                           
  5046                           ;incstack = 0
  5047                           ; Regs used in _LIN_timerHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5048  053E  0020               	movlb	0	; select bank0
  5049  053F  032D               	decf	_LIN_timerRunning,w
  5050  0540  1D03               	btfss	3,2
  5051  0541  2D4D               	goto	i1l1880
  5052                           
  5053                           ;lin_master.c: 251: if (++LIN_timerCallBack >= LIN_timeout){
  5054  0542  3001               	movlw	1
  5055  0543  00CA               	movwf	??_LIN_timerHandler
  5056  0544  084A               	movf	??_LIN_timerHandler,w
  5057  0545  07AC               	addwf	_LIN_timerCallBack,f	;volatile
  5058  0546  0867               	movf	_LIN_timeout,w
  5059  0547  022C               	subwf	_LIN_timerCallBack,w	;volatile
  5060  0548  1C03               	skipc
  5061  0549  2D4D               	goto	i1l1880
  5062                           
  5063                           ;lin_master.c: 253: LIN_stopTimer();
  5064  054A  3186  26EA  3185   	fcall	i1_LIN_stopTimer
  5065  054D                     i1l1880:	
  5066                           
  5067                           ;lin_master.c: 254: }
  5068                           ;lin_master.c: 255: }
  5069                           ;lin_master.c: 256: if(LIN_enablePeriodTx == 1){
  5070  054D  0021               	movlb	1	; select bank1
  5071  054E  0355               	decf	_LIN_enablePeriodTx^(0+128),w
  5072  054F  1D03               	btfss	3,2
  5073  0550  0008               	return
  5074                           
  5075                           ;lin_master.c: 257: if(++LIN_periodCallBack >= LIN_period){
  5076  0551  3001               	movlw	1
  5077  0552  0020               	movlb	0	; select bank0
  5078  0553  00CA               	movwf	??_LIN_timerHandler
  5079  0554  084A               	movf	??_LIN_timerHandler,w
  5080  0555  07AB               	addwf	_LIN_periodCallBack,f	;volatile
  5081  0556  082E               	movf	_LIN_period,w
  5082  0557  022B               	subwf	_LIN_periodCallBack,w	;volatile
  5083  0558  1C03               	skipc
  5084  0559  0008               	return
  5085                           
  5086                           ;lin_master.c: 258: LIN_sendPeriodicTx();
  5087  055A  3182  2243         	fcall	_LIN_sendPeriodicTx
  5088  055C  0008               	return
  5089  055D                     __end_of_LIN_timerHandler:	
  5090                           
  5091                           	psect	text39
  5092  06FF                     __ptext39:	
  5093 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  5094 ;; Defined at:
  5095 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;		None
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;		None
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  1    wreg      void 
  5102 ;; Registers used:
  5103 ;;		None
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5113 ;;Total ram usage:        0 bytes
  5114 ;; Hardware stack levels used:    1
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_TMR2_Initialize
  5119 ;;		_TMR2_ISR
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           
  5124                           ;psect for function _TMR2_DefaultInterruptHandler
  5125  06FF                     _TMR2_DefaultInterruptHandler:	
  5126                           
  5127                           ;incstack = 0
  5128                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  5129  06FF  0008               	return
  5130  0700                     __end_of_TMR2_DefaultInterruptHandler:	
  5131                           
  5132                           	psect	text40
  5133  06EA                     __ptext40:	
  5134 ;; *************** function i1_LIN_stopTimer *****************
  5135 ;; Defined at:
  5136 ;;		line 268 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;		None
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;		None
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  1    wreg      void 
  5143 ;; Registers used:
  5144 ;;		status,2
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5154 ;;Total ram usage:        0 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; This function calls:
  5157 ;;		Nothing
  5158 ;; This function is called by:
  5159 ;;		_LIN_timerHandler
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           
  5164                           ;psect for function i1_LIN_stopTimer
  5165  06EA                     i1_LIN_stopTimer:	
  5166                           
  5167                           ;lin_master.c: 270: LIN_timerCallBack = 0;
  5168                           
  5169                           ;incstack = 0
  5170                           ; Regs used in i1_LIN_stopTimer: [status,2]
  5171  06EA  0020               	movlb	0	; select bank0
  5172  06EB  01AC               	clrf	_LIN_timerCallBack	;volatile
  5173                           
  5174                           ;lin_master.c: 271: LIN_timerRunning = 0;
  5175  06EC  01AD               	clrf	_LIN_timerRunning
  5176  06ED  0008               	return
  5177  06EE                     __end_ofi1_LIN_stopTimer:	
  5178                           
  5179                           	psect	text41
  5180  0243                     __ptext41:	
  5181 ;; *************** function _LIN_sendPeriodicTx *****************
  5182 ;; Defined at:
  5183 ;;		line 298 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;		None
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;  periodicTx      2    4[BANK0 ] PTR const struct .
  5188 ;;		 -> ROM(8192), scheduleTable(24), 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  1    wreg      void 
  5191 ;; Registers used:
  5192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5200 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5201 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5202 ;;Total ram usage:        5 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; Hardware stack levels required when called:    2
  5205 ;; This function calls:
  5206 ;;		___wmul
  5207 ;;		i1_LIN_queuePacket
  5208 ;; This function is called by:
  5209 ;;		_LIN_timerHandler
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           
  5214                           ;psect for function _LIN_sendPeriodicTx
  5215  0243                     _LIN_sendPeriodicTx:	
  5216                           
  5217                           ;lin_master.c: 299: static volatile uint8_t scheduleIndex = 0;
  5218                           ;lin_master.c: 300: const lin_cmd_packet_t* periodicTx;
  5219                           ;lin_master.c: 302: LIN_periodCallBack = 0;
  5220                           
  5221                           ;incstack = 0
  5222                           ; Regs used in _LIN_sendPeriodicTx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5223  0243  0020               	movlb	0	; select bank0
  5224  0244  01AB               	clrf	_LIN_periodCallBack	;volatile
  5225                           
  5226                           ;lin_master.c: 303: periodicTx = schedule + scheduleIndex;
  5227  0245  0828               	movf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  5228  0246  00FB               	movwf	??_LIN_sendPeriodicTx
  5229  0247  01FC               	clrf	??_LIN_sendPeriodicTx+1
  5230  0248  087B               	movf	??_LIN_sendPeriodicTx,w
  5231  0249  00F0               	movwf	___wmul@multiplier
  5232  024A  087C               	movf	??_LIN_sendPeriodicTx+1,w
  5233  024B  00F1               	movwf	___wmul@multiplier+1
  5234  024C  3006               	movlw	6
  5235  024D  00F2               	movwf	___wmul@multiplicand
  5236  024E  3000               	movlw	0
  5237  024F  00F3               	movwf	___wmul@multiplicand+1
  5238  0250  3185  25B1  3182   	fcall	___wmul
  5239  0253  0870               	movf	?___wmul,w
  5240  0254  0020               	movlb	0	; select bank0
  5241  0255  075B               	addwf	_schedule,w
  5242  0256  00C8               	movwf	LIN_sendPeriodicTx@periodicTx
  5243  0257  0871               	movf	?___wmul+1,w
  5244  0258  3D5C               	addwfc	_schedule+1,w
  5245  0259  00C9               	movwf	LIN_sendPeriodicTx@periodicTx+1
  5246                           
  5247                           ;lin_master.c: 305: if(periodicTx->period > 0){
  5248  025A  0849               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5249  025B  00FC               	movwf	??_LIN_sendPeriodicTx+1
  5250  025C  0848               	movf	LIN_sendPeriodicTx@periodicTx,w
  5251  025D  00FB               	movwf	??_LIN_sendPeriodicTx
  5252  025E  3004               	movlw	4
  5253  025F  077B               	addwf	??_LIN_sendPeriodicTx,w
  5254  0260  0084               	movwf	4
  5255  0261  087C               	movf	??_LIN_sendPeriodicTx+1,w
  5256  0262  1803               	skipnc
  5257  0263  0A7C               	incf	??_LIN_sendPeriodicTx+1,w
  5258  0264  0085               	movwf	5
  5259  0265  0012               	moviw fsr0++
  5260  0266  1903               	btfsc	3,2
  5261  0267  2A7F               	goto	i1l1724
  5262                           
  5263                           ;lin_master.c: 306: LIN_queuePacket(periodicTx->cmd, periodicTx->data);
  5264  0268  0849               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5265  0269  00FC               	movwf	??_LIN_sendPeriodicTx+1
  5266  026A  0848               	movf	LIN_sendPeriodicTx@periodicTx,w
  5267  026B  00FB               	movwf	??_LIN_sendPeriodicTx
  5268  026C  3005               	movlw	5
  5269  026D  077B               	addwf	??_LIN_sendPeriodicTx,w
  5270  026E  0084               	movwf	4
  5271  026F  087C               	movf	??_LIN_sendPeriodicTx+1,w
  5272  0270  1803               	skipnc
  5273  0271  0A7C               	incf	??_LIN_sendPeriodicTx+1,w
  5274  0272  0085               	movwf	5
  5275  0273  0800               	movf	0,w	;code access
  5276  0274  00FD               	movwf	??_LIN_sendPeriodicTx+2
  5277  0275  087D               	movf	??_LIN_sendPeriodicTx+2,w
  5278  0276  00F6               	movwf	i1LIN_queuePacket@data
  5279  0277  0848               	movf	LIN_sendPeriodicTx@periodicTx,w
  5280  0278  0084               	movwf	4
  5281  0279  0849               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5282  027A  0085               	movwf	5
  5283  027B  0800               	movf	0,w	;code access
  5284  027C  3181  2104  3182   	fcall	i1_LIN_queuePacket
  5285  027F                     i1l1724:	
  5286                           ;lin_master.c: 307: }
  5287                           ;lin_master.c: 309: do{
  5288                           
  5289                           
  5290                           ;lin_master.c: 310: if(++scheduleIndex >= scheduleLength){
  5291  027F  3001               	movlw	1
  5292  0280  00FB               	movwf	??_LIN_sendPeriodicTx
  5293  0281  087B               	movf	??_LIN_sendPeriodicTx,w
  5294  0282  0020               	movlb	0	; select bank0
  5295  0283  07A8               	addwf	LIN_sendPeriodicTx@scheduleIndex,f	;volatile
  5296  0284  0865               	movf	_scheduleLength,w
  5297  0285  0228               	subwf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  5298  0286  1803               	btfsc	3,0
  5299                           
  5300                           ;lin_master.c: 311: scheduleIndex = 0;
  5301  0287  01A8               	clrf	LIN_sendPeriodicTx@scheduleIndex	;volatile
  5302                           
  5303                           ;lin_master.c: 312: }
  5304                           ;lin_master.c: 313: periodicTx = schedule + scheduleIndex;
  5305  0288  0828               	movf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  5306  0289  00FB               	movwf	??_LIN_sendPeriodicTx
  5307  028A  01FC               	clrf	??_LIN_sendPeriodicTx+1
  5308  028B  087B               	movf	??_LIN_sendPeriodicTx,w
  5309  028C  00F0               	movwf	___wmul@multiplier
  5310  028D  087C               	movf	??_LIN_sendPeriodicTx+1,w
  5311  028E  00F1               	movwf	___wmul@multiplier+1
  5312  028F  3006               	movlw	6
  5313  0290  00F2               	movwf	___wmul@multiplicand
  5314  0291  3000               	movlw	0
  5315  0292  00F3               	movwf	___wmul@multiplicand+1
  5316  0293  3185  25B1  3182   	fcall	___wmul
  5317  0296  0870               	movf	?___wmul,w
  5318  0297  0020               	movlb	0	; select bank0
  5319  0298  075B               	addwf	_schedule,w
  5320  0299  00C8               	movwf	LIN_sendPeriodicTx@periodicTx
  5321  029A  0871               	movf	?___wmul+1,w
  5322  029B  3D5C               	addwfc	_schedule+1,w
  5323  029C  00C9               	movwf	LIN_sendPeriodicTx@periodicTx+1
  5324                           
  5325                           ;lin_master.c: 314: } while(periodicTx->period == 0);
  5326  029D  0849               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5327  029E  00FC               	movwf	??_LIN_sendPeriodicTx+1
  5328  029F  0848               	movf	LIN_sendPeriodicTx@periodicTx,w
  5329  02A0  00FB               	movwf	??_LIN_sendPeriodicTx
  5330  02A1  3004               	movlw	4
  5331  02A2  077B               	addwf	??_LIN_sendPeriodicTx,w
  5332  02A3  0084               	movwf	4
  5333  02A4  087C               	movf	??_LIN_sendPeriodicTx+1,w
  5334  02A5  1803               	skipnc
  5335  02A6  0A7C               	incf	??_LIN_sendPeriodicTx+1,w
  5336  02A7  0085               	movwf	5
  5337  02A8  0012               	moviw fsr0++
  5338  02A9  1903               	btfsc	3,2
  5339  02AA  2A7F               	goto	i1l1724
  5340                           
  5341                           ;lin_master.c: 316: LIN_period = periodicTx->period;
  5342  02AB  0849               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5343  02AC  00FC               	movwf	??_LIN_sendPeriodicTx+1
  5344  02AD  0848               	movf	LIN_sendPeriodicTx@periodicTx,w
  5345  02AE  00FB               	movwf	??_LIN_sendPeriodicTx
  5346  02AF  3004               	movlw	4
  5347  02B0  077B               	addwf	??_LIN_sendPeriodicTx,w
  5348  02B1  0084               	movwf	4
  5349  02B2  087C               	movf	??_LIN_sendPeriodicTx+1,w
  5350  02B3  1803               	skipnc
  5351  02B4  0A7C               	incf	??_LIN_sendPeriodicTx+1,w
  5352  02B5  0085               	movwf	5
  5353  02B6  0800               	movf	0,w	;code access
  5354  02B7  00FD               	movwf	??_LIN_sendPeriodicTx+2
  5355  02B8  087D               	movf	??_LIN_sendPeriodicTx+2,w
  5356  02B9  00AE               	movwf	_LIN_period
  5357  02BA  0008               	return
  5358  02BB                     __end_of_LIN_sendPeriodicTx:	
  5359                           
  5360                           	psect	text42
  5361  0104                     __ptext42:	
  5362 ;; *************** function i1_LIN_queuePacket *****************
  5363 ;; Defined at:
  5364 ;;		line 70 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  cmd             1    wreg     unsigned char 
  5367 ;;  data            1    6[COMMON] PTR unsigned char 
  5368 ;;		 -> main@data_to_send(1), SIGNAL_Data(1), LFRX_Data(8), RSSI_Data(1), 
  5369 ;;		 -> UNLOCK_Data(1), 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  cmd             1    0[BANK0 ] unsigned char 
  5372 ;;  LIN_queuePac    2    2[BANK0 ] PTR const struct .
  5373 ;;		 -> ROM(8192), scheduleTable(24), 
  5374 ;;  LIN_queuePac    1    1[BANK0 ] unsigned char 
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  1    wreg      void 
  5377 ;; Registers used:
  5378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5384 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5385 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5386 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5387 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5388 ;;Total ram usage:        9 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; Hardware stack levels required when called:    1
  5391 ;; This function calls:
  5392 ;;		i1_LIN_calcParity
  5393 ;;		i1_LIN_getChecksum
  5394 ;; This function is called by:
  5395 ;;		_LIN_sendPeriodicTx
  5396 ;; This function uses a non-reentrant model
  5397 ;;
  5398                           
  5399                           
  5400                           ;psect for function i1_LIN_queuePacket
  5401  0104                     i1_LIN_queuePacket:	
  5402                           
  5403                           ;incstack = 0
  5404                           ; Regs used in i1_LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5405                           ;i1LIN_queuePacket@cmd stored from wreg
  5406  0104  0020               	movlb	0	; select bank0
  5407  0105  00C4               	movwf	i1LIN_queuePacket@cmd
  5408                           
  5409                           ;lin_master.c: 71: const lin_cmd_packet_t* tempSchedule = schedule;
  5410  0106  085C               	movf	_schedule+1,w
  5411  0107  00C7               	movwf	i1LIN_queuePacket@tempSchedule+1
  5412  0108  085B               	movf	_schedule,w
  5413  0109  00C6               	movwf	i1LIN_queuePacket@tempSchedule
  5414                           
  5415                           ;lin_master.c: 73: for(uint8_t i = 0; i < scheduleLength; i++){
  5416  010A  01C5               	clrf	i1LIN_queuePacket@i
  5417  010B                     i1l1596:	
  5418  010B  0865               	movf	_scheduleLength,w
  5419  010C  0245               	subwf	i1LIN_queuePacket@i,w
  5420  010D  1803               	btfsc	3,0
  5421  010E  2920               	goto	i1l1598
  5422                           
  5423                           ;lin_master.c: 74: if(cmd == tempSchedule->cmd){
  5424  010F  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5425  0110  0084               	movwf	4
  5426  0111  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5427  0112  0085               	movwf	5
  5428  0113  0800               	movf	0,w	;code access
  5429  0114  0644               	xorwf	i1LIN_queuePacket@cmd,w
  5430  0115  1903               	btfsc	3,2
  5431  0116  2920               	goto	i1l1598
  5432                           
  5433                           ;lin_master.c: 76: }
  5434                           ;lin_master.c: 77: tempSchedule++;
  5435                           
  5436                           ;lin_master.c: 75: break;
  5437  0117  3006               	movlw	6
  5438  0118  07C6               	addwf	i1LIN_queuePacket@tempSchedule,f
  5439  0119  3000               	movlw	0
  5440  011A  3DC7               	addwfc	i1LIN_queuePacket@tempSchedule+1,f
  5441  011B  3001               	movlw	1
  5442  011C  00F7               	movwf	??i1_LIN_queuePacket
  5443  011D  0877               	movf	??i1_LIN_queuePacket,w
  5444  011E  07C5               	addwf	i1LIN_queuePacket@i,f
  5445  011F  290B               	goto	i1l1596
  5446  0120                     i1l1598:	
  5447                           
  5448                           ;lin_master.c: 78: }
  5449                           ;lin_master.c: 81: LIN_packet.PID = LIN_calcParity(tempSchedule->cmd);
  5450  0120  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5451  0121  0084               	movwf	4
  5452  0122  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5453  0123  0085               	movwf	5
  5454  0124  0800               	movf	0,w	;code access
  5455  0125  3182  22BB  3181   	fcall	i1_LIN_calcParity
  5456  0128  00F7               	movwf	??i1_LIN_queuePacket
  5457  0129  0877               	movf	??i1_LIN_queuePacket,w
  5458  012A  0020               	movlb	0	; select bank0
  5459  012B  00B6               	movwf	_LIN_packet
  5460                           
  5461                           ;lin_master.c: 83: if(tempSchedule->type == TRANSMIT){
  5462  012C  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5463  012D  00F8               	movwf	??i1_LIN_queuePacket+1
  5464  012E  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5465  012F  00F7               	movwf	??i1_LIN_queuePacket
  5466  0130  3001               	movlw	1
  5467  0131  0777               	addwf	??i1_LIN_queuePacket,w
  5468  0132  0084               	movwf	4
  5469  0133  0878               	movf	??i1_LIN_queuePacket+1,w
  5470  0134  1803               	skipnc
  5471  0135  0A78               	incf	??i1_LIN_queuePacket+1,w
  5472  0136  0085               	movwf	5
  5473  0137  0012               	moviw fsr0++
  5474  0138  1D03               	btfss	3,2
  5475  0139  2990               	goto	i1l1612
  5476                           
  5477                           ;lin_master.c: 86: if(tempSchedule->length > 0){
  5478  013A  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5479  013B  00F8               	movwf	??i1_LIN_queuePacket+1
  5480  013C  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5481  013D  00F7               	movwf	??i1_LIN_queuePacket
  5482  013E  3002               	movlw	2
  5483  013F  0777               	addwf	??i1_LIN_queuePacket,w
  5484  0140  0084               	movwf	4
  5485  0141  0878               	movf	??i1_LIN_queuePacket+1,w
  5486  0142  1803               	skipnc
  5487  0143  0A78               	incf	??i1_LIN_queuePacket+1,w
  5488  0144  0085               	movwf	5
  5489  0145  0012               	moviw fsr0++
  5490  0146  1903               	btfsc	3,2
  5491  0147  297C               	goto	i1l444
  5492                           
  5493                           ;lin_master.c: 87: LIN_packet.length = tempSchedule->length;
  5494  0148  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5495  0149  00F8               	movwf	??i1_LIN_queuePacket+1
  5496  014A  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5497  014B  00F7               	movwf	??i1_LIN_queuePacket
  5498  014C  3002               	movlw	2
  5499  014D  0777               	addwf	??i1_LIN_queuePacket,w
  5500  014E  0084               	movwf	4
  5501  014F  0878               	movf	??i1_LIN_queuePacket+1,w
  5502  0150  1803               	skipnc
  5503  0151  0A78               	incf	??i1_LIN_queuePacket+1,w
  5504  0152  0085               	movwf	5
  5505  0153  0800               	movf	0,w	;code access
  5506  0154  00F9               	movwf	??i1_LIN_queuePacket+2
  5507  0155  0879               	movf	??i1_LIN_queuePacket+2,w
  5508  0156  00C0               	movwf	_LIN_packet+10
  5509                           
  5510                           ;lin_master.c: 88: __builtin_memcpy(LIN_packet.data,data,tempSchedule->length);
  5511  0157  3001               	movlw	1
  5512  0158  3E36               	addlw	(low (_LIN_packet| 0))& (0+255)
  5513  0159  0086               	movwf	6
  5514  015A  0187               	clrf	7
  5515  015B  0020               	movlb	0	; select bank0
  5516  015C  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5517  015D  00F8               	movwf	??i1_LIN_queuePacket+1
  5518  015E  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5519  015F  00F7               	movwf	??i1_LIN_queuePacket
  5520  0160  3002               	movlw	2
  5521  0161  0777               	addwf	??i1_LIN_queuePacket,w
  5522  0162  0084               	movwf	4
  5523  0163  0878               	movf	??i1_LIN_queuePacket+1,w
  5524  0164  1803               	skipnc
  5525  0165  0A78               	incf	??i1_LIN_queuePacket+1,w
  5526  0166  0085               	movwf	5
  5527  0167  0800               	movf	0,w	;code access
  5528  0168  00F9               	movwf	??i1_LIN_queuePacket+2
  5529  0169  01FA               	clrf	??i1_LIN_queuePacket+3
  5530  016A  0879               	movf	??i1_LIN_queuePacket+2,w
  5531  016B  067A               	xorwf	??i1_LIN_queuePacket+3,w
  5532  016C  1903               	skipnz
  5533  016D  2982               	goto	i1l1610
  5534  016E  0876               	movf	i1LIN_queuePacket@data,w
  5535  016F  0084               	movwf	4
  5536  0170  0185               	clrf	5
  5537  0171                     u147_2m0:	
  5538  0171  0012               	moviw fsr0++
  5539  0172  001E               	movwi fsr1++
  5540  0173  3001               	movlw	1
  5541  0174  02F9               	subwf	??i1_LIN_queuePacket+2,f
  5542  0175  3000               	movlw	0
  5543  0176  3BFA               	subwfb	??i1_LIN_queuePacket+3,f
  5544  0177  087A               	movf	??i1_LIN_queuePacket+3,w
  5545  0178  0479               	iorwf	??i1_LIN_queuePacket+2,w
  5546  0179  1D03               	btfss	3,2
  5547  017A  2971               	goto	u147_2m0
  5548  017B  2982               	goto	i1l1610
  5549  017C                     i1l444:	
  5550                           ;lin_master.c: 89: } else {
  5551                           
  5552                           
  5553                           ;lin_master.c: 90: LIN_packet.length = 1;
  5554  017C  01C0               	clrf	_LIN_packet+10
  5555  017D  0AC0               	incf	_LIN_packet+10,f
  5556                           
  5557                           ;lin_master.c: 91: LIN_packet.data[0] = 0xAA;
  5558  017E  30AA               	movlw	170
  5559  017F  00F7               	movwf	??i1_LIN_queuePacket
  5560  0180  0877               	movf	??i1_LIN_queuePacket,w
  5561  0181  00B7               	movwf	_LIN_packet+1
  5562  0182                     i1l1610:	
  5563                           
  5564                           ;lin_master.c: 92: }
  5565                           ;lin_master.c: 95: LIN_packet.checksum = LIN_getChecksum(LIN_packet.length, LIN_packet.d
      +                          ata);
  5566  0182  3037               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
  5567  0183  00F7               	movwf	??i1_LIN_queuePacket
  5568  0184  0877               	movf	??i1_LIN_queuePacket,w
  5569  0185  00F0               	movwf	i1LIN_getChecksum@data
  5570  0186  0020               	movlb	0	; select bank0
  5571  0187  0840               	movf	_LIN_packet+10,w
  5572  0188  3184  24A1  3181   	fcall	i1_LIN_getChecksum
  5573  018B  00F8               	movwf	??i1_LIN_queuePacket+1
  5574  018C  0878               	movf	??i1_LIN_queuePacket+1,w
  5575  018D  0020               	movlb	0	; select bank0
  5576  018E  00BF               	movwf	_LIN_packet+9
  5577                           
  5578                           ;lin_master.c: 97: } else {
  5579  018F  29BB               	goto	i1l1614
  5580  0190                     i1l1612:	
  5581                           
  5582                           ;lin_master.c: 98: LIN_rxPacket.rxLength = tempSchedule->length;
  5583  0190  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5584  0191  00F8               	movwf	??i1_LIN_queuePacket+1
  5585  0192  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5586  0193  00F7               	movwf	??i1_LIN_queuePacket
  5587  0194  3002               	movlw	2
  5588  0195  0777               	addwf	??i1_LIN_queuePacket,w
  5589  0196  0084               	movwf	4
  5590  0197  0878               	movf	??i1_LIN_queuePacket+1,w
  5591  0198  1803               	skipnc
  5592  0199  0A78               	incf	??i1_LIN_queuePacket+1,w
  5593  019A  0085               	movwf	5
  5594  019B  0800               	movf	0,w	;code access
  5595  019C  00F9               	movwf	??i1_LIN_queuePacket+2
  5596  019D  0879               	movf	??i1_LIN_queuePacket+2,w
  5597  019E  0021               	movlb	1	; select bank1
  5598  019F  00B1               	movwf	(_LIN_rxPacket^(0+128)+1)
  5599                           
  5600                           ;lin_master.c: 99: LIN_rxPacket.cmd = tempSchedule->cmd;
  5601  01A0  0020               	movlb	0	; select bank0
  5602  01A1  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5603  01A2  0084               	movwf	4
  5604  01A3  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5605  01A4  0085               	movwf	5
  5606  01A5  0800               	movf	0,w	;code access
  5607  01A6  00F7               	movwf	??i1_LIN_queuePacket
  5608  01A7  0877               	movf	??i1_LIN_queuePacket,w
  5609  01A8  0021               	movlb	1	; select bank1
  5610  01A9  00B0               	movwf	_LIN_rxPacket^(0+128)
  5611                           
  5612                           ;lin_master.c: 100: LIN_rxPacket.timeout = tempSchedule->timeout;
  5613  01AA  0020               	movlb	0	; select bank0
  5614  01AB  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5615  01AC  00F8               	movwf	??i1_LIN_queuePacket+1
  5616  01AD  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5617  01AE  00F7               	movwf	??i1_LIN_queuePacket
  5618  01AF  3003               	movlw	3
  5619  01B0  0777               	addwf	??i1_LIN_queuePacket,w
  5620  01B1  0084               	movwf	4
  5621  01B2  0878               	movf	??i1_LIN_queuePacket+1,w
  5622  01B3  1803               	skipnc
  5623  01B4  0A78               	incf	??i1_LIN_queuePacket+1,w
  5624  01B5  0085               	movwf	5
  5625  01B6  0800               	movf	0,w	;code access
  5626  01B7  00F9               	movwf	??i1_LIN_queuePacket+2
  5627  01B8  0879               	movf	??i1_LIN_queuePacket+2,w
  5628  01B9  0021               	movlb	1	; select bank1
  5629  01BA  00BB               	movwf	(_LIN_rxPacket^(0+128)+11)
  5630  01BB                     i1l1614:	
  5631                           
  5632                           ;lin_master.c: 101: }
  5633                           ;lin_master.c: 103: LIN_txReady = 1;
  5634  01BB  0020               	movlb	0	; select bank0
  5635  01BC  01AF               	clrf	_LIN_txReady
  5636  01BD  0AAF               	incf	_LIN_txReady,f
  5637  01BE  0008               	return
  5638  01BF                     __end_ofi1_LIN_queuePacket:	
  5639                           
  5640                           	psect	text43
  5641  04A1                     __ptext43:	
  5642 ;; *************** function i1_LIN_getChecksum *****************
  5643 ;; Defined at:
  5644 ;;		line 228 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  length          1    wreg     unsigned char 
  5647 ;;  data            1    0[COMMON] PTR unsigned char 
  5648 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;  length          1    2[COMMON] unsigned char 
  5651 ;;  LIN_getCheck    2    4[COMMON] unsigned int 
  5652 ;;  LIN_getCheck    1    3[COMMON] unsigned char 
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  1    wreg      unsigned char 
  5655 ;; Registers used:
  5656 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5662 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5663 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5664 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5665 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5666 ;;Total ram usage:        6 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; This function calls:
  5669 ;;		Nothing
  5670 ;; This function is called by:
  5671 ;;		i1_LIN_queuePacket
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           
  5676                           ;psect for function i1_LIN_getChecksum
  5677  04A1                     i1_LIN_getChecksum:	
  5678                           
  5679                           ;incstack = 0
  5680                           ; Regs used in i1_LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  5681                           ;i1LIN_getChecksum@length stored from wreg
  5682  04A1  00F2               	movwf	i1LIN_getChecksum@length
  5683                           
  5684                           ;lin_master.c: 229: uint16_t checksum = 0;
  5685  04A2  01F4               	clrf	i1LIN_getChecksum@checksum
  5686  04A3  01F5               	clrf	i1LIN_getChecksum@checksum+1
  5687                           
  5688                           ;lin_master.c: 231: for (uint8_t i = 0; i < length; i++){
  5689  04A4  01F3               	clrf	i1LIN_getChecksum@i
  5690  04A5                     i1l1550:	
  5691  04A5  0872               	movf	i1LIN_getChecksum@length,w
  5692  04A6  0273               	subwf	i1LIN_getChecksum@i,w
  5693  04A7  1803               	btfsc	3,0
  5694  04A8  2CC7               	goto	i1l495
  5695                           
  5696                           ;lin_master.c: 232: checksum = checksum + *data++;
  5697  04A9  0870               	movf	i1LIN_getChecksum@data,w
  5698  04AA  0086               	movwf	6
  5699  04AB  0187               	clrf	7
  5700  04AC  0801               	movf	1,w
  5701  04AD  0774               	addwf	i1LIN_getChecksum@checksum,w
  5702  04AE  00F4               	movwf	i1LIN_getChecksum@checksum
  5703  04AF  0875               	movf	i1LIN_getChecksum@checksum+1,w
  5704  04B0  1803               	skipnc
  5705  04B1  0A75               	incf	i1LIN_getChecksum@checksum+1,w
  5706  04B2  00F5               	movwf	i1LIN_getChecksum@checksum+1
  5707  04B3  3001               	movlw	1
  5708  04B4  00F1               	movwf	??i1_LIN_getChecksum
  5709  04B5  0871               	movf	??i1_LIN_getChecksum,w
  5710  04B6  07F0               	addwf	i1LIN_getChecksum@data,f
  5711                           
  5712                           ;lin_master.c: 233: if(checksum > 0xFF)
  5713  04B7  3001               	movlw	1
  5714  04B8  0275               	subwf	i1LIN_getChecksum@checksum+1,w
  5715  04B9  3000               	movlw	0
  5716  04BA  1903               	skipnz
  5717  04BB  0274               	subwf	i1LIN_getChecksum@checksum,w
  5718  04BC  1C03               	skipc
  5719  04BD  2CC2               	goto	i1l1548
  5720                           
  5721                           ;lin_master.c: 234: checksum -= 0xFF;
  5722  04BE  30FF               	movlw	255
  5723  04BF  02F4               	subwf	i1LIN_getChecksum@checksum,f
  5724  04C0  3000               	movlw	0
  5725  04C1  3BF5               	subwfb	i1LIN_getChecksum@checksum+1,f
  5726  04C2                     i1l1548:	
  5727  04C2  3001               	movlw	1
  5728  04C3  00F1               	movwf	??i1_LIN_getChecksum
  5729  04C4  0871               	movf	??i1_LIN_getChecksum,w
  5730  04C5  07F3               	addwf	i1LIN_getChecksum@i,f
  5731  04C6  2CA5               	goto	i1l1550
  5732  04C7                     i1l495:	
  5733                           
  5734                           ;lin_master.c: 235: }
  5735                           ;lin_master.c: 236: checksum = ~checksum;
  5736  04C7  09F4               	comf	i1LIN_getChecksum@checksum,f
  5737  04C8  09F5               	comf	i1LIN_getChecksum@checksum+1,f
  5738                           
  5739                           ;lin_master.c: 238: return (uint8_t)checksum;
  5740  04C9  0874               	movf	i1LIN_getChecksum@checksum,w
  5741  04CA  0008               	return
  5742  04CB                     __end_ofi1_LIN_getChecksum:	
  5743                           
  5744                           	psect	text44
  5745  02BB                     __ptext44:	
  5746 ;; *************** function i1_LIN_calcParity *****************
  5747 ;; Defined at:
  5748 ;;		line 210 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  CMD             1    wreg     unsigned char 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  CMD             1    1[COMMON] unsigned char 
  5753 ;;  LIN_calcPari    1    2[COMMON] struct .
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  1    wreg      unsigned char 
  5756 ;; Registers used:
  5757 ;;		wreg, status,0
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5764 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;Total ram usage:        3 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; This function calls:
  5770 ;;		Nothing
  5771 ;; This function is called by:
  5772 ;;		i1_LIN_queuePacket
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           
  5777                           ;psect for function i1_LIN_calcParity
  5778  02BB                     i1_LIN_calcParity:	
  5779                           
  5780                           ;incstack = 0
  5781                           ; Regs used in i1_LIN_calcParity: [wreg+status,0]
  5782                           ;i1LIN_calcParity@CMD stored from wreg
  5783  02BB  00F1               	movwf	i1LIN_calcParity@CMD
  5784                           
  5785                           ;lin_master.c: 211: lin_pid_t PID;
  5786                           ;lin_master.c: 212: PID.rawPID = CMD;
  5787  02BC  0871               	movf	i1LIN_calcParity@CMD,w
  5788  02BD  00F0               	movwf	??i1_LIN_calcParity
  5789  02BE  0870               	movf	??i1_LIN_calcParity,w
  5790  02BF  00F2               	movwf	i1LIN_calcParity@PID
  5791                           
  5792                           ;lin_master.c: 217: PID.P0 = PID.ID0 ^ PID.ID1;
  5793  02C0  1CF2               	btfss	i1LIN_calcParity@PID,1
  5794  02C1  2AC4               	goto	u110_20
  5795  02C2  3001               	movlw	1
  5796  02C3  2AC5               	goto	u110_22
  5797  02C4                     u110_20:	
  5798  02C4  3000               	movlw	0
  5799  02C5                     u110_22:	
  5800  02C5  00F0               	movwf	??i1_LIN_calcParity
  5801  02C6  1C72               	btfss	i1LIN_calcParity@PID,0
  5802  02C7  2ACA               	goto	u111_20
  5803  02C8  3001               	movlw	1
  5804  02C9  2ACB               	goto	u111_22
  5805  02CA                     u111_20:	
  5806  02CA  3000               	movlw	0
  5807  02CB                     u111_22:	
  5808  02CB  0670               	xorwf	??i1_LIN_calcParity,w
  5809  02CC  1903               	btfsc	3,2
  5810  02CD  2AD0               	goto	u112_20
  5811  02CE  1772               	bsf	i1LIN_calcParity@PID,6
  5812  02CF  2AD1               	goto	u113_24
  5813  02D0                     u112_20:	
  5814  02D0  1372               	bcf	i1LIN_calcParity@PID,6
  5815  02D1                     u113_24:	
  5816                           
  5817                           ;lin_master.c: 218: PID.P0 = PID.P0 ^ PID.ID2;
  5818  02D1  1D72               	btfss	i1LIN_calcParity@PID,2
  5819  02D2  2AD5               	goto	u114_20
  5820  02D3  3001               	movlw	1
  5821  02D4  2AD6               	goto	u114_22
  5822  02D5                     u114_20:	
  5823  02D5  3000               	movlw	0
  5824  02D6                     u114_22:	
  5825  02D6  00F0               	movwf	??i1_LIN_calcParity
  5826  02D7  1F72               	btfss	i1LIN_calcParity@PID,6
  5827  02D8  2ADB               	goto	u115_20
  5828  02D9  3001               	movlw	1
  5829  02DA  2ADC               	goto	u115_22
  5830  02DB                     u115_20:	
  5831  02DB  3000               	movlw	0
  5832  02DC                     u115_22:	
  5833  02DC  0670               	xorwf	??i1_LIN_calcParity,w
  5834  02DD  1903               	btfsc	3,2
  5835  02DE  2AE1               	goto	u116_20
  5836  02DF  1772               	bsf	i1LIN_calcParity@PID,6
  5837  02E0  2AE2               	goto	u117_24
  5838  02E1                     u116_20:	
  5839  02E1  1372               	bcf	i1LIN_calcParity@PID,6
  5840  02E2                     u117_24:	
  5841                           
  5842                           ;lin_master.c: 219: PID.P0 = PID.P0 ^ PID.ID4;
  5843  02E2  1E72               	btfss	i1LIN_calcParity@PID,4
  5844  02E3  2AE6               	goto	u118_20
  5845  02E4  3001               	movlw	1
  5846  02E5  2AE7               	goto	u118_22
  5847  02E6                     u118_20:	
  5848  02E6  3000               	movlw	0
  5849  02E7                     u118_22:	
  5850  02E7  00F0               	movwf	??i1_LIN_calcParity
  5851  02E8  1F72               	btfss	i1LIN_calcParity@PID,6
  5852  02E9  2AEC               	goto	u119_20
  5853  02EA  3001               	movlw	1
  5854  02EB  2AED               	goto	u119_22
  5855  02EC                     u119_20:	
  5856  02EC  3000               	movlw	0
  5857  02ED                     u119_22:	
  5858  02ED  0670               	xorwf	??i1_LIN_calcParity,w
  5859  02EE  1903               	btfsc	3,2
  5860  02EF  2AF2               	goto	u120_20
  5861  02F0  1772               	bsf	i1LIN_calcParity@PID,6
  5862  02F1  2AF3               	goto	u121_24
  5863  02F2                     u120_20:	
  5864  02F2  1372               	bcf	i1LIN_calcParity@PID,6
  5865  02F3                     u121_24:	
  5866                           
  5867                           ;lin_master.c: 220: PID.P1 = PID.ID1 ^ PID.ID3;
  5868  02F3  1DF2               	btfss	i1LIN_calcParity@PID,3
  5869  02F4  2AF7               	goto	u122_20
  5870  02F5  3001               	movlw	1
  5871  02F6  2AF8               	goto	u122_22
  5872  02F7                     u122_20:	
  5873  02F7  3000               	movlw	0
  5874  02F8                     u122_22:	
  5875  02F8  00F0               	movwf	??i1_LIN_calcParity
  5876  02F9  1CF2               	btfss	i1LIN_calcParity@PID,1
  5877  02FA  2AFD               	goto	u123_20
  5878  02FB  3001               	movlw	1
  5879  02FC  2AFE               	goto	u123_22
  5880  02FD                     u123_20:	
  5881  02FD  3000               	movlw	0
  5882  02FE                     u123_22:	
  5883  02FE  0670               	xorwf	??i1_LIN_calcParity,w
  5884  02FF  1903               	btfsc	3,2
  5885  0300  2B03               	goto	u124_20
  5886  0301  17F2               	bsf	i1LIN_calcParity@PID,7
  5887  0302  2B04               	goto	u125_24
  5888  0303                     u124_20:	
  5889  0303  13F2               	bcf	i1LIN_calcParity@PID,7
  5890  0304                     u125_24:	
  5891                           
  5892                           ;lin_master.c: 221: PID.P1 = PID.P1 ^ PID.ID4;
  5893  0304  1E72               	btfss	i1LIN_calcParity@PID,4
  5894  0305  2B08               	goto	u126_20
  5895  0306  3001               	movlw	1
  5896  0307  2B09               	goto	u126_22
  5897  0308                     u126_20:	
  5898  0308  3000               	movlw	0
  5899  0309                     u126_22:	
  5900  0309  00F0               	movwf	??i1_LIN_calcParity
  5901  030A  1FF2               	btfss	i1LIN_calcParity@PID,7
  5902  030B  2B0E               	goto	u127_20
  5903  030C  3001               	movlw	1
  5904  030D  2B0F               	goto	u127_22
  5905  030E                     u127_20:	
  5906  030E  3000               	movlw	0
  5907  030F                     u127_22:	
  5908  030F  0670               	xorwf	??i1_LIN_calcParity,w
  5909  0310  1903               	btfsc	3,2
  5910  0311  2B14               	goto	u128_20
  5911  0312  17F2               	bsf	i1LIN_calcParity@PID,7
  5912  0313  2B15               	goto	u129_24
  5913  0314                     u128_20:	
  5914  0314  13F2               	bcf	i1LIN_calcParity@PID,7
  5915  0315                     u129_24:	
  5916                           
  5917                           ;lin_master.c: 222: PID.P1 = PID.P1 ^ PID.ID5;
  5918  0315  1EF2               	btfss	i1LIN_calcParity@PID,5
  5919  0316  2B19               	goto	u130_20
  5920  0317  3001               	movlw	1
  5921  0318  2B1A               	goto	u130_22
  5922  0319                     u130_20:	
  5923  0319  3000               	movlw	0
  5924  031A                     u130_22:	
  5925  031A  00F0               	movwf	??i1_LIN_calcParity
  5926  031B  1FF2               	btfss	i1LIN_calcParity@PID,7
  5927  031C  2B1F               	goto	u131_20
  5928  031D  3001               	movlw	1
  5929  031E  2B20               	goto	u131_22
  5930  031F                     u131_20:	
  5931  031F  3000               	movlw	0
  5932  0320                     u131_22:	
  5933  0320  0670               	xorwf	??i1_LIN_calcParity,w
  5934  0321  1903               	btfsc	3,2
  5935  0322  2B25               	goto	u132_20
  5936  0323  17F2               	bsf	i1LIN_calcParity@PID,7
  5937  0324  2B26               	goto	i1l1532
  5938  0325                     u132_20:	
  5939  0325  13F2               	bcf	i1LIN_calcParity@PID,7
  5940  0326                     i1l1532:	
  5941                           
  5942                           ;lin_master.c: 223: PID.P1 = ~PID.P1;
  5943  0326  1003               	clrc
  5944  0327  1FF2               	btfss	i1LIN_calcParity@PID,7
  5945  0328  1403               	setc
  5946  0329  1C03               	btfss	3,0
  5947  032A  2B2D               	goto	u134_20
  5948  032B  17F2               	bsf	i1LIN_calcParity@PID,7
  5949  032C  2B2E               	goto	i1l1534
  5950  032D                     u134_20:	
  5951  032D  13F2               	bcf	i1LIN_calcParity@PID,7
  5952  032E                     i1l1534:	
  5953                           
  5954                           ;lin_master.c: 225: return PID.rawPID;
  5955  032E  0872               	movf	i1LIN_calcParity@PID,w
  5956  032F  0008               	return
  5957  0330                     __end_ofi1_LIN_calcParity:	
  5958                           
  5959                           	psect	text45
  5960  05B1                     __ptext45:	
  5961 ;; *************** function ___wmul *****************
  5962 ;; Defined at:
  5963 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  multiplier      2    0[COMMON] unsigned int 
  5966 ;;  multiplicand    2    2[COMMON] unsigned int 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  product         2    4[COMMON] unsigned int 
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  2    0[COMMON] unsigned int 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5978 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5981 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5982 ;;Total ram usage:        6 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; This function calls:
  5985 ;;		Nothing
  5986 ;; This function is called by:
  5987 ;;		_LIN_sendPeriodicTx
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991                           
  5992                           ;psect for function ___wmul
  5993  05B1                     ___wmul:	
  5994                           
  5995                           ;incstack = 0
  5996                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5997  05B1  01F4               	clrf	___wmul@product
  5998  05B2  01F5               	clrf	___wmul@product+1
  5999  05B3                     i1l1572:	
  6000  05B3  1C70               	btfss	___wmul@multiplier,0
  6001  05B4  2DB9               	goto	i1l620
  6002  05B5  0872               	movf	___wmul@multiplicand,w
  6003  05B6  07F4               	addwf	___wmul@product,f
  6004  05B7  0873               	movf	___wmul@multiplicand+1,w
  6005  05B8  3DF5               	addwfc	___wmul@product+1,f
  6006  05B9                     i1l620:	
  6007  05B9  3001               	movlw	1
  6008  05BA                     u140_25:	
  6009  05BA  35F2               	lslf	___wmul@multiplicand,f
  6010  05BB  0DF3               	rlf	___wmul@multiplicand+1,f
  6011  05BC  0B89               	decfsz	9,f
  6012  05BD  2DBA               	goto	u140_25
  6013  05BE  3001               	movlw	1
  6014  05BF                     u141_25:	
  6015  05BF  36F1               	lsrf	___wmul@multiplier+1,f
  6016  05C0  0CF0               	rrf	___wmul@multiplier,f
  6017  05C1  0B89               	decfsz	9,f
  6018  05C2  2DBF               	goto	u141_25
  6019  05C3  0870               	movf	___wmul@multiplier,w
  6020  05C4  0471               	iorwf	___wmul@multiplier+1,w
  6021  05C5  1D03               	btfss	3,2
  6022  05C6  2DB3               	goto	i1l1572
  6023  05C7  0875               	movf	___wmul@product+1,w
  6024  05C8  00F1               	movwf	?___wmul+1
  6025  05C9  0874               	movf	___wmul@product,w
  6026  05CA  00F0               	movwf	?___wmul
  6027  05CB  0008               	return
  6028  05CC                     __end_of___wmul:	
  6029                           
  6030                           	psect	text46
  6031  055D                     __ptext46:	
  6032 ;; *************** function _EUSART_Transmit_ISR *****************
  6033 ;; Defined at:
  6034 ;;		line 194 in file "mcc_generated_files/eusart.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;		None
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;		None
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  1    wreg      void 
  6041 ;; Registers used:
  6042 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6050 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6052 ;;Total ram usage:        1 bytes
  6053 ;; Hardware stack levels used:    1
  6054 ;; This function calls:
  6055 ;;		Nothing
  6056 ;; This function is called by:
  6057 ;;		_EUSART_Initialize
  6058 ;;		_INTERRUPT_InterruptManager
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           
  6063                           ;psect for function _EUSART_Transmit_ISR
  6064  055D                     _EUSART_Transmit_ISR:	
  6065                           
  6066                           ;eusart.c: 198: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  6067                           
  6068                           ;incstack = 0
  6069                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6070  055D  3008               	movlw	8
  6071  055E  0020               	movlb	0	; select bank0
  6072  055F  0266               	subwf	_eusartTxBufferRemaining,w	;volatile
  6073  0560  1803               	skipnc
  6074  0561  2D77               	goto	i1l216
  6075                           
  6076                           ;eusart.c: 199: {
  6077                           ;eusart.c: 200: TXREG = eusartTxBuffer[eusartTxTail++];
  6078  0562  0834               	movf	_eusartTxTail,w
  6079  0563  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  6080  0564  0086               	movwf	6
  6081  0565  0187               	clrf	7
  6082  0566  0801               	movf	1,w
  6083  0567  0023               	movlb	3	; select bank3
  6084  0568  009A               	movwf	26	;volatile
  6085  0569  3001               	movlw	1
  6086  056A  00F0               	movwf	??_EUSART_Transmit_ISR
  6087  056B  0870               	movf	??_EUSART_Transmit_ISR,w
  6088  056C  0020               	movlb	0	; select bank0
  6089  056D  07B4               	addwf	_eusartTxTail,f	;volatile
  6090                           
  6091                           ;eusart.c: 201: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  6092  056E  3008               	movlw	8
  6093  056F  0234               	subwf	_eusartTxTail,w	;volatile
  6094  0570  1803               	btfsc	3,0
  6095                           
  6096                           ;eusart.c: 202: {
  6097                           ;eusart.c: 203: eusartTxTail = 0;
  6098  0571  01B4               	clrf	_eusartTxTail	;volatile
  6099                           
  6100                           ;eusart.c: 204: }
  6101                           ;eusart.c: 205: eusartTxBufferRemaining++;
  6102  0572  3001               	movlw	1
  6103  0573  00F0               	movwf	??_EUSART_Transmit_ISR
  6104  0574  0870               	movf	??_EUSART_Transmit_ISR,w
  6105  0575  07E6               	addwf	_eusartTxBufferRemaining,f	;volatile
  6106                           
  6107                           ;eusart.c: 206: }
  6108  0576  0008               	return
  6109  0577                     i1l216:	
  6110                           
  6111                           ;eusart.c: 207: else
  6112                           ;eusart.c: 208: {
  6113                           ;eusart.c: 209: PIE1bits.TXIE = 0;
  6114  0577  0021               	movlb	1	; select bank1
  6115  0578  1211               	bcf	17,4	;volatile
  6116  0579  0008               	return
  6117  057A                     __end_of_EUSART_Transmit_ISR:	
  6118                           
  6119                           	psect	text47
  6120  03E4                     __ptext47:	
  6121 ;; *************** function _EUSART_Receive_ISR *****************
  6122 ;; Defined at:
  6123 ;;		line 213 in file "mcc_generated_files/eusart.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;		None
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;		None
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  1    wreg      void 
  6130 ;; Registers used:
  6131 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;Total ram usage:        0 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    2
  6144 ;; This function calls:
  6145 ;;		Absolute function
  6146 ;;		_EUSART_DefaultErrorHandler
  6147 ;;		_EUSART_DefaultFramingErrorHandler
  6148 ;;		_EUSART_DefaultOverrunErrorHandler
  6149 ;;		_EUSART_RxDataHandler
  6150 ;; This function is called by:
  6151 ;;		_EUSART_Initialize
  6152 ;;		_INTERRUPT_InterruptManager
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           
  6157                           ;psect for function _EUSART_Receive_ISR
  6158  03E4                     _EUSART_Receive_ISR:	
  6159                           
  6160                           ;eusart.c: 216: eusartRxStatusBuffer[eusartRxHead].status = 0;
  6161                           
  6162                           ;incstack = 0
  6163                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6164  03E4  0020               	movlb	0	; select bank0
  6165  03E5  0833               	movf	_eusartRxHead,w	;volatile
  6166  03E6  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6167  03E7  0086               	movwf	6
  6168  03E8  0187               	clrf	7
  6169  03E9  0181               	clrf	1
  6170                           
  6171                           ;eusart.c: 218: if(RCSTAbits.FERR){
  6172  03EA  0023               	movlb	3	; select bank3
  6173  03EB  1D1D               	btfss	29,2	;volatile
  6174  03EC  2BF8               	goto	i1l2770
  6175                           
  6176                           ;eusart.c: 219: eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  6177  03ED  0020               	movlb	0	; select bank0
  6178  03EE  0833               	movf	_eusartRxHead,w	;volatile
  6179  03EF  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6180  03F0  0086               	movwf	6
  6181  03F1  0187               	clrf	7
  6182  03F2  1481               	bsf	1,1
  6183                           
  6184                           ;eusart.c: 220: EUSART_FramingErrorHandler();
  6185  03F3  0860               	movf	_EUSART_FramingErrorHandler+1,w
  6186  03F4  008A               	movwf	10
  6187  03F5  085F               	movf	_EUSART_FramingErrorHandler,w
  6188  03F6  000A               	callw
  6189  03F7  3183               	pagesel	$
  6190  03F8                     i1l2770:	
  6191                           
  6192                           ;eusart.c: 221: }
  6193                           ;eusart.c: 223: if(RCSTAbits.OERR){
  6194  03F8  0023               	movlb	3	; select bank3
  6195  03F9  1C9D               	btfss	29,1	;volatile
  6196  03FA  2C07               	goto	i1l2776
  6197                           
  6198                           ;eusart.c: 224: eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  6199  03FB  0020               	movlb	0	; select bank0
  6200  03FC  0833               	movf	_eusartRxHead,w	;volatile
  6201  03FD  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6202  03FE  0086               	movwf	6
  6203  03FF  0187               	clrf	7
  6204  0400  1501               	bsf	1,2
  6205                           
  6206                           ;eusart.c: 225: EUSART_OverrunErrorHandler();
  6207  0401  0021               	movlb	1	; select bank1
  6208  0402  0854               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
  6209  0403  008A               	movwf	10
  6210  0404  0853               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  6211  0405  000A               	callw
  6212  0406  3183               	pagesel	$
  6213  0407                     i1l2776:	
  6214                           
  6215                           ;eusart.c: 226: }
  6216                           ;eusart.c: 228: if(eusartRxStatusBuffer[eusartRxHead].status){
  6217  0407  0020               	movlb	0	; select bank0
  6218  0408  0833               	movf	_eusartRxHead,w	;volatile
  6219  0409  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6220  040A  0086               	movwf	6
  6221  040B  0187               	clrf	7
  6222  040C  0801               	movf	1,w
  6223  040D  1903               	btfsc	3,2
  6224  040E  2C16               	goto	i1l2780
  6225                           
  6226                           ;eusart.c: 229: EUSART_ErrorHandler();
  6227  040F  0021               	movlb	1	; select bank1
  6228  0410  0852               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
  6229  0411  008A               	movwf	10
  6230  0412  0851               	movf	_EUSART_ErrorHandler^(0+128),w
  6231  0413  000A               	callw
  6232  0414  3183               	pagesel	$
  6233                           
  6234                           ;eusart.c: 230: } else {
  6235  0415  0008               	return
  6236  0416                     i1l2780:	
  6237                           
  6238                           ;eusart.c: 231: EUSART_RxDataHandler();
  6239  0416  3186  2616         	fcall	_EUSART_RxDataHandler
  6240  0418  0008               	return
  6241  0419                     __end_of_EUSART_Receive_ISR:	
  6242                           
  6243                           	psect	text48
  6244  06EE                     __ptext48:	
  6245 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  6246 ;; Defined at:
  6247 ;;		line 249 in file "mcc_generated_files/eusart.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;		None
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;		None
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  1    wreg      void 
  6254 ;; Registers used:
  6255 ;;		None
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6265 ;;Total ram usage:        0 bytes
  6266 ;; Hardware stack levels used:    1
  6267 ;; This function calls:
  6268 ;;		Nothing
  6269 ;; This function is called by:
  6270 ;;		_EUSART_Initialize
  6271 ;;		_EUSART_Receive_ISR
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           
  6276                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  6277  06EE                     _EUSART_DefaultOverrunErrorHandler:	
  6278                           
  6279                           ;eusart.c: 252: RCSTAbits.CREN = 0;
  6280                           
  6281                           ;incstack = 0
  6282                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  6283  06EE  0023               	movlb	3	; select bank3
  6284  06EF  121D               	bcf	29,4	;volatile
  6285                           
  6286                           ;eusart.c: 253: RCSTAbits.CREN = 1;
  6287  06F0  161D               	bsf	29,4	;volatile
  6288  06F1  0008               	return
  6289  06F2                     __end_of_EUSART_DefaultOverrunErrorHandler:	
  6290                           
  6291                           	psect	text49
  6292  0700                     __ptext49:	
  6293 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  6294 ;; Defined at:
  6295 ;;		line 247 in file "mcc_generated_files/eusart.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;		None
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;		None
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  1    wreg      void 
  6302 ;; Registers used:
  6303 ;;		None
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6313 ;;Total ram usage:        0 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_EUSART_Initialize
  6319 ;;		_EUSART_Receive_ISR
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           
  6324                           ;psect for function _EUSART_DefaultFramingErrorHandler
  6325  0700                     _EUSART_DefaultFramingErrorHandler:	
  6326                           
  6327                           ;incstack = 0
  6328                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  6329  0700  0008               	return
  6330  0701                     __end_of_EUSART_DefaultFramingErrorHandler:	
  6331                           
  6332                           	psect	text50
  6333  06FB                     __ptext50:	
  6334 ;; *************** function _EUSART_DefaultErrorHandler *****************
  6335 ;; Defined at:
  6336 ;;		line 257 in file "mcc_generated_files/eusart.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;		None
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;		None
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  1    wreg      void 
  6343 ;; Registers used:
  6344 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;Total ram usage:        0 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; Hardware stack levels required when called:    1
  6357 ;; This function calls:
  6358 ;;		_EUSART_RxDataHandler
  6359 ;; This function is called by:
  6360 ;;		_EUSART_Initialize
  6361 ;;		_EUSART_Receive_ISR
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           
  6366                           ;psect for function _EUSART_DefaultErrorHandler
  6367  06FB                     _EUSART_DefaultErrorHandler:	
  6368                           
  6369                           ;eusart.c: 258: EUSART_RxDataHandler();
  6370                           
  6371                           ;incstack = 0
  6372                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6373  06FB  3186  2616         	fcall	_EUSART_RxDataHandler
  6374  06FD  0008               	return
  6375  06FE                     __end_of_EUSART_DefaultErrorHandler:	
  6376                           
  6377                           	psect	text51
  6378  0616                     __ptext51:	
  6379 ;; *************** function _EUSART_RxDataHandler *****************
  6380 ;; Defined at:
  6381 ;;		line 237 in file "mcc_generated_files/eusart.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;		None
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;		None
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  1    wreg      void 
  6388 ;; Registers used:
  6389 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6397 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6398 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6399 ;;Total ram usage:        1 bytes
  6400 ;; Hardware stack levels used:    1
  6401 ;; This function calls:
  6402 ;;		Nothing
  6403 ;; This function is called by:
  6404 ;;		_EUSART_Receive_ISR
  6405 ;;		_EUSART_DefaultErrorHandler
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           
  6410                           ;psect for function _EUSART_RxDataHandler
  6411  0616                     _EUSART_RxDataHandler:	
  6412                           
  6413                           ;eusart.c: 239: eusartRxBuffer[eusartRxHead++] = RCREG;
  6414                           
  6415                           ;incstack = 0
  6416                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  6417  0616  0023               	movlb	3	; select bank3
  6418  0617  0819               	movf	25,w	;volatile
  6419  0618  00F0               	movwf	??_EUSART_RxDataHandler
  6420  0619  0020               	movlb	0	; select bank0
  6421  061A  0833               	movf	_eusartRxHead,w
  6422  061B  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  6423  061C  0086               	movwf	6
  6424  061D  0187               	clrf	7
  6425  061E  0870               	movf	??_EUSART_RxDataHandler,w
  6426  061F  0081               	movwf	1
  6427  0620  3001               	movlw	1
  6428  0621  00F0               	movwf	??_EUSART_RxDataHandler
  6429  0622  0870               	movf	??_EUSART_RxDataHandler,w
  6430  0623  07B3               	addwf	_eusartRxHead,f	;volatile
  6431                           
  6432                           ;eusart.c: 240: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  6433  0624  3008               	movlw	8
  6434  0625  0233               	subwf	_eusartRxHead,w	;volatile
  6435  0626  1803               	btfsc	3,0
  6436                           
  6437                           ;eusart.c: 241: {
  6438                           ;eusart.c: 242: eusartRxHead = 0;
  6439  0627  01B3               	clrf	_eusartRxHead	;volatile
  6440                           
  6441                           ;eusart.c: 243: }
  6442                           ;eusart.c: 244: eusartRxCount++;
  6443  0628  3001               	movlw	1
  6444  0629  00F0               	movwf	??_EUSART_RxDataHandler
  6445  062A  0870               	movf	??_EUSART_RxDataHandler,w
  6446  062B  07B1               	addwf	_eusartRxCount,f	;volatile
  6447  062C  0008               	return
  6448  062D                     __end_of_EUSART_RxDataHandler:	
  6449  007E                     btemp	set	126	;btemp
  6450  007E                     int$flags	set	126
  6451  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    24
    Data        1
    BSS         72
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      72
    BANK1            80     11      54
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 12
		 -> LIN_rxPacket.data(BANK1[8]), LIN_rxPacket(BANK1[12]), main@data_to_send(BANK1[1]), SIGNAL_Data(BANK0[1]), 
		 -> LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 11
		 -> LIN_packet(BANK0[11]), processLIN@tempRxData(BANK1[8]), 

    memset@p1	PTR void  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_packet(BANK0[11]), 

    memset@p	PTR unsigned char  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_packet(BANK0[11]), 

    LIN_sendPeriodicTx@periodicTx.data	PTR unsigned char  size(1) Largest target is 8
		 -> SIGNAL_Data(BANK0[1]), LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 

    LIN_sendPeriodicTx@periodicTx	PTR const struct . size(2) Largest target is 8192
		 -> ROM(CODE[8192]), scheduleTable(CODE[24]), 

    LIN_getChecksum@data	PTR unsigned char  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_packet(BANK0[11]), 

    LIN_getPacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> processLIN@tempRxData(BANK1[8]), 

    sp__memset	PTR void  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_packet(BANK0[11]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    LIN_queuePacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> main@data_to_send(BANK1[1]), SIGNAL_Data(BANK0[1]), LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), 
		 -> UNLOCK_Data(BANK0[1]), 

    LIN_queuePacket@tempSchedule.data	PTR unsigned char  size(1) Largest target is 8
		 -> SIGNAL_Data(BANK0[1]), LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 

    LIN_queuePacket@tempSchedule	PTR const struct . size(2) Largest target is 8192
		 -> ROM(CODE[8192]), scheduleTable(CODE[24]), 

    LIN_init@processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), 

    LIN_processData	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), processLIN(), 

    schedule.data	PTR unsigned char  size(1) Largest target is 8
		 -> SIGNAL_Data(BANK0[1]), LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 

    LIN_init@table	const PTR const struct . size(2) Largest target is 28
		 -> scheduleTable(CODE[24]), 

    schedule	PTR const struct . size(2) Largest target is 8192
		 -> ROM(CODE[8192]), scheduleTable(CODE[24]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), Absolute function(), TMR2_DefaultInterruptHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    S24$data	PTR unsigned char  size(1) Largest target is 8
		 -> SIGNAL_Data(BANK0[1]), LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 

    scheduleTable.data	PTR unsigned char  size(1) Largest target is 8
		 -> SIGNAL_Data(BANK0[1]), LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _LIN_timerHandler->_LIN_sendPeriodicTx
    _LIN_sendPeriodicTx->i1_LIN_queuePacket
    i1_LIN_queuePacket->i1_LIN_getChecksum
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_LIN_queuePacket
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _LIN_Master_Initialize->_LIN_init
    _LIN_setTimerHandler->_TMR2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _LIN_queuePacket->_LIN_getChecksum
    _LIN_handler->_processLIN
    _processLIN->_LIN_getPacket
    _LIN_getPacket->_memset
    _LIN_startTimer->_TMR2_WriteTimer
    _LIN_sendPacket->_EUSART_Write
    _LIN_receivePacket->_LIN_getChecksum

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR2_ISR->_LIN_timerHandler
    _LIN_timerHandler->_LIN_sendPeriodicTx
    _LIN_sendPeriodicTx->i1_LIN_queuePacket

Critical Paths under _main in BANK1

    _main->_processLIN
    _LIN_handler->_processLIN

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6099
                                              9 BANK1      2     2      0
              _LIN_Master_Initialize
                        _LIN_handler
                    _LIN_queuePacket
                  _SYSTEM_Initialize
                         _processLIN
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1157
                  _EUSART_Initialize
              _LIN_Master_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     185
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_Master_Initialize                                0     0      0     432
                           _LIN_init
 ---------------------------------------------------------------------------------
 (3) _LIN_init                                             6     2      4     432
                                             10 BANK0      6     2      4
                _LIN_setTimerHandler
                    _LIN_startPeriod
                      _LIN_stopTimer
 ---------------------------------------------------------------------------------
 (4) _LIN_stopTimer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LIN_startPeriod                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LIN_setTimerHandler                                  0     0      0     185
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     185
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     540
                                             10 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     108
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     108
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     108
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     108
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     108
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LIN_queuePacket                                      9     8      1    1384
                                             14 BANK0      9     8      1
                     _LIN_calcParity
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (2) _LIN_calcParity                                       3     3      0     489
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _LIN_handler                                          1     1      0    2180
                                             19 BANK0      1     1      0
                   Absolute function *
                 _EUSART_is_rx_ready
                      _LIN_disableRx
                       _LIN_enableRx
                  _LIN_receivePacket
                     _LIN_sendPacket
                     _LIN_startTimer
                             _memset
                         _processLIN *
 ---------------------------------------------------------------------------------
 (1) _processLIN                                          10    10      0     861
                                             18 BANK0      1     1      0
                                              0 BANK1      9     9      0
                      _LIN_getPacket
 ---------------------------------------------------------------------------------
 (2) _LIN_getPacket                                        3     3      0     796
                                             15 BANK0      3     3      0
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     698
                                              8 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LIN_startTimer                                       2     2      0      62
                                              9 BANK0      2     2      0
                    _TMR2_StartTimer
                    _TMR2_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_WriteTimer                                      1     1      0      31
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_sendPacket                                       2     2      0     130
                                             10 BANK0      2     2      0
                       _EUSART_Write
                      _LIN_sendBreak
 ---------------------------------------------------------------------------------
 (3) _LIN_sendBreak                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LIN_receivePacket                                    2     2      0     429
                                             14 BANK0      2     2      0
                        _EUSART_Read
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (2) _LIN_getChecksum                                      6     5      1     392
                                              8 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      37
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LIN_enableRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_disableRx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0    1279
                                              7 BANK0      1     1      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR2_ISR                                             0     0      0    1279
                   Absolute function *
                   _LIN_timerHandler *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _LIN_timerHandler                                     1     1      0    1279
                                              6 BANK0      1     1      0
                 _LIN_sendPeriodicTx
                    i1_LIN_stopTimer
 ---------------------------------------------------------------------------------
 (9) i1_LIN_stopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _LIN_sendPeriodicTx                                   5     5      0    1279
                                             11 COMMON     3     3      0
                                              4 BANK0      2     2      0
                             ___wmul
                  i1_LIN_queuePacket
 ---------------------------------------------------------------------------------
 (10) i1_LIN_queuePacket                                   9     8      1     819
                                              6 COMMON     5     4      1
                                              0 BANK0      4     4      0
                   i1_LIN_calcParity
                  i1_LIN_getChecksum
 ---------------------------------------------------------------------------------
 (11) i1_LIN_getChecksum                                   6     5      1     187
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (11) i1_LIN_calcParity                                    3     3      0     338
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (10) ___wmul                                              6     2      4     348
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LIN_Master_Initialize
     _LIN_init
       _LIN_setTimerHandler
         _TMR2_SetInterruptHandler
       _LIN_startPeriod
       _LIN_stopTimer
   _LIN_handler
     Absolute function(Fake) *
     _EUSART_is_rx_ready *
     _LIN_disableRx *
     _LIN_enableRx *
     _LIN_receivePacket *
       _EUSART_Read
       _LIN_getChecksum
     _LIN_sendPacket *
       _EUSART_Write
       _LIN_sendBreak
     _LIN_startTimer *
       _TMR2_StartTimer
       _TMR2_WriteTimer
     _memset *
     _processLIN *
       _LIN_getPacket
         _memset
   _LIN_queuePacket
     _LIN_calcParity
     _LIN_getChecksum
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _LIN_Master_Initialize
       _LIN_init
         _LIN_setTimerHandler
           _TMR2_SetInterruptHandler
         _LIN_startPeriod
         _LIN_stopTimer
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _processLIN
     _LIN_getPacket
       _memset

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR2_ISR *
     Absolute function(Fake) *
     _LIN_timerHandler *
       _LIN_sendPeriodicTx
         ___wmul
         i1_LIN_queuePacket
           i1_LIN_calcParity
           i1_LIN_getChecksum
       i1_LIN_stopTimer
     _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      48       5       90.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      B      36       7       67.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      8C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      8C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Sep 12 21:07:21 2018

                ?_EUSART_SetRxInterruptHandler 004C                          __end_of_LIN_getPacket 04F3  
                        ??_LIN_setTimerHandler 004E               __end_of_TMR2_SetInterruptHandler 06BD  
                        __end_of_LIN_disableRx 06DE                                 _scheduleLength 0065  
                                  __CFG_CP$OFF 0000                            ___wmul@multiplicand 0072  
                              ?_LIN_calcParity 0070                                            l210 0527  
                                          l444 00C1                                            l357 0615  
                                          l457 034B                                            l468 039F  
                                          l495 049D                                            _PR2 001B  
                                 __CFG_CPD$OFF 0000                         ??_EUSART_RxDataHandler 0070  
               ?_EUSART_SetFramingErrorHandler 004C                                _TMR2_Initialize 0655  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                          __end_of_scheduleTable 05FE  
                                 ?_EUSART_Read 0070                                   __CFG_LVP$OFF 0000  
                                         l2130 0498                                           l2114 04E5  
                                         l2132 047B                                           l2220 0241  
                                         l2062 04F5                                           l2310 00D5  
                                         l2048 059C                                           l2312 0100  
                                         l2242 045F                                           l2218 0237  
                                         l2084 051C                                           l2244 0472  
                                         l2308 00C7                                           l2270 0447  
                                         l2262 0431                                           l2098 053B  
                                         l2294 0050                                           l2296 0065  
                                         l2740 0364                                           l2804 0585  
                                         l2718 0331                                           l2760 0390  
                                         l2754 0387                                           l2746 0373  
                                         l2738 0361                                           u2300 01D6  
                                         _LATA 010C                                           _LATC 010E  
                                         u2400 0202                                           u2320 01DC  
                                         u2410 0208                                           u2402 0203  
                                         u2330 01E2                                           u2322 01DD  
                                         u2314 01D8                                           u2500 0235  
                                         u2420 020F                                           u2412 0209  
                                         u2340 01E9                                           u2332 01E3  
                                         u2520 023F                                           u2440 0215  
                                         u2360 01EF                                           u2280 01C9  
                                         u2450 021B                                           u2442 0216  
                                         u2434 0211                                           u2370 01F5  
                                         u2362 01F0                                           u2354 01EB  
                                         u2290 01CF                                           u2282 01CA  
                                         u2460 0222                                           u2452 021C  
                                         u2380 01FC                                           u2372 01F6  
                                         u2292 01D0                                           u2480 0228  
                                         u2490 022E                                           u2482 0229  
                                         u2474 0224                                           u2394 01FE  
                                         u2492 022F                                           i1l30 0023  
                                         i1l35 002B                                           i1l28 0017  
                                         _TMR2 001A                                           _WPUA 020C  
                                         _WPUC 020E                                 _LIN_sendPacket 0449  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                        __end_of_LIN_sendBreak 06F8                                           _main 057A  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
                                         start 0030                                  processLIN@cmd 00CC  
                                __CFG_MCLRE$ON 0000                       LIN_receivePacket@rxIndex 0029  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 06B1                                          ?_main 0070  
                                __CFG_WDTE$OFF 0000                                          _T2CON 001C  
                                        i1l216 0577                                          i1l620 05B9  
                                        i1l444 017C                                          i1l495 04C7  
                                        u225m0 04E1                                          _RCREG 0199  
                                        u263m0 00B6                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISC 008E  
                                        _TXREG 019A                               __end_of_LIN_init 05E6  
                        __end_of_LIN_stopTimer 06E6                                          _TXSTA 019E  
                             __end_of_TMR2_ISR 0690                                 _WDT_Initialize 06DE  
                       __end_of_LIN_sendPacket 0476                  i1LIN_queuePacket@tempSchedule 0046  
                                        pclath 000A                                 _LIN_startTimer 0667  
                                        status 0003                                          wtemp0 007E  
                              _TMR2_StartTimer 06F2                         ?_LIN_Master_Initialize 0070  
                             ?_LIN_getChecksum 004C                    LIN_queuePacket@tempSchedule 0059  
                              __initialization 0032                      __size_of_LIN_timerHandler 001F  
                                 ?_LIN_handler 0070                                   __end_of_main 0596  
                               ??_EUSART_Write 004C                        __end_of_TMR2_Initialize 0667  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 004E  
                     _TMR2_SetInterruptHandler 06B7                                         ??_main 00CD  
                             main@data_to_send 00CE                                _TMR2_WriteTimer 06CF  
                               __CFG_PLLEN$OFF 0000                         __end_of_WDT_Initialize 06E2  
                           i1LIN_queuePacket@i 0045      __end_of_EUSART_DefaultFramingErrorHandler 0701  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 0700  
                   _EUSART_OverrunErrorHandler 00D3                         __end_of_LIN_startTimer 0677  
                              ?_LIN_sendPacket 0070                                         _ANSELA 018C  
                                       _ANSELC 018E                     __end_of_EUSART_is_rx_ready 06FB  
                                       _BORCON 0116                                         u110_20 02C4  
                                       u110_22 02C5                                         u111_20 02CA  
                                       u111_22 02CB                                         u120_20 02F2  
                                       u112_20 02D0                                         i1l1610 0182  
                                       i1l1532 0326                                         i1l1612 0190  
                                       i1l1534 032E                                         i1l1550 04A5  
                                       i1l1614 01BB                                         i1l1572 05B3  
                                       u121_24 02F3                                         u113_24 02D1  
                                       i1l1548 04C2                                         i1l1724 027F  
                                       u130_20 0319                                         u122_20 02F7  
                                       u114_20 02D5                                         u130_22 031A  
                                       u122_22 02F8                                         u114_22 02D6  
                                       i1l1596 010B                                         i1l1598 0120  
                                       u131_20 031F                                         u123_20 02FD  
                                       u115_20 02DB                                         i1l1880 054D  
                                       i1l2770 03F8                                         u131_22 0320  
                                       u123_22 02FE                                         u115_22 02DC  
                                       i1l2780 0416                                         i1l2776 0407  
                                       u132_20 0325                                         u124_20 0303  
                                       u116_20 02E1                                         u140_25 05BA  
                                       u125_24 0304                                         u117_24 02E2  
                                       u141_25 05BF                                         u134_20 032D  
                                       u126_20 0308                                         u118_20 02E6  
                                       u126_22 0309                                         u118_22 02E7  
                                       u127_20 030E                                         u119_20 02EC  
                                       u127_22 030F                                         u119_22 02ED  
                                       u128_20 0314                                         u129_24 0315  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                              _LIN_processData 00CF                               i1_LIN_calcParity 02BB  
                               __CFG_PWRTE$OFF 0000                    __size_of_LIN_sendPeriodicTx 0078  
                                       ___wmul 05B1                                 __CFG_STVREN$ON 0000  
                              _LIN_queuePacket 0049                        i1LIN_getChecksum@length 0072  
                          _EUSART_Transmit_ISR 055D                                         _memset 0596  
                           _LIN_enablePeriodTx 00D5                                _LIN_startPeriod 06E6  
                              ?_WDT_Initialize 0070                        __end_of_TMR2_StartTimer 06F5  
     TMR2_SetInterruptHandler@InterruptHandler 004C                                ?_LIN_startTimer 0070  
                         ?_EUSART_Transmit_ISR 0070                           __size_of_EUSART_Read 0027  
                            _SYSTEM_Initialize 0643                        __end_of__initialization 0045  
                           ?_SYSTEM_Initialize 0070           __end_of_EUSART_SetTxInterruptHandler 06C3  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 06BD  
                                    ?_LIN_init 004E                                 __pcstackCOMMON 0070  
                                ?_LIN_enableRx 0070                               ??_LIN_calcParity 004C  
                              LIN_sendPacket@i 004F                                   __pidataBANK0 06FE  
                          ??_SYSTEM_Initialize 0054                              _LIN_receivePacket 0419  
                                LIN_init@table 004E                                      ?_TMR2_ISR 0070  
                      __end_of_TMR2_WriteTimer 06D4                               ?_TMR2_Initialize 0070  
                           ?_LIN_receivePacket 0070                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0020                            ??_LIN_receivePacket 0052  
              ??_EUSART_SetOverrunErrorHandler 004E                      __end_of_SYSTEM_Initialize 0655  
                        ??_EUSART_Transmit_ISR 0070                                     __pbssBANK0 0020  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 053E  
                     __size_ofi1_LIN_stopTimer 0004                    __end_of_LIN_setTimerHandler 06AA  
                  __size_of_EUSART_Receive_ISR 0035                        __end_of_LIN_queuePacket 0104  
                         LIN_handler@LIN_state 002A                      __end_of_LIN_receivePacket 0449  
                               ??_LIN_enableRx 004C                                     __pmaintext 057A  
                             _LIN_timerHandler 053E                                     ??_LIN_init 0052  
                          LIN_getChecksum@data 004C                  ?_EUSART_SetTxInterruptHandler 004C  
             _EUSART_TxDefaultInterruptHandler 0063                                        ?___wmul 0070  
                                   ??_TMR2_ISR 007E                                     __pintentry 0004  
                         __size_of_LIN_handler 0070                        __end_of_LIN_startPeriod 06EA  
                                      _BAUDCON 019F                                        ?_memset 004C  
                                      _APFCON0 011D                                        _APFCON1 011E  
                 ??_EUSART_DefaultErrorHandler 0071                          LIN_getChecksum@length 004E  
                             _LIN_timerRunning 002D                                  _eusartRxCount 0031  
                                      u147_2m0 0171                  __size_of_EUSART_RxDataHandler 0017  
                        i1LIN_queuePacket@data 0076                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 004E                               ?_TMR2_StartTimer 0070  
                       __size_of_LIN_getPacket 0028                         __size_of_LIN_disableRx 0005  
                      ??_LIN_Master_Initialize 0054                        LIN_getChecksum@checksum 0050  
          __size_of_EUSART_DefaultErrorHandler 0003                     ??_TMR2_SetInterruptHandler 004E  
                              __size_of___wmul 001B                      i1LIN_getChecksum@checksum 0074  
                             ?_TMR2_WriteTimer 0070                                __size_of_memset 001B  
                                      __ptext1 0643                                        __ptext2 06DE  
                                      __ptext3 0655                                        __ptext4 062D  
                                      __ptext5 06AA                                        __ptext6 0677  
                                      __ptext7 05CC                                        __ptext8 06E2  
                                      __ptext9 06E6                       __end_ofi1_LIN_calcParity 0330  
                       __size_of_LIN_sendBreak 0003                          _OSCILLATOR_Initialize 06AA  
                             ??_LIN_sendPacket 004E                                      _T2CONbits 001C  
                     ??_PIN_MANAGER_Initialize 004C                     __size_of_SYSTEM_Initialize 0012  
                                      clrloop0 06B2                           end_of_initialization 0045  
        __end_of_EUSART_SetOverrunErrorHandler 0699         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 0690                                        memset@c 004C  
                                      memset@n 004E                                        memset@p 0051  
                                    _LFRX_Data 00BC                              _EUSART_Initialize 03A0  
                             ?_LIN_queuePacket 0052                     __size_of_LIN_receivePacket 0030  
                           ?_EUSART_Initialize 0070                         __size_of_LIN_stopTimer 0004  
                            i1_LIN_getChecksum 04A1                                      _RCSTAbits 019D  
                            ??i1_LIN_stopTimer 0070                             _EUSART_is_rx_ready 06F8  
                                _LIN_getPacket 04CB                             ?i1_LIN_getChecksum 0070  
                                _LIN_disableRx 06D9                               ?_LIN_startPeriod 0070  
                     __size_of_LIN_getChecksum 002B                            ??_EUSART_Initialize 004E  
                             ??_WDT_Initialize 004C                 ??_EUSART_SetTxInterruptHandler 004E  
                            LIN_getPacket@data 0054                            ?_EUSART_is_rx_ready 0070  
                                   _processLIN 05FE                            ??i1_LIN_getChecksum 0071  
                          LIN_init@tableLength 0053                               ??_LIN_startTimer 004D  
                             __CFG_FOSC$INTOSC 0000                          __size_of_EUSART_Write 0024  
                                    _RSSI_Data 0042                           __end_of_LIN_enableRx 06D9  
                                _scheduleTable 05E6                __size_of_EUSART_SetErrorHandler 0009  
                 LIN_sendPeriodicTx@periodicTx 0048                        TMR2_WriteTimer@timerVal 004C  
                    __end_of_EUSART_Initialize 03E4                           ??_EUSART_is_rx_ready 004C  
                   __end_of_LIN_sendPeriodicTx 02BB                                  _LIN_sendBreak 06F5  
                                    _TXSTAbits 019E                      __end_ofi1_LIN_getChecksum 04CB  
                               ?_LIN_getPacket 0070                                 ?_LIN_disableRx 0070  
         __end_of_TMR2_DefaultInterruptHandler 0700          __size_of_TMR2_DefaultInterruptHandler 0001  
                 _TMR2_DefaultInterruptHandler 06FF                              __size_of_LIN_init 001A  
           __end_of_EUSART_DefaultErrorHandler 06FE                     _EUSART_DefaultErrorHandler 06FB  
                               __end_of___wmul 05CC                                   _EUSART_Write 051A  
                            __size_of_TMR2_ISR 000C                         ?_OSCILLATOR_Initialize 0070  
              LIN_sendPeriodicTx@scheduleIndex 0028                                 __end_of_memset 05B1  
                          start_initialization 0032                                  _LIN_stopTimer 06E2  
              __size_of_PIN_MANAGER_Initialize 0016                       __end_of_LIN_timerHandler 055D  
                                ??_EUSART_Read 004C   EUSART_SetRxInterruptHandler@interruptHandler 004C  
 EUSART_SetTxInterruptHandler@interruptHandler 004C                          LIN_startTimer@timeout 004E  
                               ?_LIN_sendBreak 0070                              LIN_calcParity@CMD 004D  
               ?_EUSART_SetOverrunErrorHandler 004C                              LIN_calcParity@PID 004E  
                   _EUSART_FramingErrorHandler 005F                                       ??___wmul 0074  
                       _EUSART_SetErrorHandler 0699                                    __pdataBANK0 0067  
                                     ??_memset 0050                           processLIN@tempRxData 00C4  
                ?_TMR2_DefaultInterruptHandler 0070                                    ?_processLIN 0070  
                          LIN_init@processData 0050                    __end_of_EUSART_Transmit_ISR 057A  
                               ?_LIN_stopTimer 0070                                      ___latbits 0002  
                                __pcstackBANK0 0044                                  __pcstackBANK1 00C4  
                            ??_LIN_getChecksum 004D                       __size_of_TMR2_Initialize 0012  
                   __end_of_EUSART_Receive_ISR 0419                     __size_of_EUSART_Initialize 0044  
                            _LIN_timerCallBack 002C               _EUSART_RxDefaultInterruptHandler 0061  
               __size_of_LIN_Master_Initialize 000D                            __end_of_EUSART_Read 051A  
                __end_of_LIN_Master_Initialize 0684                                      __pnvBANK0 005B  
                                    __pnvBANK1 00CF                     __size_ofi1_LIN_getChecksum 002A  
                 __end_of_EUSART_RxDataHandler 062D                                ??_LIN_getPacket 0053  
                       _PIN_MANAGER_Initialize 062D                                  ??_LIN_handler 0057  
                             LIN_getChecksum@i 004F                                ??_LIN_disableRx 004C  
                         EUSART_Read@readValue 004D                   __size_of_LIN_setTimerHandler 0008  
                                 _eusartRxHead 0033                                   _eusartTxHead 0035  
                                 _eusartRxTail 0032                                   _eusartTxTail 0034  
                 ??_INTERRUPT_InterruptManager 004B                           i1LIN_queuePacket@cmd 0044  
                        __size_of_LIN_enableRx 0005                        _eusartTxBufferRemaining 0066  
                            ?i1_LIN_calcParity 0070                        __size_of_LIN_calcParity 0084  
                           ??i1_LIN_calcParity 0070                                ??_LIN_sendBreak 004C  
                              i1_LIN_stopTimer 06EA                                 _eusartRxBuffer 00A0  
                               _eusartTxBuffer 00A8                                 ___wmul@product 0074  
       EUSART_SetErrorHandler@interruptHandler 004C                                      clear_ram0 06B1  
                          __size_of_processLIN 0018                                       _PIE1bits 0091  
                            _eusartRxLastError 0030                       __size_of_TMR2_StartTimer 0003  
          __size_of_INTERRUPT_InterruptManager 002C                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 004E                                       _LIN_init 05CC  
                                 _LIN_enableRx 06D4      __end_of_EUSART_DefaultOverrunErrorHandler 06F2  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 06EE  
                                     _TMR2_ISR 0684                               LIN_getPacket@cmd 0055  
                          __end_of_LIN_handler 03A0                              ___wmul@multiplier 0070  
                              ??_LIN_stopTimer 004C                 ??_TMR2_DefaultInterruptHandler 0070  
            __size_of_TMR2_SetInterruptHandler 0006                       __size_of_TMR2_WriteTimer 0005  
                    ?_TMR2_SetInterruptHandler 004C                                   _LIN_rxPacket 00B0  
                                  _EUSART_Read 04F3                             _LIN_periodCallBack 002B  
                            ??_TMR2_Initialize 004E                              i1_LIN_queuePacket 0104  
                        i1LIN_getChecksum@data 0070                             ?i1_LIN_queuePacket 0076  
                      ??_OSCILLATOR_Initialize 004C                            _EUSART_ErrorHandler 00D1  
                     __size_of_LIN_queuePacket 00BB                    ?_EUSART_DefaultErrorHandler 0070  
                           _LIN_sendPeriodicTx 0243                            ??i1_LIN_queuePacket 0077  
                      __end_ofi1_LIN_stopTimer 06EE                            ?_LIN_sendPeriodicTx 0070  
                     __size_of_LIN_startPeriod 0004                           _EUSART_RxDataHandler 0616  
                                     __ptext10 06A2                                       __ptext11 06B7  
                                     __ptext20 0330                                       __ptext12 03A0  
                                     __ptext21 05FE                                       __ptext13 06BD  
                                     __ptext30 0419                                       __ptext22 04CB  
                                     __ptext14 06C3                                       __ptext31 0476  
                                     __ptext23 0596                                       __ptext15 0690  
                                     __ptext40 06EA                                       __ptext32 04F3  
                                     __ptext24 0667                                       __ptext16 06C9  
                                     __ptext41 0243                                       __ptext33 06D4  
                                     __ptext25 06CF                                       __ptext17 0699  
                                     __ptext50 06FB                                       __ptext42 0104  
                                     __ptext34 06D9                                       __ptext26 06F2  
                                     __ptext18 0049                                       __ptext51 0616  
                                     __ptext43 04A1                                       __ptext35 06F8  
                                     __ptext27 0449                                       __ptext19 01BF  
                                     __ptext44 02BB                                       __ptext28 06F5  
                                     __ptext45 05B1                                       __ptext37 0684  
                                     __ptext29 051A                                       __ptext46 055D  
                                     __ptext38 053E                                       __ptext47 03E4  
                                     __ptext39 06FF                                       __ptext48 06EE  
                                     __ptext49 0700                              ?_LIN_timerHandler 0070  
                           ??_LIN_timerHandler 004A                             i1LIN_getChecksum@i 0073  
                      __size_of_LIN_sendPacket 002D                    __size_of_EUSART_is_rx_ready 0003  
                                __size_of_main 001C                      __end_ofi1_LIN_queuePacket 01BF  
                                     _schedule 005B                                    _SIGNAL_Data 0041  
                      ?_EUSART_SetErrorHandler 004C                           ??_LIN_sendPeriodicTx 007B  
EUSART_SetOverrunErrorHandler@interruptHandler 004C                                    _LIN_handler 0330  
                                     int$flags 007E                                _LIN_getChecksum 0476  
                            ??_TMR2_StartTimer 004C             __end_of_INTERRUPT_InterruptManager 0030  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 06CF  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 06C9  
                                 ??_processLIN 0056                                    _LIN_txReady 002F  
                                  _LIN_timeout 0067                                 _LIN_calcParity 01BF  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                          LIN_queuePacket@data 0052                                       memset@p1 0052  
                      __size_of_WDT_Initialize 0004                            _LIN_setTimerHandler 06A2  
                                     intlevel1 0000                              ??_TMR2_WriteTimer 004C  
                      __size_of_LIN_startTimer 0010                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 06A2                              __CFG_CLKOUTEN$OFF 0000  
                           __end_of_processLIN 0616           __end_of_EUSART_SetRxInterruptHandler 06C9  
        __size_of_EUSART_SetRxInterruptHandler 0006                   _EUSART_SetRxInterruptHandler 06C3  
                                   _LIN_packet 0036                             _EUSART_Receive_ISR 03E4  
                         ?_LIN_setTimerHandler 0070                                     _LIN_period 002E  
EUSART_SetFramingErrorHandler@interruptHandler 004C                         __end_of_LIN_calcParity 0243  
                                __pstringtext1 05E6                             LIN_queuePacket@cmd 0057  
                          ?_EUSART_Receive_ISR 0070                                    _UNLOCK_Data 0043  
                          i1LIN_calcParity@CMD 0071                              ??_LIN_queuePacket 0053  
                          i1LIN_calcParity@PID 0072                               ?i1_LIN_stopTimer 0070  
                           EUSART_Write@txData 004D                   __size_of_EUSART_Transmit_ISR 001D  
               __end_of_PIN_MANAGER_Initialize 0643                              ??_LIN_startPeriod 004C  
                             LIN_queuePacket@i 0058                           ??_EUSART_Receive_ISR 0071  
                    __size_ofi1_LIN_calcParity 0075                     __size_ofi1_LIN_queuePacket 00BB  
                        _TMR2_InterruptHandler 005D                        __end_of_LIN_getChecksum 04A1  
                        _LIN_Master_Initialize 0677  
