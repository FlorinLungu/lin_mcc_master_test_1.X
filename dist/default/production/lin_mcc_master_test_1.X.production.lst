

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Sep 12 21:56:25 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	dabs	1,0x7E,2
    69  0000                     
    70                           ; Version 1.41
    71                           ; Generated 25/01/2017 GMT
    72                           ; 
    73                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F1825 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000E                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  0019                     	;# 
   127  001A                     	;# 
   128  001B                     	;# 
   129  001C                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  008C                     	;# 
   133  008E                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  010C                     	;# 
   149  010E                     	;# 
   150  0111                     	;# 
   151  0112                     	;# 
   152  0113                     	;# 
   153  0114                     	;# 
   154  0115                     	;# 
   155  0116                     	;# 
   156  0117                     	;# 
   157  0118                     	;# 
   158  0119                     	;# 
   159  011A                     	;# 
   160  011B                     	;# 
   161  011D                     	;# 
   162  011E                     	;# 
   163  018C                     	;# 
   164  018E                     	;# 
   165  0191                     	;# 
   166  0191                     	;# 
   167  0192                     	;# 
   168  0193                     	;# 
   169  0193                     	;# 
   170  0193                     	;# 
   171  0194                     	;# 
   172  0195                     	;# 
   173  0196                     	;# 
   174  0199                     	;# 
   175  019A                     	;# 
   176  019B                     	;# 
   177  019B                     	;# 
   178  019C                     	;# 
   179  019D                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  020C                     	;# 
   183  020E                     	;# 
   184  0211                     	;# 
   185  0211                     	;# 
   186  0212                     	;# 
   187  0212                     	;# 
   188  0213                     	;# 
   189  0213                     	;# 
   190  0214                     	;# 
   191  0214                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0216                     	;# 
   196  0216                     	;# 
   197  0217                     	;# 
   198  0217                     	;# 
   199  0291                     	;# 
   200  0291                     	;# 
   201  0292                     	;# 
   202  0293                     	;# 
   203  0294                     	;# 
   204  0295                     	;# 
   205  0295                     	;# 
   206  0296                     	;# 
   207  0298                     	;# 
   208  0298                     	;# 
   209  0299                     	;# 
   210  029A                     	;# 
   211  029B                     	;# 
   212  029C                     	;# 
   213  029D                     	;# 
   214  029E                     	;# 
   215  0311                     	;# 
   216  0311                     	;# 
   217  0312                     	;# 
   218  0313                     	;# 
   219  0318                     	;# 
   220  0318                     	;# 
   221  0319                     	;# 
   222  031A                     	;# 
   223  038C                     	;# 
   224  038E                     	;# 
   225  0391                     	;# 
   226  0392                     	;# 
   227  0393                     	;# 
   228  039A                     	;# 
   229  039C                     	;# 
   230  039D                     	;# 
   231  039E                     	;# 
   232  039F                     	;# 
   233  0415                     	;# 
   234  0416                     	;# 
   235  0417                     	;# 
   236  041C                     	;# 
   237  041D                     	;# 
   238  041E                     	;# 
   239  0FE4                     	;# 
   240  0FE5                     	;# 
   241  0FE6                     	;# 
   242  0FE7                     	;# 
   243  0FE8                     	;# 
   244  0FE9                     	;# 
   245  0FEA                     	;# 
   246  0FEB                     	;# 
   247  0FED                     	;# 
   248  0FEE                     	;# 
   249  0FEF                     	;# 
   250  0000                     	;# 
   251  0001                     	;# 
   252  0002                     	;# 
   253  0003                     	;# 
   254  0004                     	;# 
   255  0005                     	;# 
   256  0006                     	;# 
   257  0007                     	;# 
   258  0008                     	;# 
   259  0009                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000E                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  008C                     	;# 
   279  008E                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  010C                     	;# 
   295  010E                     	;# 
   296  0111                     	;# 
   297  0112                     	;# 
   298  0113                     	;# 
   299  0114                     	;# 
   300  0115                     	;# 
   301  0116                     	;# 
   302  0117                     	;# 
   303  0118                     	;# 
   304  0119                     	;# 
   305  011A                     	;# 
   306  011B                     	;# 
   307  011D                     	;# 
   308  011E                     	;# 
   309  018C                     	;# 
   310  018E                     	;# 
   311  0191                     	;# 
   312  0191                     	;# 
   313  0192                     	;# 
   314  0193                     	;# 
   315  0193                     	;# 
   316  0193                     	;# 
   317  0194                     	;# 
   318  0195                     	;# 
   319  0196                     	;# 
   320  0199                     	;# 
   321  019A                     	;# 
   322  019B                     	;# 
   323  019B                     	;# 
   324  019C                     	;# 
   325  019D                     	;# 
   326  019E                     	;# 
   327  019F                     	;# 
   328  020C                     	;# 
   329  020E                     	;# 
   330  0211                     	;# 
   331  0211                     	;# 
   332  0212                     	;# 
   333  0212                     	;# 
   334  0213                     	;# 
   335  0213                     	;# 
   336  0214                     	;# 
   337  0214                     	;# 
   338  0215                     	;# 
   339  0215                     	;# 
   340  0215                     	;# 
   341  0216                     	;# 
   342  0216                     	;# 
   343  0217                     	;# 
   344  0217                     	;# 
   345  0291                     	;# 
   346  0291                     	;# 
   347  0292                     	;# 
   348  0293                     	;# 
   349  0294                     	;# 
   350  0295                     	;# 
   351  0295                     	;# 
   352  0296                     	;# 
   353  0298                     	;# 
   354  0298                     	;# 
   355  0299                     	;# 
   356  029A                     	;# 
   357  029B                     	;# 
   358  029C                     	;# 
   359  029D                     	;# 
   360  029E                     	;# 
   361  0311                     	;# 
   362  0311                     	;# 
   363  0312                     	;# 
   364  0313                     	;# 
   365  0318                     	;# 
   366  0318                     	;# 
   367  0319                     	;# 
   368  031A                     	;# 
   369  038C                     	;# 
   370  038E                     	;# 
   371  0391                     	;# 
   372  0392                     	;# 
   373  0393                     	;# 
   374  039A                     	;# 
   375  039C                     	;# 
   376  039D                     	;# 
   377  039E                     	;# 
   378  039F                     	;# 
   379  0415                     	;# 
   380  0416                     	;# 
   381  0417                     	;# 
   382  041C                     	;# 
   383  041D                     	;# 
   384  041E                     	;# 
   385  0FE4                     	;# 
   386  0FE5                     	;# 
   387  0FE6                     	;# 
   388  0FE7                     	;# 
   389  0FE8                     	;# 
   390  0FE9                     	;# 
   391  0FEA                     	;# 
   392  0FEB                     	;# 
   393  0FED                     	;# 
   394  0FEE                     	;# 
   395  0FEF                     	;# 
   396  0000                     	;# 
   397  0001                     	;# 
   398  0002                     	;# 
   399  0003                     	;# 
   400  0004                     	;# 
   401  0005                     	;# 
   402  0006                     	;# 
   403  0007                     	;# 
   404  0008                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000E                     	;# 
   410  0011                     	;# 
   411  0012                     	;# 
   412  0013                     	;# 
   413  0015                     	;# 
   414  0016                     	;# 
   415  0016                     	;# 
   416  0017                     	;# 
   417  0018                     	;# 
   418  0019                     	;# 
   419  001A                     	;# 
   420  001B                     	;# 
   421  001C                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  008C                     	;# 
   425  008E                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  010C                     	;# 
   441  010E                     	;# 
   442  0111                     	;# 
   443  0112                     	;# 
   444  0113                     	;# 
   445  0114                     	;# 
   446  0115                     	;# 
   447  0116                     	;# 
   448  0117                     	;# 
   449  0118                     	;# 
   450  0119                     	;# 
   451  011A                     	;# 
   452  011B                     	;# 
   453  011D                     	;# 
   454  011E                     	;# 
   455  018C                     	;# 
   456  018E                     	;# 
   457  0191                     	;# 
   458  0191                     	;# 
   459  0192                     	;# 
   460  0193                     	;# 
   461  0193                     	;# 
   462  0193                     	;# 
   463  0194                     	;# 
   464  0195                     	;# 
   465  0196                     	;# 
   466  0199                     	;# 
   467  019A                     	;# 
   468  019B                     	;# 
   469  019B                     	;# 
   470  019C                     	;# 
   471  019D                     	;# 
   472  019E                     	;# 
   473  019F                     	;# 
   474  020C                     	;# 
   475  020E                     	;# 
   476  0211                     	;# 
   477  0211                     	;# 
   478  0212                     	;# 
   479  0212                     	;# 
   480  0213                     	;# 
   481  0213                     	;# 
   482  0214                     	;# 
   483  0214                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0216                     	;# 
   488  0216                     	;# 
   489  0217                     	;# 
   490  0217                     	;# 
   491  0291                     	;# 
   492  0291                     	;# 
   493  0292                     	;# 
   494  0293                     	;# 
   495  0294                     	;# 
   496  0295                     	;# 
   497  0295                     	;# 
   498  0296                     	;# 
   499  0298                     	;# 
   500  0298                     	;# 
   501  0299                     	;# 
   502  029A                     	;# 
   503  029B                     	;# 
   504  029C                     	;# 
   505  029D                     	;# 
   506  029E                     	;# 
   507  0311                     	;# 
   508  0311                     	;# 
   509  0312                     	;# 
   510  0313                     	;# 
   511  0318                     	;# 
   512  0318                     	;# 
   513  0319                     	;# 
   514  031A                     	;# 
   515  038C                     	;# 
   516  038E                     	;# 
   517  0391                     	;# 
   518  0392                     	;# 
   519  0393                     	;# 
   520  039A                     	;# 
   521  039C                     	;# 
   522  039D                     	;# 
   523  039E                     	;# 
   524  039F                     	;# 
   525  0415                     	;# 
   526  0416                     	;# 
   527  0417                     	;# 
   528  041C                     	;# 
   529  041D                     	;# 
   530  041E                     	;# 
   531  0FE4                     	;# 
   532  0FE5                     	;# 
   533  0FE6                     	;# 
   534  0FE7                     	;# 
   535  0FE8                     	;# 
   536  0FE9                     	;# 
   537  0FEA                     	;# 
   538  0FEB                     	;# 
   539  0FED                     	;# 
   540  0FEE                     	;# 
   541  0FEF                     	;# 
   542  0000                     	;# 
   543  0001                     	;# 
   544  0002                     	;# 
   545  0003                     	;# 
   546  0004                     	;# 
   547  0005                     	;# 
   548  0006                     	;# 
   549  0007                     	;# 
   550  0008                     	;# 
   551  0009                     	;# 
   552  000A                     	;# 
   553  000B                     	;# 
   554  000C                     	;# 
   555  000E                     	;# 
   556  0011                     	;# 
   557  0012                     	;# 
   558  0013                     	;# 
   559  0015                     	;# 
   560  0016                     	;# 
   561  0016                     	;# 
   562  0017                     	;# 
   563  0018                     	;# 
   564  0019                     	;# 
   565  001A                     	;# 
   566  001B                     	;# 
   567  001C                     	;# 
   568  001E                     	;# 
   569  001F                     	;# 
   570  008C                     	;# 
   571  008E                     	;# 
   572  0091                     	;# 
   573  0092                     	;# 
   574  0093                     	;# 
   575  0095                     	;# 
   576  0096                     	;# 
   577  0097                     	;# 
   578  0098                     	;# 
   579  0099                     	;# 
   580  009A                     	;# 
   581  009B                     	;# 
   582  009B                     	;# 
   583  009C                     	;# 
   584  009D                     	;# 
   585  009E                     	;# 
   586  010C                     	;# 
   587  010E                     	;# 
   588  0111                     	;# 
   589  0112                     	;# 
   590  0113                     	;# 
   591  0114                     	;# 
   592  0115                     	;# 
   593  0116                     	;# 
   594  0117                     	;# 
   595  0118                     	;# 
   596  0119                     	;# 
   597  011A                     	;# 
   598  011B                     	;# 
   599  011D                     	;# 
   600  011E                     	;# 
   601  018C                     	;# 
   602  018E                     	;# 
   603  0191                     	;# 
   604  0191                     	;# 
   605  0192                     	;# 
   606  0193                     	;# 
   607  0193                     	;# 
   608  0193                     	;# 
   609  0194                     	;# 
   610  0195                     	;# 
   611  0196                     	;# 
   612  0199                     	;# 
   613  019A                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019C                     	;# 
   617  019D                     	;# 
   618  019E                     	;# 
   619  019F                     	;# 
   620  020C                     	;# 
   621  020E                     	;# 
   622  0211                     	;# 
   623  0211                     	;# 
   624  0212                     	;# 
   625  0212                     	;# 
   626  0213                     	;# 
   627  0213                     	;# 
   628  0214                     	;# 
   629  0214                     	;# 
   630  0215                     	;# 
   631  0215                     	;# 
   632  0215                     	;# 
   633  0216                     	;# 
   634  0216                     	;# 
   635  0217                     	;# 
   636  0217                     	;# 
   637  0291                     	;# 
   638  0291                     	;# 
   639  0292                     	;# 
   640  0293                     	;# 
   641  0294                     	;# 
   642  0295                     	;# 
   643  0295                     	;# 
   644  0296                     	;# 
   645  0298                     	;# 
   646  0298                     	;# 
   647  0299                     	;# 
   648  029A                     	;# 
   649  029B                     	;# 
   650  029C                     	;# 
   651  029D                     	;# 
   652  029E                     	;# 
   653  0311                     	;# 
   654  0311                     	;# 
   655  0312                     	;# 
   656  0313                     	;# 
   657  0318                     	;# 
   658  0318                     	;# 
   659  0319                     	;# 
   660  031A                     	;# 
   661  038C                     	;# 
   662  038E                     	;# 
   663  0391                     	;# 
   664  0392                     	;# 
   665  0393                     	;# 
   666  039A                     	;# 
   667  039C                     	;# 
   668  039D                     	;# 
   669  039E                     	;# 
   670  039F                     	;# 
   671  0415                     	;# 
   672  0416                     	;# 
   673  0417                     	;# 
   674  041C                     	;# 
   675  041D                     	;# 
   676  041E                     	;# 
   677  0FE4                     	;# 
   678  0FE5                     	;# 
   679  0FE6                     	;# 
   680  0FE7                     	;# 
   681  0FE8                     	;# 
   682  0FE9                     	;# 
   683  0FEA                     	;# 
   684  0FEB                     	;# 
   685  0FED                     	;# 
   686  0FEE                     	;# 
   687  0FEF                     	;# 
   688  0000                     	;# 
   689  0001                     	;# 
   690  0002                     	;# 
   691  0003                     	;# 
   692  0004                     	;# 
   693  0005                     	;# 
   694  0006                     	;# 
   695  0007                     	;# 
   696  0008                     	;# 
   697  0009                     	;# 
   698  000A                     	;# 
   699  000B                     	;# 
   700  000C                     	;# 
   701  000E                     	;# 
   702  0011                     	;# 
   703  0012                     	;# 
   704  0013                     	;# 
   705  0015                     	;# 
   706  0016                     	;# 
   707  0016                     	;# 
   708  0017                     	;# 
   709  0018                     	;# 
   710  0019                     	;# 
   711  001A                     	;# 
   712  001B                     	;# 
   713  001C                     	;# 
   714  001E                     	;# 
   715  001F                     	;# 
   716  008C                     	;# 
   717  008E                     	;# 
   718  0091                     	;# 
   719  0092                     	;# 
   720  0093                     	;# 
   721  0095                     	;# 
   722  0096                     	;# 
   723  0097                     	;# 
   724  0098                     	;# 
   725  0099                     	;# 
   726  009A                     	;# 
   727  009B                     	;# 
   728  009B                     	;# 
   729  009C                     	;# 
   730  009D                     	;# 
   731  009E                     	;# 
   732  010C                     	;# 
   733  010E                     	;# 
   734  0111                     	;# 
   735  0112                     	;# 
   736  0113                     	;# 
   737  0114                     	;# 
   738  0115                     	;# 
   739  0116                     	;# 
   740  0117                     	;# 
   741  0118                     	;# 
   742  0119                     	;# 
   743  011A                     	;# 
   744  011B                     	;# 
   745  011D                     	;# 
   746  011E                     	;# 
   747  018C                     	;# 
   748  018E                     	;# 
   749  0191                     	;# 
   750  0191                     	;# 
   751  0192                     	;# 
   752  0193                     	;# 
   753  0193                     	;# 
   754  0193                     	;# 
   755  0194                     	;# 
   756  0195                     	;# 
   757  0196                     	;# 
   758  0199                     	;# 
   759  019A                     	;# 
   760  019B                     	;# 
   761  019B                     	;# 
   762  019C                     	;# 
   763  019D                     	;# 
   764  019E                     	;# 
   765  019F                     	;# 
   766  020C                     	;# 
   767  020E                     	;# 
   768  0211                     	;# 
   769  0211                     	;# 
   770  0212                     	;# 
   771  0212                     	;# 
   772  0213                     	;# 
   773  0213                     	;# 
   774  0214                     	;# 
   775  0214                     	;# 
   776  0215                     	;# 
   777  0215                     	;# 
   778  0215                     	;# 
   779  0216                     	;# 
   780  0216                     	;# 
   781  0217                     	;# 
   782  0217                     	;# 
   783  0291                     	;# 
   784  0291                     	;# 
   785  0292                     	;# 
   786  0293                     	;# 
   787  0294                     	;# 
   788  0295                     	;# 
   789  0295                     	;# 
   790  0296                     	;# 
   791  0298                     	;# 
   792  0298                     	;# 
   793  0299                     	;# 
   794  029A                     	;# 
   795  029B                     	;# 
   796  029C                     	;# 
   797  029D                     	;# 
   798  029E                     	;# 
   799  0311                     	;# 
   800  0311                     	;# 
   801  0312                     	;# 
   802  0313                     	;# 
   803  0318                     	;# 
   804  0318                     	;# 
   805  0319                     	;# 
   806  031A                     	;# 
   807  038C                     	;# 
   808  038E                     	;# 
   809  0391                     	;# 
   810  0392                     	;# 
   811  0393                     	;# 
   812  039A                     	;# 
   813  039C                     	;# 
   814  039D                     	;# 
   815  039E                     	;# 
   816  039F                     	;# 
   817  0415                     	;# 
   818  0416                     	;# 
   819  0417                     	;# 
   820  041C                     	;# 
   821  041D                     	;# 
   822  041E                     	;# 
   823  0FE4                     	;# 
   824  0FE5                     	;# 
   825  0FE6                     	;# 
   826  0FE7                     	;# 
   827  0FE8                     	;# 
   828  0FE9                     	;# 
   829  0FEA                     	;# 
   830  0FEB                     	;# 
   831  0FED                     	;# 
   832  0FEE                     	;# 
   833  0FEF                     	;# 
   834  0000                     	;# 
   835  0001                     	;# 
   836  0002                     	;# 
   837  0003                     	;# 
   838  0004                     	;# 
   839  0005                     	;# 
   840  0006                     	;# 
   841  0007                     	;# 
   842  0008                     	;# 
   843  0009                     	;# 
   844  000A                     	;# 
   845  000B                     	;# 
   846  000C                     	;# 
   847  000E                     	;# 
   848  0011                     	;# 
   849  0012                     	;# 
   850  0013                     	;# 
   851  0015                     	;# 
   852  0016                     	;# 
   853  0016                     	;# 
   854  0017                     	;# 
   855  0018                     	;# 
   856  0019                     	;# 
   857  001A                     	;# 
   858  001B                     	;# 
   859  001C                     	;# 
   860  001E                     	;# 
   861  001F                     	;# 
   862  008C                     	;# 
   863  008E                     	;# 
   864  0091                     	;# 
   865  0092                     	;# 
   866  0093                     	;# 
   867  0095                     	;# 
   868  0096                     	;# 
   869  0097                     	;# 
   870  0098                     	;# 
   871  0099                     	;# 
   872  009A                     	;# 
   873  009B                     	;# 
   874  009B                     	;# 
   875  009C                     	;# 
   876  009D                     	;# 
   877  009E                     	;# 
   878  010C                     	;# 
   879  010E                     	;# 
   880  0111                     	;# 
   881  0112                     	;# 
   882  0113                     	;# 
   883  0114                     	;# 
   884  0115                     	;# 
   885  0116                     	;# 
   886  0117                     	;# 
   887  0118                     	;# 
   888  0119                     	;# 
   889  011A                     	;# 
   890  011B                     	;# 
   891  011D                     	;# 
   892  011E                     	;# 
   893  018C                     	;# 
   894  018E                     	;# 
   895  0191                     	;# 
   896  0191                     	;# 
   897  0192                     	;# 
   898  0193                     	;# 
   899  0193                     	;# 
   900  0193                     	;# 
   901  0194                     	;# 
   902  0195                     	;# 
   903  0196                     	;# 
   904  0199                     	;# 
   905  019A                     	;# 
   906  019B                     	;# 
   907  019B                     	;# 
   908  019C                     	;# 
   909  019D                     	;# 
   910  019E                     	;# 
   911  019F                     	;# 
   912  020C                     	;# 
   913  020E                     	;# 
   914  0211                     	;# 
   915  0211                     	;# 
   916  0212                     	;# 
   917  0212                     	;# 
   918  0213                     	;# 
   919  0213                     	;# 
   920  0214                     	;# 
   921  0214                     	;# 
   922  0215                     	;# 
   923  0215                     	;# 
   924  0215                     	;# 
   925  0216                     	;# 
   926  0216                     	;# 
   927  0217                     	;# 
   928  0217                     	;# 
   929  0291                     	;# 
   930  0291                     	;# 
   931  0292                     	;# 
   932  0293                     	;# 
   933  0294                     	;# 
   934  0295                     	;# 
   935  0295                     	;# 
   936  0296                     	;# 
   937  0298                     	;# 
   938  0298                     	;# 
   939  0299                     	;# 
   940  029A                     	;# 
   941  029B                     	;# 
   942  029C                     	;# 
   943  029D                     	;# 
   944  029E                     	;# 
   945  0311                     	;# 
   946  0311                     	;# 
   947  0312                     	;# 
   948  0313                     	;# 
   949  0318                     	;# 
   950  0318                     	;# 
   951  0319                     	;# 
   952  031A                     	;# 
   953  038C                     	;# 
   954  038E                     	;# 
   955  0391                     	;# 
   956  0392                     	;# 
   957  0393                     	;# 
   958  039A                     	;# 
   959  039C                     	;# 
   960  039D                     	;# 
   961  039E                     	;# 
   962  039F                     	;# 
   963  0415                     	;# 
   964  0416                     	;# 
   965  0417                     	;# 
   966  041C                     	;# 
   967  041D                     	;# 
   968  041E                     	;# 
   969  0FE4                     	;# 
   970  0FE5                     	;# 
   971  0FE6                     	;# 
   972  0FE7                     	;# 
   973  0FE8                     	;# 
   974  0FE9                     	;# 
   975  0FEA                     	;# 
   976  0FEB                     	;# 
   977  0FED                     	;# 
   978  0FEE                     	;# 
   979  0FEF                     	;# 
   980  0000                     	;# 
   981  0001                     	;# 
   982  0002                     	;# 
   983  0003                     	;# 
   984  0004                     	;# 
   985  0005                     	;# 
   986  0006                     	;# 
   987  0007                     	;# 
   988  0008                     	;# 
   989  0009                     	;# 
   990  000A                     	;# 
   991  000B                     	;# 
   992  000C                     	;# 
   993  000E                     	;# 
   994  0011                     	;# 
   995  0012                     	;# 
   996  0013                     	;# 
   997  0015                     	;# 
   998  0016                     	;# 
   999  0016                     	;# 
  1000  0017                     	;# 
  1001  0018                     	;# 
  1002  0019                     	;# 
  1003  001A                     	;# 
  1004  001B                     	;# 
  1005  001C                     	;# 
  1006  001E                     	;# 
  1007  001F                     	;# 
  1008  008C                     	;# 
  1009  008E                     	;# 
  1010  0091                     	;# 
  1011  0092                     	;# 
  1012  0093                     	;# 
  1013  0095                     	;# 
  1014  0096                     	;# 
  1015  0097                     	;# 
  1016  0098                     	;# 
  1017  0099                     	;# 
  1018  009A                     	;# 
  1019  009B                     	;# 
  1020  009B                     	;# 
  1021  009C                     	;# 
  1022  009D                     	;# 
  1023  009E                     	;# 
  1024  010C                     	;# 
  1025  010E                     	;# 
  1026  0111                     	;# 
  1027  0112                     	;# 
  1028  0113                     	;# 
  1029  0114                     	;# 
  1030  0115                     	;# 
  1031  0116                     	;# 
  1032  0117                     	;# 
  1033  0118                     	;# 
  1034  0119                     	;# 
  1035  011A                     	;# 
  1036  011B                     	;# 
  1037  011D                     	;# 
  1038  011E                     	;# 
  1039  018C                     	;# 
  1040  018E                     	;# 
  1041  0191                     	;# 
  1042  0191                     	;# 
  1043  0192                     	;# 
  1044  0193                     	;# 
  1045  0193                     	;# 
  1046  0193                     	;# 
  1047  0194                     	;# 
  1048  0195                     	;# 
  1049  0196                     	;# 
  1050  0199                     	;# 
  1051  019A                     	;# 
  1052  019B                     	;# 
  1053  019B                     	;# 
  1054  019C                     	;# 
  1055  019D                     	;# 
  1056  019E                     	;# 
  1057  019F                     	;# 
  1058  020C                     	;# 
  1059  020E                     	;# 
  1060  0211                     	;# 
  1061  0211                     	;# 
  1062  0212                     	;# 
  1063  0212                     	;# 
  1064  0213                     	;# 
  1065  0213                     	;# 
  1066  0214                     	;# 
  1067  0214                     	;# 
  1068  0215                     	;# 
  1069  0215                     	;# 
  1070  0215                     	;# 
  1071  0216                     	;# 
  1072  0216                     	;# 
  1073  0217                     	;# 
  1074  0217                     	;# 
  1075  0291                     	;# 
  1076  0291                     	;# 
  1077  0292                     	;# 
  1078  0293                     	;# 
  1079  0294                     	;# 
  1080  0295                     	;# 
  1081  0295                     	;# 
  1082  0296                     	;# 
  1083  0298                     	;# 
  1084  0298                     	;# 
  1085  0299                     	;# 
  1086  029A                     	;# 
  1087  029B                     	;# 
  1088  029C                     	;# 
  1089  029D                     	;# 
  1090  029E                     	;# 
  1091  0311                     	;# 
  1092  0311                     	;# 
  1093  0312                     	;# 
  1094  0313                     	;# 
  1095  0318                     	;# 
  1096  0318                     	;# 
  1097  0319                     	;# 
  1098  031A                     	;# 
  1099  038C                     	;# 
  1100  038E                     	;# 
  1101  0391                     	;# 
  1102  0392                     	;# 
  1103  0393                     	;# 
  1104  039A                     	;# 
  1105  039C                     	;# 
  1106  039D                     	;# 
  1107  039E                     	;# 
  1108  039F                     	;# 
  1109  0415                     	;# 
  1110  0416                     	;# 
  1111  0417                     	;# 
  1112  041C                     	;# 
  1113  041D                     	;# 
  1114  041E                     	;# 
  1115  0FE4                     	;# 
  1116  0FE5                     	;# 
  1117  0FE6                     	;# 
  1118  0FE7                     	;# 
  1119  0FE8                     	;# 
  1120  0FE9                     	;# 
  1121  0FEA                     	;# 
  1122  0FEB                     	;# 
  1123  0FED                     	;# 
  1124  0FEE                     	;# 
  1125  0FEF                     	;# 
  1126                           
  1127                           	psect	idataBANK0
  1128  06F3                     __pidataBANK0:	
  1129                           
  1130                           ;initializer for _LIN_timeout
  1131  06F3  340A               	retlw	10
  1132                           
  1133                           	psect	stringtext
  1134  05DB                     __pstringtext:	
  1135  05DB                     _scheduleTable:	
  1136  05DB  3400               	retlw	0
  1137  05DC  3400               	retlw	0
  1138  05DD  3401               	retlw	1
  1139  05DE  3400               	retlw	0
  1140  05DF  3464               	retlw	100
  1141  05E0  3443               	retlw	low (_UNLOCK_Data| 0)
  1142  05E1  3401               	retlw	1
  1143  05E2  3400               	retlw	0
  1144  05E3  3401               	retlw	1
  1145  05E4  3400               	retlw	0
  1146  05E5  3414               	retlw	20
  1147  05E6  3442               	retlw	low (_RSSI_Data| 0)
  1148  05E7  3402               	retlw	2
  1149  05E8  3401               	retlw	1
  1150  05E9  3408               	retlw	8
  1151  05EA  3464               	retlw	100
  1152  05EB  3400               	retlw	0
  1153  05EC  34BC               	retlw	low (_LFRX_Data| 0)
  1154  05ED  3403               	retlw	3
  1155  05EE  3400               	retlw	0
  1156  05EF  3401               	retlw	1
  1157  05F0  3405               	retlw	5
  1158  05F1  3414               	retlw	20
  1159  05F2  3441               	retlw	low (_SIGNAL_Data| 0)
  1160  05F3                     __end_of_scheduleTable:	
  1161                           
  1162                           	psect	nvBANK0
  1163  005B                     __pnvBANK0:	
  1164  005B                     _schedule:	
  1165  005B                     	ds	2
  1166  005D                     _TMR2_InterruptHandler:	
  1167  005D                     	ds	2
  1168  005F                     _EUSART_FramingErrorHandler:	
  1169  005F                     	ds	2
  1170  0061                     _EUSART_RxDefaultInterruptHandler:	
  1171  0061                     	ds	2
  1172  0063                     _EUSART_TxDefaultInterruptHandler:	
  1173  0063                     	ds	2
  1174  0065                     _scheduleLength:	
  1175  0065                     	ds	1
  1176  0066                     _eusartTxBufferRemaining:	
  1177  0066                     	ds	1
  1178                           
  1179                           	psect	nvBANK1
  1180  00CF                     __pnvBANK1:	
  1181  00CF                     _LIN_processData:	
  1182  00CF                     	ds	2
  1183  00D1                     _EUSART_ErrorHandler:	
  1184  00D1                     	ds	2
  1185  00D3                     _EUSART_OverrunErrorHandler:	
  1186  00D3                     	ds	2
  1187  00D5                     _LIN_enablePeriodTx:	
  1188  00D5                     	ds	1
  1189  001C                     _T2CONbits	set	28
  1190  001C                     _T2CON	set	28
  1191  001A                     _TMR2	set	26
  1192  001B                     _PR2	set	27
  1193  0011                     _PIR1bits	set	17
  1194  000B                     _INTCONbits	set	11
  1195  0095                     _OPTION_REGbits	set	149
  1196  008E                     _TRISC	set	142
  1197  008C                     _TRISA	set	140
  1198  0097                     _WDTCON	set	151
  1199  0098                     _OSCTUNE	set	152
  1200  0099                     _OSCCON	set	153
  1201  0091                     _PIE1bits	set	145
  1202  011E                     _APFCON1	set	286
  1203  011D                     _APFCON0	set	285
  1204  010E                     _LATC	set	270
  1205  010C                     _LATA	set	268
  1206  0116                     _BORCON	set	278
  1207  018C                     _ANSELA	set	396
  1208  018E                     _ANSELC	set	398
  1209  0199                     _RCREG	set	409
  1210  019D                     _RCSTAbits	set	413
  1211  019A                     _TXREG	set	410
  1212  019E                     _TXSTAbits	set	414
  1213  019C                     _SPBRGH	set	412
  1214  019B                     _SPBRGL	set	411
  1215  019E                     _TXSTA	set	414
  1216  019D                     _RCSTA	set	413
  1217  019F                     _BAUDCON	set	415
  1218  020E                     _WPUC	set	526
  1219  020C                     _WPUA	set	524
  1220                           
  1221                           ; #config settings
  1222  0000                     
  1223                           	psect	cinit
  1224  0032                     start_initialization:	
  1225  0032                     __initialization:	
  1226                           
  1227                           ; Initialize objects allocated to BANK0
  1228  0032  3186  26F3  3180   	fcall	__pidataBANK0	;fetch initializer
  1229  0035  00E7               	movwf	__pdataBANK0& (0+127)
  1230                           
  1231                           ; Clear objects allocated to BANK0
  1232  0036  3020               	movlw	low __pbssBANK0
  1233  0037  0084               	movwf	4
  1234  0038  3000               	movlw	high __pbssBANK0
  1235  0039  0085               	movwf	5
  1236  003A  3024               	movlw	36
  1237  003B  3186  26A6  3180   	fcall	clear_ram0
  1238                           
  1239                           ; Clear objects allocated to BANK1
  1240  003E  30A0               	movlw	low __pbssBANK1
  1241  003F  0084               	movwf	4
  1242  0040  3000               	movlw	high __pbssBANK1
  1243  0041  0085               	movwf	5
  1244  0042  3024               	movlw	36
  1245  0043  3186  26A6         	fcall	clear_ram0
  1246  0045                     end_of_initialization:	
  1247                           ;End of C runtime variable initialization code
  1248                           
  1249  0045                     __end_of__initialization:	
  1250  0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1251  0046  0020               	movlb	0
  1252  0047  3185  2D6F         	ljmp	_main	;jump to C main() function
  1253                           
  1254                           	psect	bssBANK0
  1255  0020                     __pbssBANK0:	
  1256  0020                     _eusartRxStatusBuffer:	
  1257  0020                     	ds	8
  1258  0028                     LIN_sendPeriodicTx@scheduleIndex:	
  1259  0028                     	ds	1
  1260  0029                     LIN_receivePacket@rxIndex:	
  1261  0029                     	ds	1
  1262  002A                     LIN_handler@LIN_state:	
  1263  002A                     	ds	1
  1264  002B                     _LIN_periodCallBack:	
  1265  002B                     	ds	1
  1266  002C                     _LIN_timerCallBack:	
  1267  002C                     	ds	1
  1268  002D                     _LIN_timerRunning:	
  1269  002D                     	ds	1
  1270  002E                     _LIN_period:	
  1271  002E                     	ds	1
  1272  002F                     _LIN_txReady:	
  1273  002F                     	ds	1
  1274  0030                     _eusartRxLastError:	
  1275  0030                     	ds	1
  1276  0031                     _eusartRxCount:	
  1277  0031                     	ds	1
  1278  0032                     _eusartRxTail:	
  1279  0032                     	ds	1
  1280  0033                     _eusartRxHead:	
  1281  0033                     	ds	1
  1282  0034                     _eusartTxTail:	
  1283  0034                     	ds	1
  1284  0035                     _eusartTxHead:	
  1285  0035                     	ds	1
  1286  0036                     _LIN_packet:	
  1287  0036                     	ds	11
  1288  0041                     _SIGNAL_Data:	
  1289  0041                     	ds	1
  1290  0042                     _RSSI_Data:	
  1291  0042                     	ds	1
  1292  0043                     _UNLOCK_Data:	
  1293  0043                     	ds	1
  1294                           
  1295                           	psect	dataBANK0
  1296  0067                     __pdataBANK0:	
  1297  0067                     _LIN_timeout:	
  1298  0067                     	ds	1
  1299                           
  1300                           	psect	bssBANK1
  1301  00A0                     __pbssBANK1:	
  1302  00A0                     _eusartRxBuffer:	
  1303  00A0                     	ds	8
  1304  00A8                     _eusartTxBuffer:	
  1305  00A8                     	ds	8
  1306  00B0                     _LIN_rxPacket:	
  1307  00B0                     	ds	12
  1308  00BC                     _LFRX_Data:	
  1309  00BC                     	ds	8
  1310                           
  1311                           	psect	clrtext
  1312  06A6                     clear_ram0:	
  1313                           ;	Called with FSR0 containing the base address, and
  1314                           ;	WREG with the size to clear
  1315                           
  1316  06A6  0064               	clrwdt	;clear the watchdog before getting into this loop
  1317  06A7                     clrloop0:	
  1318  06A7  0180               	clrf	0	;clear RAM location pointed to by FSR
  1319  06A8  3101               	addfsr 0,1
  1320  06A9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1321  06AA  2EA7               	goto	clrloop0	;have we reached the end yet?
  1322  06AB  3400               	retlw	0	;all done for this memory range, return
  1323                           
  1324                           	psect	cstackBANK1
  1325  00C4                     __pcstackBANK1:	
  1326  00C4                     processLIN@tempRxData:	
  1327                           
  1328                           ; 8 bytes @ 0x0
  1329  00C4                     	ds	8
  1330  00CC                     processLIN@cmd:	
  1331                           
  1332                           ; 1 bytes @ 0x8
  1333  00CC                     	ds	1
  1334  00CD                     ??_main:	
  1335                           
  1336                           ; 1 bytes @ 0x9
  1337  00CD                     	ds	1
  1338  00CE                     main@data_to_send:	
  1339                           
  1340                           ; 1 bytes @ 0xA
  1341  00CE                     	ds	1
  1342                           
  1343                           	psect	cstackCOMMON
  1344  0070                     __pcstackCOMMON:	
  1345  0070                     ?_TMR2_ISR:	
  1346  0070                     ?_PIN_MANAGER_Initialize:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349  0070                     ?_OSCILLATOR_Initialize:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352  0070                     ?_WDT_Initialize:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355  0070                     ?_TMR2_Initialize:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358  0070                     ?_EUSART_Initialize:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361  0070                     ?_LIN_Master_Initialize:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364  0070                     ?_EUSART_Receive_ISR:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  0070                     ?_EUSART_Transmit_ISR:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370  0070                     ??_EUSART_Transmit_ISR:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  0070                     ?_EUSART_DefaultErrorHandler:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388  0070                     ?_EUSART_RxDataHandler:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391  0070                     ??_EUSART_RxDataHandler:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394  0070                     ?_TMR2_DefaultInterruptHandler:	
  1395                           ; 1 bytes @ 0x0
  1396                           
  1397  0070                     ??_TMR2_DefaultInterruptHandler:	
  1398                           ; 1 bytes @ 0x0
  1399                           
  1400  0070                     ?_processLIN:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403  0070                     ?_LIN_getPacket:	
  1404                           ; 1 bytes @ 0x0
  1405                           
  1406  0070                     ?_LIN_stopTimer:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409  0070                     ?_LIN_setTimerHandler:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412  0070                     ?_LIN_startPeriod:	
  1413                           ; 1 bytes @ 0x0
  1414                           
  1415  0070                     ?_LIN_calcParity:	
  1416                           ; 1 bytes @ 0x0
  1417                           
  1418  0070                     ?_LIN_disableRx:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0070                     ?_LIN_sendPacket:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424  0070                     ?_LIN_startTimer:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427  0070                     ?_LIN_enableRx:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430  0070                     ?_LIN_receivePacket:	
  1431                           ; 1 bytes @ 0x0
  1432                           
  1433  0070                     ?_LIN_sendBreak:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436  0070                     ?_LIN_sendPeriodicTx:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439  0070                     ?_INTERRUPT_InterruptManager:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442  0070                     ?_SYSTEM_Initialize:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0070                     ?_EUSART_is_rx_ready:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448  0070                     ?_EUSART_Read:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451  0070                     ?_EUSART_Write:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454  0070                     ?_TMR2_StartTimer:	
  1455                           ; 1 bytes @ 0x0
  1456                           
  1457  0070                     ?_TMR2_WriteTimer:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460  0070                     ?_LIN_handler:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463  0070                     ?_LIN_timerHandler:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466  0070                     ?_main:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469  0070                     ?i1_LIN_calcParity:	
  1470                           ; 1 bytes @ 0x0
  1471                           
  1472  0070                     ??i1_LIN_calcParity:	
  1473                           ; 1 bytes @ 0x0
  1474                           
  1475  0070                     ?i1_LIN_getChecksum:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478  0070                     ?i1_LIN_stopTimer:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481  0070                     ??i1_LIN_stopTimer:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484  0070                     ?___wmul:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487  0070                     i1LIN_getChecksum@data:	
  1488                           ; 2 bytes @ 0x0
  1489                           
  1490  0070                     ___wmul@multiplier:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493                           
  1494                           ; 2 bytes @ 0x0
  1495  0070                     	ds	1
  1496  0071                     ??_EUSART_Receive_ISR:	
  1497  0071                     ??_EUSART_DefaultErrorHandler:	
  1498                           ; 1 bytes @ 0x1
  1499                           
  1500  0071                     ??i1_LIN_getChecksum:	
  1501                           ; 1 bytes @ 0x1
  1502                           
  1503  0071                     i1LIN_calcParity@CMD:	
  1504                           ; 1 bytes @ 0x1
  1505                           
  1506                           
  1507                           ; 1 bytes @ 0x1
  1508  0071                     	ds	1
  1509  0072                     i1LIN_calcParity@PID:	
  1510  0072                     i1LIN_getChecksum@length:	
  1511                           ; 1 bytes @ 0x2
  1512                           
  1513  0072                     ___wmul@multiplicand:	
  1514                           ; 1 bytes @ 0x2
  1515                           
  1516                           
  1517                           ; 2 bytes @ 0x2
  1518  0072                     	ds	1
  1519  0073                     i1LIN_getChecksum@i:	
  1520                           
  1521                           ; 1 bytes @ 0x3
  1522  0073                     	ds	1
  1523  0074                     ??___wmul:	
  1524  0074                     ___wmul@product:	
  1525                           ; 1 bytes @ 0x4
  1526                           
  1527  0074                     i1LIN_getChecksum@checksum:	
  1528                           ; 2 bytes @ 0x4
  1529                           
  1530                           
  1531                           ; 2 bytes @ 0x4
  1532  0074                     	ds	2
  1533  0076                     ?i1_LIN_queuePacket:	
  1534  0076                     i1LIN_queuePacket@data:	
  1535                           ; 1 bytes @ 0x6
  1536                           
  1537                           
  1538                           ; 1 bytes @ 0x6
  1539  0076                     	ds	1
  1540  0077                     ??i1_LIN_queuePacket:	
  1541                           
  1542                           ; 1 bytes @ 0x7
  1543  0077                     	ds	4
  1544  007B                     ??_LIN_sendPeriodicTx:	
  1545                           
  1546                           ; 1 bytes @ 0xB
  1547  007B                     	ds	3
  1548  007E                     ??_TMR2_ISR:	
  1549                           
  1550                           	psect	cstackBANK0
  1551  0044                     __pcstackBANK0:	
  1552                           ; 1 bytes @ 0xE
  1553                           
  1554  0044                     i1LIN_queuePacket@cmd:	
  1555                           
  1556                           ; 1 bytes @ 0x0
  1557  0044                     	ds	1
  1558  0045                     i1LIN_queuePacket@i:	
  1559                           
  1560                           ; 1 bytes @ 0x1
  1561  0045                     	ds	1
  1562  0046                     i1LIN_queuePacket@tempSchedule:	
  1563                           
  1564                           ; 2 bytes @ 0x2
  1565  0046                     	ds	2
  1566  0048                     LIN_sendPeriodicTx@periodicTx:	
  1567                           
  1568                           ; 2 bytes @ 0x4
  1569  0048                     	ds	2
  1570  004A                     ??_LIN_timerHandler:	
  1571                           
  1572                           ; 1 bytes @ 0x6
  1573  004A                     	ds	1
  1574  004B                     ??_INTERRUPT_InterruptManager:	
  1575                           
  1576                           ; 1 bytes @ 0x7
  1577  004B                     	ds	1
  1578  004C                     ??_PIN_MANAGER_Initialize:	
  1579  004C                     ??_OSCILLATOR_Initialize:	
  1580                           ; 1 bytes @ 0x8
  1581                           
  1582  004C                     ??_WDT_Initialize:	
  1583                           ; 1 bytes @ 0x8
  1584                           
  1585  004C                     ?_EUSART_SetRxInterruptHandler:	
  1586                           ; 1 bytes @ 0x8
  1587                           
  1588  004C                     ?_EUSART_SetTxInterruptHandler:	
  1589                           ; 1 bytes @ 0x8
  1590                           
  1591  004C                     ?_EUSART_SetFramingErrorHandler:	
  1592                           ; 1 bytes @ 0x8
  1593                           
  1594  004C                     ?_EUSART_SetOverrunErrorHandler:	
  1595                           ; 1 bytes @ 0x8
  1596                           
  1597  004C                     ?_EUSART_SetErrorHandler:	
  1598                           ; 1 bytes @ 0x8
  1599                           
  1600  004C                     ?_TMR2_SetInterruptHandler:	
  1601                           ; 1 bytes @ 0x8
  1602                           
  1603  004C                     ??_LIN_stopTimer:	
  1604                           ; 1 bytes @ 0x8
  1605                           
  1606  004C                     ??_LIN_startPeriod:	
  1607                           ; 1 bytes @ 0x8
  1608                           
  1609  004C                     ??_LIN_calcParity:	
  1610                           ; 1 bytes @ 0x8
  1611                           
  1612  004C                     ?_LIN_getChecksum:	
  1613                           ; 1 bytes @ 0x8
  1614                           
  1615  004C                     ??_LIN_disableRx:	
  1616                           ; 1 bytes @ 0x8
  1617                           
  1618  004C                     ?_memset:	
  1619                           ; 1 bytes @ 0x8
  1620                           
  1621  004C                     ??_LIN_enableRx:	
  1622                           ; 1 bytes @ 0x8
  1623                           
  1624  004C                     ??_LIN_sendBreak:	
  1625                           ; 1 bytes @ 0x8
  1626                           
  1627  004C                     ??_EUSART_is_rx_ready:	
  1628                           ; 1 bytes @ 0x8
  1629                           
  1630  004C                     ??_EUSART_Read:	
  1631                           ; 1 bytes @ 0x8
  1632                           
  1633  004C                     ??_EUSART_Write:	
  1634                           ; 1 bytes @ 0x8
  1635                           
  1636  004C                     ??_TMR2_StartTimer:	
  1637                           ; 1 bytes @ 0x8
  1638                           
  1639  004C                     ??_TMR2_WriteTimer:	
  1640                           ; 1 bytes @ 0x8
  1641                           
  1642  004C                     TMR2_WriteTimer@timerVal:	
  1643                           ; 1 bytes @ 0x8
  1644                           
  1645  004C                     LIN_getChecksum@data:	
  1646                           ; 1 bytes @ 0x8
  1647                           
  1648  004C                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1649                           ; 1 bytes @ 0x8
  1650                           
  1651  004C                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1652                           ; 2 bytes @ 0x8
  1653                           
  1654  004C                     EUSART_SetErrorHandler@interruptHandler:	
  1655                           ; 2 bytes @ 0x8
  1656                           
  1657  004C                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1658                           ; 2 bytes @ 0x8
  1659                           
  1660  004C                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1661                           ; 2 bytes @ 0x8
  1662                           
  1663  004C                     TMR2_SetInterruptHandler@InterruptHandler:	
  1664                           ; 2 bytes @ 0x8
  1665                           
  1666  004C                     memset@c:	
  1667                           ; 2 bytes @ 0x8
  1668                           
  1669                           
  1670                           ; 2 bytes @ 0x8
  1671  004C                     	ds	1
  1672  004D                     ??_LIN_getChecksum:	
  1673  004D                     ??_LIN_startTimer:	
  1674                           ; 1 bytes @ 0x9
  1675                           
  1676  004D                     EUSART_Read@readValue:	
  1677                           ; 1 bytes @ 0x9
  1678                           
  1679  004D                     EUSART_Write@txData:	
  1680                           ; 1 bytes @ 0x9
  1681                           
  1682  004D                     LIN_calcParity@CMD:	
  1683                           ; 1 bytes @ 0x9
  1684                           
  1685                           
  1686                           ; 1 bytes @ 0x9
  1687  004D                     	ds	1
  1688  004E                     ??_TMR2_Initialize:	
  1689  004E                     ??_EUSART_Initialize:	
  1690                           ; 1 bytes @ 0xA
  1691                           
  1692  004E                     ??_EUSART_SetRxInterruptHandler:	
  1693                           ; 1 bytes @ 0xA
  1694                           
  1695  004E                     ??_EUSART_SetTxInterruptHandler:	
  1696                           ; 1 bytes @ 0xA
  1697                           
  1698  004E                     ??_EUSART_SetFramingErrorHandler:	
  1699                           ; 1 bytes @ 0xA
  1700                           
  1701  004E                     ??_EUSART_SetOverrunErrorHandler:	
  1702                           ; 1 bytes @ 0xA
  1703                           
  1704  004E                     ??_EUSART_SetErrorHandler:	
  1705                           ; 1 bytes @ 0xA
  1706                           
  1707  004E                     ??_TMR2_SetInterruptHandler:	
  1708                           ; 1 bytes @ 0xA
  1709                           
  1710  004E                     ?_LIN_init:	
  1711                           ; 1 bytes @ 0xA
  1712                           
  1713  004E                     ??_LIN_setTimerHandler:	
  1714                           ; 1 bytes @ 0xA
  1715                           
  1716  004E                     ??_LIN_sendPacket:	
  1717                           ; 1 bytes @ 0xA
  1718                           
  1719  004E                     LIN_calcParity@PID:	
  1720                           ; 1 bytes @ 0xA
  1721                           
  1722  004E                     LIN_getChecksum@length:	
  1723                           ; 1 bytes @ 0xA
  1724                           
  1725  004E                     LIN_startTimer@timeout:	
  1726                           ; 1 bytes @ 0xA
  1727                           
  1728  004E                     LIN_init@table:	
  1729                           ; 1 bytes @ 0xA
  1730                           
  1731  004E                     memset@n:	
  1732                           ; 2 bytes @ 0xA
  1733                           
  1734                           
  1735                           ; 2 bytes @ 0xA
  1736  004E                     	ds	1
  1737  004F                     LIN_sendPacket@i:	
  1738  004F                     LIN_getChecksum@i:	
  1739                           ; 1 bytes @ 0xB
  1740                           
  1741                           
  1742                           ; 1 bytes @ 0xB
  1743  004F                     	ds	1
  1744  0050                     ??_memset:	
  1745  0050                     LIN_init@processData:	
  1746                           ; 1 bytes @ 0xC
  1747                           
  1748  0050                     LIN_getChecksum@checksum:	
  1749                           ; 2 bytes @ 0xC
  1750                           
  1751                           
  1752                           ; 2 bytes @ 0xC
  1753  0050                     	ds	1
  1754  0051                     memset@p:	
  1755                           
  1756                           ; 1 bytes @ 0xD
  1757  0051                     	ds	1
  1758  0052                     ??_LIN_init:	
  1759  0052                     ??_LIN_receivePacket:	
  1760                           ; 1 bytes @ 0xE
  1761                           
  1762  0052                     ?_LIN_queuePacket:	
  1763                           ; 1 bytes @ 0xE
  1764                           
  1765  0052                     LIN_queuePacket@data:	
  1766                           ; 1 bytes @ 0xE
  1767                           
  1768  0052                     memset@p1:	
  1769                           ; 1 bytes @ 0xE
  1770                           
  1771                           
  1772                           ; 1 bytes @ 0xE
  1773  0052                     	ds	1
  1774  0053                     ??_LIN_getPacket:	
  1775  0053                     ??_LIN_queuePacket:	
  1776                           ; 1 bytes @ 0xF
  1777                           
  1778  0053                     LIN_init@tableLength:	
  1779                           ; 1 bytes @ 0xF
  1780                           
  1781                           
  1782                           ; 1 bytes @ 0xF
  1783  0053                     	ds	1
  1784  0054                     ??_LIN_Master_Initialize:	
  1785  0054                     ??_SYSTEM_Initialize:	
  1786                           ; 1 bytes @ 0x10
  1787                           
  1788  0054                     LIN_getPacket@data:	
  1789                           ; 1 bytes @ 0x10
  1790                           
  1791                           
  1792                           ; 1 bytes @ 0x10
  1793  0054                     	ds	1
  1794  0055                     LIN_getPacket@cmd:	
  1795                           
  1796                           ; 1 bytes @ 0x11
  1797  0055                     	ds	1
  1798  0056                     ??_processLIN:	
  1799                           
  1800                           ; 1 bytes @ 0x12
  1801  0056                     	ds	1
  1802  0057                     ??_LIN_handler:	
  1803  0057                     LIN_queuePacket@cmd:	
  1804                           ; 1 bytes @ 0x13
  1805                           
  1806                           
  1807                           ; 1 bytes @ 0x13
  1808  0057                     	ds	1
  1809  0058                     LIN_queuePacket@i:	
  1810                           
  1811                           ; 1 bytes @ 0x14
  1812  0058                     	ds	1
  1813  0059                     LIN_queuePacket@tempSchedule:	
  1814                           
  1815                           ; 2 bytes @ 0x15
  1816  0059                     	ds	2
  1817                           
  1818                           	psect	maintext
  1819  056F                     __pmaintext:	
  1820 ;;
  1821 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1822 ;;
  1823 ;; *************** function _main *****************
  1824 ;; Defined at:
  1825 ;;		line 49 in file "main.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  data_to_send    1   10[BANK1 ] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : B1F/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1840 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1841 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1842 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1843 ;;Total ram usage:        2 bytes
  1844 ;; Hardware stack levels required when called:   11
  1845 ;; This function calls:
  1846 ;;		_LIN_Master_Initialize
  1847 ;;		_LIN_handler
  1848 ;;		_LIN_queuePacket
  1849 ;;		_SYSTEM_Initialize
  1850 ;;		_processLIN
  1851 ;; This function is called by:
  1852 ;;		Startup code after reset
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           
  1857                           ;psect for function _main
  1858  056F                     _main:	
  1859                           
  1860                           ;main.c: 52: SYSTEM_Initialize();
  1861                           
  1862                           ;incstack = 0
  1863                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1864  056F  3186  2638  3185   	fcall	_SYSTEM_Initialize
  1865                           
  1866                           ;main.c: 70: uint8_t data_to_send = 0x34;
  1867  0572  3034               	movlw	52
  1868  0573  0021               	movlb	1	; select bank1
  1869  0574  00CD               	movwf	??_main^(0+128)
  1870  0575  084D               	movf	??_main^(0+128),w
  1871  0576  00CE               	movwf	main@data_to_send^(0+128)
  1872                           
  1873                           ;main.c: 72: LIN_Master_Initialize();
  1874  0577  3186  266C  3185   	fcall	_LIN_Master_Initialize
  1875  057A                     l2800:	
  1876                           ;main.c: 73: while (1)
  1877                           
  1878                           
  1879                           ;main.c: 74: {
  1880                           ;main.c: 76: LIN_queuePacket(0, &data_to_send);
  1881  057A  30CE               	movlw	(low (main@data_to_send| 0))& (0+255)
  1882  057B  0021               	movlb	1	; select bank1
  1883  057C  00CD               	movwf	??_main^(0+128)
  1884  057D  084D               	movf	??_main^(0+128),w
  1885  057E  0020               	movlb	0	; select bank0
  1886  057F  00D2               	movwf	LIN_queuePacket@data
  1887  0580  3000               	movlw	0
  1888  0581  3180  2049  3185   	fcall	_LIN_queuePacket
  1889                           
  1890                           ;main.c: 77: LIN_handler();
  1891  0584  3183  2328  3185   	fcall	_LIN_handler
  1892                           
  1893                           ;main.c: 78: processLIN();
  1894  0587  3185  25F3  3185   	fcall	_processLIN
  1895  058A  2D7A               	goto	l2800
  1896  058B                     __end_of_main:	
  1897                           
  1898                           	psect	text1
  1899  0638                     __ptext1:	
  1900 ;; *************** function _SYSTEM_Initialize *****************
  1901 ;; Defined at:
  1902 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, status,0, pclath, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1920 ;;Total ram usage:        0 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; Hardware stack levels required when called:   10
  1923 ;; This function calls:
  1924 ;;		_EUSART_Initialize
  1925 ;;		_LIN_Master_Initialize
  1926 ;;		_OSCILLATOR_Initialize
  1927 ;;		_PIN_MANAGER_Initialize
  1928 ;;		_TMR2_Initialize
  1929 ;;		_WDT_Initialize
  1930 ;; This function is called by:
  1931 ;;		_main
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function _SYSTEM_Initialize
  1937  0638                     _SYSTEM_Initialize:	
  1938                           
  1939                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  1940                           
  1941                           ;incstack = 0
  1942                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1943  0638  3186  2622  3186   	fcall	_PIN_MANAGER_Initialize
  1944                           
  1945                           ;mcc.c: 54: OSCILLATOR_Initialize();
  1946  063B  3186  269F  3186   	fcall	_OSCILLATOR_Initialize
  1947                           
  1948                           ;mcc.c: 55: WDT_Initialize();
  1949  063E  3186  26D3  3186   	fcall	_WDT_Initialize
  1950                           
  1951                           ;mcc.c: 56: TMR2_Initialize();
  1952  0641  3186  264A  3186   	fcall	_TMR2_Initialize
  1953                           
  1954                           ;mcc.c: 57: EUSART_Initialize();
  1955  0644  3183  2398  3186   	fcall	_EUSART_Initialize
  1956                           
  1957                           ;mcc.c: 58: LIN_Master_Initialize();
  1958  0647  3186  266C         	fcall	_LIN_Master_Initialize
  1959  0649  0008               	return
  1960  064A                     __end_of_SYSTEM_Initialize:	
  1961                           
  1962                           	psect	text2
  1963  06D3                     __ptext2:	
  1964 ;; *************** function _WDT_Initialize *****************
  1965 ;; Defined at:
  1966 ;;		line 71 in file "mcc_generated_files/mcc.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    6
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_SYSTEM_Initialize
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function _WDT_Initialize
  1996  06D3                     _WDT_Initialize:	
  1997                           
  1998                           ;mcc.c: 74: WDTCON = 0x16;
  1999                           
  2000                           ;incstack = 0
  2001                           ; Regs used in _WDT_Initialize: [wreg]
  2002  06D3  3016               	movlw	22
  2003  06D4  0021               	movlb	1	; select bank1
  2004  06D5  0097               	movwf	23	;volatile
  2005  06D6  0008               	return
  2006  06D7                     __end_of_WDT_Initialize:	
  2007                           
  2008                           	psect	text3
  2009  064A                     __ptext3:	
  2010 ;; *************** function _TMR2_Initialize *****************
  2011 ;; Defined at:
  2012 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0, pclath, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2030 ;;Total ram usage:        0 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    7
  2033 ;; This function calls:
  2034 ;;		_TMR2_SetInterruptHandler
  2035 ;; This function is called by:
  2036 ;;		_SYSTEM_Initialize
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function _TMR2_Initialize
  2042  064A                     _TMR2_Initialize:	
  2043                           
  2044                           ;tmr2.c: 69: PR2 = 0xF9;
  2045                           
  2046                           ;incstack = 0
  2047                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2048  064A  30F9               	movlw	249
  2049  064B  0020               	movlb	0	; select bank0
  2050  064C  009B               	movwf	27	;volatile
  2051                           
  2052                           ;tmr2.c: 72: TMR2 = 0x00;
  2053  064D  019A               	clrf	26	;volatile
  2054                           
  2055                           ;tmr2.c: 75: PIR1bits.TMR2IF = 0;
  2056  064E  1091               	bcf	17,1	;volatile
  2057                           
  2058                           ;tmr2.c: 78: PIE1bits.TMR2IE = 1;
  2059  064F  0021               	movlb	1	; select bank1
  2060  0650  1491               	bsf	17,1	;volatile
  2061                           
  2062                           ;tmr2.c: 81: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  2063  0651  30F4               	movlw	low _TMR2_DefaultInterruptHandler
  2064  0652  0020               	movlb	0	; select bank0
  2065  0653  00CC               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2066  0654  3006               	movlw	high _TMR2_DefaultInterruptHandler
  2067  0655  00CD               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2068  0656  3186  26AC         	fcall	_TMR2_SetInterruptHandler
  2069                           
  2070                           ;tmr2.c: 84: T2CON = 0x1D;
  2071  0658  301D               	movlw	29
  2072  0659  0020               	movlb	0	; select bank0
  2073  065A  009C               	movwf	28	;volatile
  2074  065B  0008               	return
  2075  065C                     __end_of_TMR2_Initialize:	
  2076                           
  2077                           	psect	text4
  2078  0622                     __ptext4:	
  2079 ;; *************** function _PIN_MANAGER_Initialize *****************
  2080 ;; Defined at:
  2081 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, status,2
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2099 ;;Total ram usage:        0 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    6
  2102 ;; This function calls:
  2103 ;;		Nothing
  2104 ;; This function is called by:
  2105 ;;		_SYSTEM_Initialize
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           
  2110                           ;psect for function _PIN_MANAGER_Initialize
  2111  0622                     _PIN_MANAGER_Initialize:	
  2112                           
  2113                           ;pin_manager.c: 62: LATA = 0x00;
  2114                           
  2115                           ;incstack = 0
  2116                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2117  0622  0022               	movlb	2	; select bank2
  2118  0623  018C               	clrf	12	;volatile
  2119                           
  2120                           ;pin_manager.c: 63: LATC = 0x00;
  2121  0624  018E               	clrf	14	;volatile
  2122                           
  2123                           ;pin_manager.c: 68: TRISA = 0x3F;
  2124  0625  303F               	movlw	63
  2125  0626  0021               	movlb	1	; select bank1
  2126  0627  008C               	movwf	12	;volatile
  2127                           
  2128                           ;pin_manager.c: 69: TRISC = 0x3F;
  2129  0628  303F               	movlw	63
  2130  0629  008E               	movwf	14	;volatile
  2131                           
  2132                           ;pin_manager.c: 74: ANSELC = 0x0F;
  2133  062A  300F               	movlw	15
  2134  062B  0023               	movlb	3	; select bank3
  2135  062C  008E               	movwf	14	;volatile
  2136                           
  2137                           ;pin_manager.c: 75: ANSELA = 0x17;
  2138  062D  3017               	movlw	23
  2139  062E  008C               	movwf	12	;volatile
  2140                           
  2141                           ;pin_manager.c: 80: WPUA = 0x00;
  2142  062F  0024               	movlb	4	; select bank4
  2143  0630  018C               	clrf	12	;volatile
  2144                           
  2145                           ;pin_manager.c: 81: WPUC = 0x00;
  2146  0631  018E               	clrf	14	;volatile
  2147                           
  2148                           ;pin_manager.c: 82: OPTION_REGbits.nWPUEN = 1;
  2149  0632  0021               	movlb	1	; select bank1
  2150  0633  1795               	bsf	21,7	;volatile
  2151                           
  2152                           ;pin_manager.c: 89: APFCON0 = 0x00;
  2153  0634  0022               	movlb	2	; select bank2
  2154  0635  019D               	clrf	29	;volatile
  2155                           
  2156                           ;pin_manager.c: 90: APFCON1 = 0x00;
  2157  0636  019E               	clrf	30	;volatile
  2158  0637  0008               	return
  2159  0638                     __end_of_PIN_MANAGER_Initialize:	
  2160                           
  2161                           	psect	text5
  2162  069F                     __ptext5:	
  2163 ;; *************** function _OSCILLATOR_Initialize *****************
  2164 ;; Defined at:
  2165 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;		None
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2183 ;;Total ram usage:        0 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    6
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_SYSTEM_Initialize
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           
  2194                           ;psect for function _OSCILLATOR_Initialize
  2195  069F                     _OSCILLATOR_Initialize:	
  2196                           
  2197                           ;mcc.c: 64: OSCCON = 0x7A;
  2198                           
  2199                           ;incstack = 0
  2200                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2201  069F  307A               	movlw	122
  2202  06A0  0021               	movlb	1	; select bank1
  2203  06A1  0099               	movwf	25	;volatile
  2204                           
  2205                           ;mcc.c: 66: OSCTUNE = 0x00;
  2206  06A2  0198               	clrf	24	;volatile
  2207                           
  2208                           ;mcc.c: 68: BORCON = 0x00;
  2209  06A3  0022               	movlb	2	; select bank2
  2210  06A4  0196               	clrf	22	;volatile
  2211  06A5  0008               	return
  2212  06A6                     __end_of_OSCILLATOR_Initialize:	
  2213                           
  2214                           	psect	text6
  2215  066C                     __ptext6:	
  2216 ;; *************** function _LIN_Master_Initialize *****************
  2217 ;; Defined at:
  2218 ;;		line 43 in file "mcc_generated_files/LINDrivers/lin_app.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;		None
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, status,2, status,0, pclath, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2236 ;;Total ram usage:        0 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    9
  2239 ;; This function calls:
  2240 ;;		_LIN_init
  2241 ;; This function is called by:
  2242 ;;		_SYSTEM_Initialize
  2243 ;;		_main
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           
  2248                           ;psect for function _LIN_Master_Initialize
  2249  066C                     _LIN_Master_Initialize:	
  2250                           
  2251                           ;lin_app.c: 45: LIN_init((sizeof(scheduleTable)/sizeof(lin_cmd_packet_t)), scheduleTable
      +                          , processLIN);
  2252                           
  2253                           ;incstack = 0
  2254                           ; Regs used in _LIN_Master_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2255  066C  30DB               	movlw	low (_scheduleTable| (0+32768))
  2256  066D  0020               	movlb	0	; select bank0
  2257  066E  00CE               	movwf	LIN_init@table
  2258  066F  3085               	movlw	high (_scheduleTable| (0+32768))
  2259  0670  00CF               	movwf	LIN_init@table+1
  2260  0671  30F3               	movlw	low _processLIN
  2261  0672  00D0               	movwf	LIN_init@processData
  2262  0673  3005               	movlw	high _processLIN
  2263  0674  00D1               	movwf	LIN_init@processData+1
  2264  0675  3004               	movlw	4
  2265  0676  3185  25C1         	fcall	_LIN_init
  2266  0678  0008               	return
  2267  0679                     __end_of_LIN_Master_Initialize:	
  2268                           
  2269                           	psect	text7
  2270  05C1                     __ptext7:	
  2271 ;; *************** function _LIN_init *****************
  2272 ;; Defined at:
  2273 ;;		line 60 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  tableLength     1    wreg     unsigned char 
  2276 ;;  table           2   10[BANK0 ] const PTR const struct .
  2277 ;;		 -> scheduleTable(24), 
  2278 ;;  processData     2   12[BANK0 ] PTR FTN()void 
  2279 ;;		 -> processLIN(1), 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  tableLength     1   15[BANK0 ] unsigned char 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0, pclath, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2291 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2292 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2293 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2294 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2295 ;;Total ram usage:        6 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    8
  2298 ;; This function calls:
  2299 ;;		_LIN_setTimerHandler
  2300 ;;		_LIN_startPeriod
  2301 ;;		_LIN_stopTimer
  2302 ;; This function is called by:
  2303 ;;		_LIN_Master_Initialize
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           
  2308                           ;psect for function _LIN_init
  2309  05C1                     _LIN_init:	
  2310                           
  2311                           ;incstack = 0
  2312                           ; Regs used in _LIN_init: [wreg+status,2+status,0+pclath+cstack]
  2313                           ;LIN_init@tableLength stored from wreg
  2314  05C1  0020               	movlb	0	; select bank0
  2315  05C2  00D3               	movwf	LIN_init@tableLength
  2316                           
  2317                           ;lin_master.c: 61: schedule = table;
  2318  05C3  084F               	movf	LIN_init@table+1,w
  2319  05C4  00DC               	movwf	_schedule+1
  2320  05C5  084E               	movf	LIN_init@table,w
  2321  05C6  00DB               	movwf	_schedule
  2322                           
  2323                           ;lin_master.c: 62: scheduleLength = tableLength;
  2324  05C7  0853               	movf	LIN_init@tableLength,w
  2325  05C8  00D2               	movwf	??_LIN_init
  2326  05C9  0852               	movf	??_LIN_init,w
  2327  05CA  00E5               	movwf	_scheduleLength
  2328                           
  2329                           ;lin_master.c: 63: LIN_processData = processData;
  2330  05CB  0851               	movf	LIN_init@processData+1,w
  2331  05CC  0021               	movlb	1	; select bank1
  2332  05CD  00D0               	movwf	(_LIN_processData+1)^(0+128)
  2333  05CE  0020               	movlb	0	; select bank0
  2334  05CF  0850               	movf	LIN_init@processData,w
  2335  05D0  0021               	movlb	1	; select bank1
  2336  05D1  00CF               	movwf	_LIN_processData^(0+128)
  2337                           
  2338                           ;lin_master.c: 64: LIN_stopTimer();
  2339  05D2  3186  26D7  3185   	fcall	_LIN_stopTimer
  2340                           
  2341                           ;lin_master.c: 65: LIN_setTimerHandler();
  2342  05D5  3186  2697  3185   	fcall	_LIN_setTimerHandler
  2343                           
  2344                           ;lin_master.c: 67: LIN_startPeriod();
  2345  05D8  3186  26DB         	fcall	_LIN_startPeriod
  2346  05DA  0008               	return
  2347  05DB                     __end_of_LIN_init:	
  2348                           
  2349                           	psect	text8
  2350  06D7                     __ptext8:	
  2351 ;; *************** function _LIN_stopTimer *****************
  2352 ;; Defined at:
  2353 ;;		line 268 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		status,2
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;Total ram usage:        0 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    6
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_LIN_init
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           
  2382                           ;psect for function _LIN_stopTimer
  2383  06D7                     _LIN_stopTimer:	
  2384                           
  2385                           ;lin_master.c: 270: LIN_timerCallBack = 0;
  2386                           
  2387                           ;incstack = 0
  2388                           ; Regs used in _LIN_stopTimer: [status,2]
  2389  06D7  0020               	movlb	0	; select bank0
  2390  06D8  01AC               	clrf	_LIN_timerCallBack	;volatile
  2391                           
  2392                           ;lin_master.c: 271: LIN_timerRunning = 0;
  2393  06D9  01AD               	clrf	_LIN_timerRunning
  2394  06DA  0008               	return
  2395  06DB                     __end_of_LIN_stopTimer:	
  2396                           
  2397                           	psect	text9
  2398  06DB                     __ptext9:	
  2399 ;; *************** function _LIN_startPeriod *****************
  2400 ;; Defined at:
  2401 ;;		line 274 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		None
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2419 ;;Total ram usage:        0 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    6
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_LIN_init
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           
  2430                           ;psect for function _LIN_startPeriod
  2431  06DB                     _LIN_startPeriod:	
  2432                           
  2433                           ;lin_master.c: 275: LIN_enablePeriodTx = 1;
  2434                           
  2435                           ;incstack = 0
  2436                           ; Regs used in _LIN_startPeriod: []
  2437  06DB  0021               	movlb	1	; select bank1
  2438  06DC  01D5               	clrf	_LIN_enablePeriodTx^(0+128)
  2439  06DD  0AD5               	incf	_LIN_enablePeriodTx^(0+128),f
  2440  06DE  0008               	return
  2441  06DF                     __end_of_LIN_startPeriod:	
  2442                           
  2443                           	psect	text10
  2444  0697                     __ptext10:	
  2445 ;; *************** function _LIN_setTimerHandler *****************
  2446 ;; Defined at:
  2447 ;;		line 264 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;		None
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0, pclath, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2465 ;;Total ram usage:        0 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    7
  2468 ;; This function calls:
  2469 ;;		_TMR2_SetInterruptHandler
  2470 ;; This function is called by:
  2471 ;;		_LIN_init
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           
  2476                           ;psect for function _LIN_setTimerHandler
  2477  0697                     _LIN_setTimerHandler:	
  2478                           
  2479                           ;lin_master.c: 265: TMR2_SetInterruptHandler(LIN_timerHandler);
  2480                           
  2481                           ;incstack = 0
  2482                           ; Regs used in _LIN_setTimerHandler: [wreg+status,2+status,0+pclath+cstack]
  2483  0697  3033               	movlw	low _LIN_timerHandler
  2484  0698  0020               	movlb	0	; select bank0
  2485  0699  00CC               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2486  069A  3005               	movlw	high _LIN_timerHandler
  2487  069B  00CD               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2488  069C  3186  26AC         	fcall	_TMR2_SetInterruptHandler
  2489  069E  0008               	return
  2490  069F                     __end_of_LIN_setTimerHandler:	
  2491                           
  2492                           	psect	text11
  2493  06AC                     __ptext11:	
  2494 ;; *************** function _TMR2_SetInterruptHandler *****************
  2495 ;; Defined at:
  2496 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  InterruptHan    2    8[BANK0 ] PTR FTN()void 
  2499 ;;		 -> LIN_timerHandler(1), TMR2_DefaultInterruptHandler(1), 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;		None
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2511 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2514 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2515 ;;Total ram usage:        2 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    6
  2518 ;; This function calls:
  2519 ;;		Nothing
  2520 ;; This function is called by:
  2521 ;;		_TMR2_Initialize
  2522 ;;		_LIN_setTimerHandler
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _TMR2_SetInterruptHandler
  2528  06AC                     _TMR2_SetInterruptHandler:	
  2529                           
  2530                           ;tmr2.c: 133: TMR2_InterruptHandler = InterruptHandler;
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2534  06AC  0020               	movlb	0	; select bank0
  2535  06AD  084D               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2536  06AE  00DE               	movwf	_TMR2_InterruptHandler+1
  2537  06AF  084C               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2538  06B0  00DD               	movwf	_TMR2_InterruptHandler
  2539  06B1  0008               	return
  2540  06B2                     __end_of_TMR2_SetInterruptHandler:	
  2541                           
  2542                           	psect	text12
  2543  0398                     __ptext12:	
  2544 ;; *************** function _EUSART_Initialize *****************
  2545 ;; Defined at:
  2546 ;;		line 85 in file "mcc_generated_files/eusart.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;		None
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0, pclath, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2562 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2563 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2564 ;;Total ram usage:        1 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    7
  2567 ;; This function calls:
  2568 ;;		_EUSART_SetErrorHandler
  2569 ;;		_EUSART_SetFramingErrorHandler
  2570 ;;		_EUSART_SetOverrunErrorHandler
  2571 ;;		_EUSART_SetRxInterruptHandler
  2572 ;;		_EUSART_SetTxInterruptHandler
  2573 ;; This function is called by:
  2574 ;;		_SYSTEM_Initialize
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           
  2579                           ;psect for function _EUSART_Initialize
  2580  0398                     _EUSART_Initialize:	
  2581                           
  2582                           ;eusart.c: 88: PIE1bits.RCIE = 0;
  2583                           
  2584                           ;incstack = 0
  2585                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2586  0398  0021               	movlb	1	; select bank1
  2587  0399  1291               	bcf	17,5	;volatile
  2588                           
  2589                           ;eusart.c: 89: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  2590  039A  30DC               	movlw	low _EUSART_Receive_ISR
  2591  039B  0020               	movlb	0	; select bank0
  2592  039C  00CC               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  2593  039D  3003               	movlw	high _EUSART_Receive_ISR
  2594  039E  00CD               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  2595  039F  3186  26B8  3183   	fcall	_EUSART_SetRxInterruptHandler
  2596                           
  2597                           ;eusart.c: 90: PIE1bits.TXIE = 0;
  2598  03A2  0021               	movlb	1	; select bank1
  2599  03A3  1211               	bcf	17,4	;volatile
  2600                           
  2601                           ;eusart.c: 91: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  2602  03A4  3052               	movlw	low _EUSART_Transmit_ISR
  2603  03A5  0020               	movlb	0	; select bank0
  2604  03A6  00CC               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  2605  03A7  3005               	movlw	high _EUSART_Transmit_ISR
  2606  03A8  00CD               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  2607  03A9  3186  26B2  3183   	fcall	_EUSART_SetTxInterruptHandler
  2608                           
  2609                           ;eusart.c: 95: BAUDCON = 0x08;
  2610  03AC  3008               	movlw	8
  2611  03AD  0023               	movlb	3	; select bank3
  2612  03AE  009F               	movwf	31	;volatile
  2613                           
  2614                           ;eusart.c: 98: RCSTA = 0x90;
  2615  03AF  3090               	movlw	144
  2616  03B0  009D               	movwf	29	;volatile
  2617                           
  2618                           ;eusart.c: 101: TXSTA = 0x24;
  2619  03B1  3024               	movlw	36
  2620  03B2  009E               	movwf	30	;volatile
  2621                           
  2622                           ;eusart.c: 104: SPBRGL = 0xA0;
  2623  03B3  30A0               	movlw	160
  2624  03B4  009B               	movwf	27	;volatile
  2625                           
  2626                           ;eusart.c: 107: SPBRGH = 0x01;
  2627  03B5  3001               	movlw	1
  2628  03B6  009C               	movwf	28	;volatile
  2629                           
  2630                           ;eusart.c: 110: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  2631  03B7  30F5               	movlw	low _EUSART_DefaultFramingErrorHandler
  2632  03B8  0020               	movlb	0	; select bank0
  2633  03B9  00CC               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  2634  03BA  3006               	movlw	high _EUSART_DefaultFramingErrorHandler
  2635  03BB  00CD               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  2636  03BC  3186  26BE  3183   	fcall	_EUSART_SetFramingErrorHandler
  2637                           
  2638                           ;eusart.c: 111: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  2639  03BF  30E3               	movlw	low _EUSART_DefaultOverrunErrorHandler
  2640  03C0  0020               	movlb	0	; select bank0
  2641  03C1  00CC               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  2642  03C2  3006               	movlw	high _EUSART_DefaultOverrunErrorHandler
  2643  03C3  00CD               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  2644  03C4  3186  2685  3183   	fcall	_EUSART_SetOverrunErrorHandler
  2645                           
  2646                           ;eusart.c: 112: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  2647  03C7  30F0               	movlw	low _EUSART_DefaultErrorHandler
  2648  03C8  0020               	movlb	0	; select bank0
  2649  03C9  00CC               	movwf	EUSART_SetErrorHandler@interruptHandler
  2650  03CA  3006               	movlw	high _EUSART_DefaultErrorHandler
  2651  03CB  00CD               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  2652  03CC  3186  268E         	fcall	_EUSART_SetErrorHandler
  2653                           
  2654                           ;eusart.c: 114: eusartRxLastError.status = 0;
  2655  03CE  0020               	movlb	0	; select bank0
  2656  03CF  01B0               	clrf	_eusartRxLastError	;volatile
  2657                           
  2658                           ;eusart.c: 117: eusartTxHead = 0;
  2659  03D0  01B5               	clrf	_eusartTxHead	;volatile
  2660                           
  2661                           ;eusart.c: 118: eusartTxTail = 0;
  2662  03D1  01B4               	clrf	_eusartTxTail	;volatile
  2663                           
  2664                           ;eusart.c: 119: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  2665  03D2  3008               	movlw	8
  2666  03D3  00CE               	movwf	??_EUSART_Initialize
  2667  03D4  084E               	movf	??_EUSART_Initialize,w
  2668  03D5  00E6               	movwf	_eusartTxBufferRemaining	;volatile
  2669                           
  2670                           ;eusart.c: 121: eusartRxHead = 0;
  2671  03D6  01B3               	clrf	_eusartRxHead	;volatile
  2672                           
  2673                           ;eusart.c: 122: eusartRxTail = 0;
  2674  03D7  01B2               	clrf	_eusartRxTail	;volatile
  2675                           
  2676                           ;eusart.c: 123: eusartRxCount = 0;
  2677  03D8  01B1               	clrf	_eusartRxCount	;volatile
  2678                           
  2679                           ;eusart.c: 126: PIE1bits.RCIE = 1;
  2680  03D9  0021               	movlb	1	; select bank1
  2681  03DA  1691               	bsf	17,5	;volatile
  2682  03DB  0008               	return
  2683  03DC                     __end_of_EUSART_Initialize:	
  2684                           
  2685                           	psect	text13
  2686  06B2                     __ptext13:	
  2687 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  2688 ;; Defined at:
  2689 ;;		line 273 in file "mcc_generated_files/eusart.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  2692 ;;		 -> EUSART_Transmit_ISR(1), 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2704 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2707 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2708 ;;Total ram usage:        2 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    6
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_EUSART_Initialize
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           
  2719                           ;psect for function _EUSART_SetTxInterruptHandler
  2720  06B2                     _EUSART_SetTxInterruptHandler:	
  2721                           
  2722                           ;eusart.c: 274: EUSART_TxDefaultInterruptHandler = interruptHandler;
  2723                           
  2724                           ;incstack = 0
  2725                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  2726  06B2  0020               	movlb	0	; select bank0
  2727  06B3  084D               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  2728  06B4  00E4               	movwf	_EUSART_TxDefaultInterruptHandler+1
  2729  06B5  084C               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  2730  06B6  00E3               	movwf	_EUSART_TxDefaultInterruptHandler
  2731  06B7  0008               	return
  2732  06B8                     __end_of_EUSART_SetTxInterruptHandler:	
  2733                           
  2734                           	psect	text14
  2735  06B8                     __ptext14:	
  2736 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  2737 ;; Defined at:
  2738 ;;		line 277 in file "mcc_generated_files/eusart.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  2741 ;;		 -> EUSART_Receive_ISR(1), 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2753 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2756 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2757 ;;Total ram usage:        2 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    6
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_EUSART_Initialize
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           
  2768                           ;psect for function _EUSART_SetRxInterruptHandler
  2769  06B8                     _EUSART_SetRxInterruptHandler:	
  2770                           
  2771                           ;eusart.c: 278: EUSART_RxDefaultInterruptHandler = interruptHandler;
  2772                           
  2773                           ;incstack = 0
  2774                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  2775  06B8  0020               	movlb	0	; select bank0
  2776  06B9  084D               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  2777  06BA  00E2               	movwf	_EUSART_RxDefaultInterruptHandler+1
  2778  06BB  084C               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  2779  06BC  00E1               	movwf	_EUSART_RxDefaultInterruptHandler
  2780  06BD  0008               	return
  2781  06BE                     __end_of_EUSART_SetRxInterruptHandler:	
  2782                           
  2783                           	psect	text15
  2784  0685                     __ptext15:	
  2785 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2786 ;; Defined at:
  2787 ;;		line 265 in file "mcc_generated_files/eusart.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  2790 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2802 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2805 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2806 ;;Total ram usage:        2 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; Hardware stack levels required when called:    6
  2809 ;; This function calls:
  2810 ;;		Nothing
  2811 ;; This function is called by:
  2812 ;;		_EUSART_Initialize
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           
  2817                           ;psect for function _EUSART_SetOverrunErrorHandler
  2818  0685                     _EUSART_SetOverrunErrorHandler:	
  2819                           
  2820                           ;eusart.c: 266: EUSART_OverrunErrorHandler = interruptHandler;
  2821                           
  2822                           ;incstack = 0
  2823                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2824  0685  0020               	movlb	0	; select bank0
  2825  0686  084D               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  2826  0687  0021               	movlb	1	; select bank1
  2827  0688  00D4               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  2828  0689  0020               	movlb	0	; select bank0
  2829  068A  084C               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  2830  068B  0021               	movlb	1	; select bank1
  2831  068C  00D3               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  2832  068D  0008               	return
  2833  068E                     __end_of_EUSART_SetOverrunErrorHandler:	
  2834                           
  2835                           	psect	text16
  2836  06BE                     __ptext16:	
  2837 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2838 ;; Defined at:
  2839 ;;		line 261 in file "mcc_generated_files/eusart.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  2842 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2854 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2857 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2858 ;;Total ram usage:        2 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    6
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_EUSART_Initialize
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           
  2869                           ;psect for function _EUSART_SetFramingErrorHandler
  2870  06BE                     _EUSART_SetFramingErrorHandler:	
  2871                           
  2872                           ;eusart.c: 262: EUSART_FramingErrorHandler = interruptHandler;
  2873                           
  2874                           ;incstack = 0
  2875                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2876  06BE  0020               	movlb	0	; select bank0
  2877  06BF  084D               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  2878  06C0  00E0               	movwf	_EUSART_FramingErrorHandler+1
  2879  06C1  084C               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  2880  06C2  00DF               	movwf	_EUSART_FramingErrorHandler
  2881  06C3  0008               	return
  2882  06C4                     __end_of_EUSART_SetFramingErrorHandler:	
  2883                           
  2884                           	psect	text17
  2885  068E                     __ptext17:	
  2886 ;; *************** function _EUSART_SetErrorHandler *****************
  2887 ;; Defined at:
  2888 ;;		line 269 in file "mcc_generated_files/eusart.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  2891 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      void 
  2896 ;; Registers used:
  2897 ;;		wreg
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2903 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2906 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2907 ;;Total ram usage:        2 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    6
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_EUSART_Initialize
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           
  2918                           ;psect for function _EUSART_SetErrorHandler
  2919  068E                     _EUSART_SetErrorHandler:	
  2920                           
  2921                           ;eusart.c: 270: EUSART_ErrorHandler = interruptHandler;
  2922                           
  2923                           ;incstack = 0
  2924                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2925  068E  0020               	movlb	0	; select bank0
  2926  068F  084D               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  2927  0690  0021               	movlb	1	; select bank1
  2928  0691  00D2               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  2929  0692  0020               	movlb	0	; select bank0
  2930  0693  084C               	movf	EUSART_SetErrorHandler@interruptHandler,w
  2931  0694  0021               	movlb	1	; select bank1
  2932  0695  00D1               	movwf	_EUSART_ErrorHandler^(0+128)
  2933  0696  0008               	return
  2934  0697                     __end_of_EUSART_SetErrorHandler:	
  2935                           
  2936                           	psect	text18
  2937  0049                     __ptext18:	
  2938 ;; *************** function _LIN_queuePacket *****************
  2939 ;; Defined at:
  2940 ;;		line 70 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  cmd             1    wreg     unsigned char 
  2943 ;;  data            1   14[BANK0 ] PTR unsigned char 
  2944 ;;		 -> main@data_to_send(1), SIGNAL_Data(1), LFRX_Data(8), RSSI_Data(1), 
  2945 ;;		 -> UNLOCK_Data(1), 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  cmd             1   19[BANK0 ] unsigned char 
  2948 ;;  i               1   20[BANK0 ] unsigned char 
  2949 ;;  tempSchedule    2   21[BANK0 ] PTR const struct .
  2950 ;;		 -> ROM(8192), scheduleTable(24), 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2960 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2961 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2962 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2963 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2964 ;;Total ram usage:        9 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    7
  2967 ;; This function calls:
  2968 ;;		_LIN_calcParity
  2969 ;;		_LIN_getChecksum
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           
  2976                           ;psect for function _LIN_queuePacket
  2977  0049                     _LIN_queuePacket:	
  2978                           
  2979                           ;incstack = 0
  2980                           ; Regs used in _LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2981                           ;LIN_queuePacket@cmd stored from wreg
  2982  0049  0020               	movlb	0	; select bank0
  2983  004A  00D7               	movwf	LIN_queuePacket@cmd
  2984                           
  2985                           ;lin_master.c: 71: const lin_cmd_packet_t* tempSchedule = schedule;
  2986  004B  085C               	movf	_schedule+1,w
  2987  004C  00DA               	movwf	LIN_queuePacket@tempSchedule+1
  2988  004D  085B               	movf	_schedule,w
  2989  004E  00D9               	movwf	LIN_queuePacket@tempSchedule
  2990                           
  2991                           ;lin_master.c: 73: for(uint8_t i = 0; i < scheduleLength; i++){
  2992  004F  01D8               	clrf	LIN_queuePacket@i
  2993  0050                     l2310:	
  2994  0050  0865               	movf	_scheduleLength,w
  2995  0051  0258               	subwf	LIN_queuePacket@i,w
  2996  0052  1803               	btfsc	3,0
  2997  0053  2865               	goto	l2312
  2998                           
  2999                           ;lin_master.c: 74: if(cmd == tempSchedule->cmd){
  3000  0054  0859               	movf	LIN_queuePacket@tempSchedule,w
  3001  0055  0084               	movwf	4
  3002  0056  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3003  0057  0085               	movwf	5
  3004  0058  0800               	movf	0,w	;code access
  3005  0059  0657               	xorwf	LIN_queuePacket@cmd,w
  3006  005A  1903               	btfsc	3,2
  3007  005B  2865               	goto	l2312
  3008                           
  3009                           ;lin_master.c: 76: }
  3010                           ;lin_master.c: 77: tempSchedule++;
  3011                           
  3012                           ;lin_master.c: 75: break;
  3013  005C  3006               	movlw	6
  3014  005D  07D9               	addwf	LIN_queuePacket@tempSchedule,f
  3015  005E  3000               	movlw	0
  3016  005F  3DDA               	addwfc	LIN_queuePacket@tempSchedule+1,f
  3017  0060  3001               	movlw	1
  3018  0061  00D3               	movwf	??_LIN_queuePacket
  3019  0062  0853               	movf	??_LIN_queuePacket,w
  3020  0063  07D8               	addwf	LIN_queuePacket@i,f
  3021  0064  2850               	goto	l2310
  3022  0065                     l2312:	
  3023                           
  3024                           ;lin_master.c: 78: }
  3025                           ;lin_master.c: 81: LIN_packet.PID = LIN_calcParity(tempSchedule->cmd);
  3026  0065  0859               	movf	LIN_queuePacket@tempSchedule,w
  3027  0066  0084               	movwf	4
  3028  0067  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3029  0068  0085               	movwf	5
  3030  0069  0800               	movf	0,w	;code access
  3031  006A  3181  21B7  3180   	fcall	_LIN_calcParity
  3032  006D  0020               	movlb	0	; select bank0
  3033  006E  00D3               	movwf	??_LIN_queuePacket
  3034  006F  0853               	movf	??_LIN_queuePacket,w
  3035  0070  00B6               	movwf	_LIN_packet
  3036                           
  3037                           ;lin_master.c: 83: if(tempSchedule->type == TRANSMIT){
  3038  0071  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3039  0072  00D4               	movwf	??_LIN_queuePacket+1
  3040  0073  0859               	movf	LIN_queuePacket@tempSchedule,w
  3041  0074  00D3               	movwf	??_LIN_queuePacket
  3042  0075  3001               	movlw	1
  3043  0076  0753               	addwf	??_LIN_queuePacket,w
  3044  0077  0084               	movwf	4
  3045  0078  0854               	movf	??_LIN_queuePacket+1,w
  3046  0079  1803               	skipnc
  3047  007A  0A54               	incf	??_LIN_queuePacket+1,w
  3048  007B  0085               	movwf	5
  3049  007C  0012               	moviw fsr0++
  3050  007D  1D03               	btfss	3,2
  3051  007E  28D1               	goto	l2326
  3052                           
  3053                           ;lin_master.c: 86: if(tempSchedule->length > 0){
  3054  007F  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3055  0080  00D4               	movwf	??_LIN_queuePacket+1
  3056  0081  0859               	movf	LIN_queuePacket@tempSchedule,w
  3057  0082  00D3               	movwf	??_LIN_queuePacket
  3058  0083  3002               	movlw	2
  3059  0084  0753               	addwf	??_LIN_queuePacket,w
  3060  0085  0084               	movwf	4
  3061  0086  0854               	movf	??_LIN_queuePacket+1,w
  3062  0087  1803               	skipnc
  3063  0088  0A54               	incf	??_LIN_queuePacket+1,w
  3064  0089  0085               	movwf	5
  3065  008A  0012               	moviw fsr0++
  3066  008B  1903               	btfsc	3,2
  3067  008C  28BD               	goto	l410
  3068                           
  3069                           ;lin_master.c: 87: LIN_packet.length = tempSchedule->length;
  3070  008D  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3071  008E  00D4               	movwf	??_LIN_queuePacket+1
  3072  008F  0859               	movf	LIN_queuePacket@tempSchedule,w
  3073  0090  00D3               	movwf	??_LIN_queuePacket
  3074  0091  3002               	movlw	2
  3075  0092  0753               	addwf	??_LIN_queuePacket,w
  3076  0093  0084               	movwf	4
  3077  0094  0854               	movf	??_LIN_queuePacket+1,w
  3078  0095  1803               	skipnc
  3079  0096  0A54               	incf	??_LIN_queuePacket+1,w
  3080  0097  0085               	movwf	5
  3081  0098  0800               	movf	0,w	;code access
  3082  0099  00D5               	movwf	??_LIN_queuePacket+2
  3083  009A  0855               	movf	??_LIN_queuePacket+2,w
  3084  009B  00C0               	movwf	_LIN_packet+10
  3085                           
  3086                           ;lin_master.c: 88: __builtin_memcpy(LIN_packet.data,data,tempSchedule->length);
  3087  009C  3001               	movlw	1
  3088  009D  3E36               	addlw	(low (_LIN_packet| 0))& (0+255)
  3089  009E  0086               	movwf	6
  3090  009F  0187               	clrf	7
  3091  00A0  0020               	movlb	0	; select bank0
  3092  00A1  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3093  00A2  00D4               	movwf	??_LIN_queuePacket+1
  3094  00A3  0859               	movf	LIN_queuePacket@tempSchedule,w
  3095  00A4  00D3               	movwf	??_LIN_queuePacket
  3096  00A5  3002               	movlw	2
  3097  00A6  0753               	addwf	??_LIN_queuePacket,w
  3098  00A7  0084               	movwf	4
  3099  00A8  0854               	movf	??_LIN_queuePacket+1,w
  3100  00A9  1803               	skipnc
  3101  00AA  0A54               	incf	??_LIN_queuePacket+1,w
  3102  00AB  0085               	movwf	5
  3103  00AC  0800               	movf	0,w	;code access
  3104  00AD  00D5               	movwf	??_LIN_queuePacket+2
  3105  00AE  01D6               	clrf	??_LIN_queuePacket+3
  3106  00AF  0852               	movf	LIN_queuePacket@data,w
  3107  00B0  0084               	movwf	4
  3108  00B1  0185               	clrf	5
  3109  00B2                     u266m0:	
  3110  00B2  0012               	moviw fsr0++
  3111  00B3  001E               	movwi fsr1++
  3112  00B4  3001               	movlw	1
  3113  00B5  02D5               	subwf	??_LIN_queuePacket+2,f
  3114  00B6  3000               	movlw	0
  3115  00B7  3BD6               	subwfb	??_LIN_queuePacket+3,f
  3116  00B8  0856               	movf	??_LIN_queuePacket+3,w
  3117  00B9  0455               	iorwf	??_LIN_queuePacket+2,w
  3118  00BA  1D03               	btfss	3,2
  3119  00BB  28B2               	goto	u266m0
  3120  00BC  28C3               	goto	l2324
  3121  00BD                     l410:	
  3122                           ;lin_master.c: 89: } else {
  3123                           
  3124                           
  3125                           ;lin_master.c: 90: LIN_packet.length = 1;
  3126  00BD  01C0               	clrf	_LIN_packet+10
  3127  00BE  0AC0               	incf	_LIN_packet+10,f
  3128                           
  3129                           ;lin_master.c: 91: LIN_packet.data[0] = 0xAA;
  3130  00BF  30AA               	movlw	170
  3131  00C0  00D3               	movwf	??_LIN_queuePacket
  3132  00C1  0853               	movf	??_LIN_queuePacket,w
  3133  00C2  00B7               	movwf	_LIN_packet+1
  3134  00C3                     l2324:	
  3135                           
  3136                           ;lin_master.c: 92: }
  3137                           ;lin_master.c: 95: LIN_packet.checksum = LIN_getChecksum(LIN_packet.length, LIN_packet.d
      +                          ata);
  3138  00C3  3037               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
  3139  00C4  0020               	movlb	0	; select bank0
  3140  00C5  00D3               	movwf	??_LIN_queuePacket
  3141  00C6  0853               	movf	??_LIN_queuePacket,w
  3142  00C7  00CC               	movwf	LIN_getChecksum@data
  3143  00C8  0840               	movf	_LIN_packet+10,w
  3144  00C9  3184  246E  3180   	fcall	_LIN_getChecksum
  3145  00CC  0020               	movlb	0	; select bank0
  3146  00CD  00D4               	movwf	??_LIN_queuePacket+1
  3147  00CE  0854               	movf	??_LIN_queuePacket+1,w
  3148  00CF  00BF               	movwf	_LIN_packet+9
  3149                           
  3150                           ;lin_master.c: 97: } else {
  3151  00D0  28FC               	goto	l2328
  3152  00D1                     l2326:	
  3153                           
  3154                           ;lin_master.c: 98: LIN_rxPacket.rxLength = tempSchedule->length;
  3155  00D1  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3156  00D2  00D4               	movwf	??_LIN_queuePacket+1
  3157  00D3  0859               	movf	LIN_queuePacket@tempSchedule,w
  3158  00D4  00D3               	movwf	??_LIN_queuePacket
  3159  00D5  3002               	movlw	2
  3160  00D6  0753               	addwf	??_LIN_queuePacket,w
  3161  00D7  0084               	movwf	4
  3162  00D8  0854               	movf	??_LIN_queuePacket+1,w
  3163  00D9  1803               	skipnc
  3164  00DA  0A54               	incf	??_LIN_queuePacket+1,w
  3165  00DB  0085               	movwf	5
  3166  00DC  0800               	movf	0,w	;code access
  3167  00DD  00D5               	movwf	??_LIN_queuePacket+2
  3168  00DE  0855               	movf	??_LIN_queuePacket+2,w
  3169  00DF  0021               	movlb	1	; select bank1
  3170  00E0  00B1               	movwf	(_LIN_rxPacket^(0+128)+1)
  3171                           
  3172                           ;lin_master.c: 99: LIN_rxPacket.cmd = tempSchedule->cmd;
  3173  00E1  0020               	movlb	0	; select bank0
  3174  00E2  0859               	movf	LIN_queuePacket@tempSchedule,w
  3175  00E3  0084               	movwf	4
  3176  00E4  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3177  00E5  0085               	movwf	5
  3178  00E6  0800               	movf	0,w	;code access
  3179  00E7  00D3               	movwf	??_LIN_queuePacket
  3180  00E8  0853               	movf	??_LIN_queuePacket,w
  3181  00E9  0021               	movlb	1	; select bank1
  3182  00EA  00B0               	movwf	_LIN_rxPacket^(0+128)
  3183                           
  3184                           ;lin_master.c: 100: LIN_rxPacket.timeout = tempSchedule->timeout;
  3185  00EB  0020               	movlb	0	; select bank0
  3186  00EC  085A               	movf	LIN_queuePacket@tempSchedule+1,w
  3187  00ED  00D4               	movwf	??_LIN_queuePacket+1
  3188  00EE  0859               	movf	LIN_queuePacket@tempSchedule,w
  3189  00EF  00D3               	movwf	??_LIN_queuePacket
  3190  00F0  3003               	movlw	3
  3191  00F1  0753               	addwf	??_LIN_queuePacket,w
  3192  00F2  0084               	movwf	4
  3193  00F3  0854               	movf	??_LIN_queuePacket+1,w
  3194  00F4  1803               	skipnc
  3195  00F5  0A54               	incf	??_LIN_queuePacket+1,w
  3196  00F6  0085               	movwf	5
  3197  00F7  0800               	movf	0,w	;code access
  3198  00F8  00D5               	movwf	??_LIN_queuePacket+2
  3199  00F9  0855               	movf	??_LIN_queuePacket+2,w
  3200  00FA  0021               	movlb	1	; select bank1
  3201  00FB  00BB               	movwf	(_LIN_rxPacket^(0+128)+11)
  3202  00FC                     l2328:	
  3203                           
  3204                           ;lin_master.c: 101: }
  3205                           ;lin_master.c: 103: LIN_txReady = 1;
  3206  00FC  0020               	movlb	0	; select bank0
  3207  00FD  01AF               	clrf	_LIN_txReady
  3208  00FE  0AAF               	incf	_LIN_txReady,f
  3209  00FF  0008               	return
  3210  0100                     __end_of_LIN_queuePacket:	
  3211                           
  3212                           	psect	text19
  3213  01B7                     __ptext19:	
  3214 ;; *************** function _LIN_calcParity *****************
  3215 ;; Defined at:
  3216 ;;		line 210 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  CMD             1    wreg     unsigned char 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  CMD             1    9[BANK0 ] unsigned char 
  3221 ;;  PID             1   10[BANK0 ] struct .
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      unsigned char 
  3224 ;; Registers used:
  3225 ;;		wreg, status,0
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3232 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3233 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3234 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3235 ;;Total ram usage:        3 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:    6
  3238 ;; This function calls:
  3239 ;;		Nothing
  3240 ;; This function is called by:
  3241 ;;		_LIN_queuePacket
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           
  3246                           ;psect for function _LIN_calcParity
  3247  01B7                     _LIN_calcParity:	
  3248                           
  3249                           ;incstack = 0
  3250                           ; Regs used in _LIN_calcParity: [wreg+status,0]
  3251                           ;LIN_calcParity@CMD stored from wreg
  3252  01B7  0020               	movlb	0	; select bank0
  3253  01B8  00CD               	movwf	LIN_calcParity@CMD
  3254                           
  3255                           ;lin_master.c: 211: lin_pid_t PID;
  3256                           ;lin_master.c: 212: PID.rawPID = CMD;
  3257  01B9  084D               	movf	LIN_calcParity@CMD,w
  3258  01BA  00CC               	movwf	??_LIN_calcParity
  3259  01BB  084C               	movf	??_LIN_calcParity,w
  3260  01BC  00CE               	movwf	LIN_calcParity@PID
  3261                           
  3262                           ;lin_master.c: 217: PID.P0 = PID.ID0 ^ PID.ID1;
  3263  01BD  1CCE               	btfss	LIN_calcParity@PID,1
  3264  01BE  29C1               	goto	u2280
  3265  01BF  3001               	movlw	1
  3266  01C0  29C2               	goto	u2282
  3267  01C1                     u2280:	
  3268  01C1  3000               	movlw	0
  3269  01C2                     u2282:	
  3270  01C2  00CC               	movwf	??_LIN_calcParity
  3271  01C3  1C4E               	btfss	LIN_calcParity@PID,0
  3272  01C4  29C7               	goto	u2290
  3273  01C5  3001               	movlw	1
  3274  01C6  29C8               	goto	u2292
  3275  01C7                     u2290:	
  3276  01C7  3000               	movlw	0
  3277  01C8                     u2292:	
  3278  01C8  064C               	xorwf	??_LIN_calcParity,w
  3279  01C9  1903               	btfsc	3,2
  3280  01CA  29CE               	goto	u2300
  3281  01CB  0020               	movlb	0	; select bank0
  3282  01CC  174E               	bsf	LIN_calcParity@PID,6
  3283  01CD  29D0               	goto	u2314
  3284  01CE                     u2300:	
  3285  01CE  0020               	movlb	0	; select bank0
  3286  01CF  134E               	bcf	LIN_calcParity@PID,6
  3287  01D0                     u2314:	
  3288                           
  3289                           ;lin_master.c: 218: PID.P0 = PID.P0 ^ PID.ID2;
  3290  01D0  1D4E               	btfss	LIN_calcParity@PID,2
  3291  01D1  29D4               	goto	u2320
  3292  01D2  3001               	movlw	1
  3293  01D3  29D5               	goto	u2322
  3294  01D4                     u2320:	
  3295  01D4  3000               	movlw	0
  3296  01D5                     u2322:	
  3297  01D5  00CC               	movwf	??_LIN_calcParity
  3298  01D6  1F4E               	btfss	LIN_calcParity@PID,6
  3299  01D7  29DA               	goto	u2330
  3300  01D8  3001               	movlw	1
  3301  01D9  29DB               	goto	u2332
  3302  01DA                     u2330:	
  3303  01DA  3000               	movlw	0
  3304  01DB                     u2332:	
  3305  01DB  064C               	xorwf	??_LIN_calcParity,w
  3306  01DC  1903               	btfsc	3,2
  3307  01DD  29E1               	goto	u2340
  3308  01DE  0020               	movlb	0	; select bank0
  3309  01DF  174E               	bsf	LIN_calcParity@PID,6
  3310  01E0  29E3               	goto	u2354
  3311  01E1                     u2340:	
  3312  01E1  0020               	movlb	0	; select bank0
  3313  01E2  134E               	bcf	LIN_calcParity@PID,6
  3314  01E3                     u2354:	
  3315                           
  3316                           ;lin_master.c: 219: PID.P0 = PID.P0 ^ PID.ID4;
  3317  01E3  1E4E               	btfss	LIN_calcParity@PID,4
  3318  01E4  29E7               	goto	u2360
  3319  01E5  3001               	movlw	1
  3320  01E6  29E8               	goto	u2362
  3321  01E7                     u2360:	
  3322  01E7  3000               	movlw	0
  3323  01E8                     u2362:	
  3324  01E8  00CC               	movwf	??_LIN_calcParity
  3325  01E9  1F4E               	btfss	LIN_calcParity@PID,6
  3326  01EA  29ED               	goto	u2370
  3327  01EB  3001               	movlw	1
  3328  01EC  29EE               	goto	u2372
  3329  01ED                     u2370:	
  3330  01ED  3000               	movlw	0
  3331  01EE                     u2372:	
  3332  01EE  064C               	xorwf	??_LIN_calcParity,w
  3333  01EF  1903               	btfsc	3,2
  3334  01F0  29F4               	goto	u2380
  3335  01F1  0020               	movlb	0	; select bank0
  3336  01F2  174E               	bsf	LIN_calcParity@PID,6
  3337  01F3  29F6               	goto	u2394
  3338  01F4                     u2380:	
  3339  01F4  0020               	movlb	0	; select bank0
  3340  01F5  134E               	bcf	LIN_calcParity@PID,6
  3341  01F6                     u2394:	
  3342                           
  3343                           ;lin_master.c: 220: PID.P1 = PID.ID1 ^ PID.ID3;
  3344  01F6  1DCE               	btfss	LIN_calcParity@PID,3
  3345  01F7  29FA               	goto	u2400
  3346  01F8  3001               	movlw	1
  3347  01F9  29FB               	goto	u2402
  3348  01FA                     u2400:	
  3349  01FA  3000               	movlw	0
  3350  01FB                     u2402:	
  3351  01FB  00CC               	movwf	??_LIN_calcParity
  3352  01FC  1CCE               	btfss	LIN_calcParity@PID,1
  3353  01FD  2A00               	goto	u2410
  3354  01FE  3001               	movlw	1
  3355  01FF  2A01               	goto	u2412
  3356  0200                     u2410:	
  3357  0200  3000               	movlw	0
  3358  0201                     u2412:	
  3359  0201  064C               	xorwf	??_LIN_calcParity,w
  3360  0202  1903               	btfsc	3,2
  3361  0203  2A07               	goto	u2420
  3362  0204  0020               	movlb	0	; select bank0
  3363  0205  17CE               	bsf	LIN_calcParity@PID,7
  3364  0206  2A09               	goto	u2434
  3365  0207                     u2420:	
  3366  0207  0020               	movlb	0	; select bank0
  3367  0208  13CE               	bcf	LIN_calcParity@PID,7
  3368  0209                     u2434:	
  3369                           
  3370                           ;lin_master.c: 221: PID.P1 = PID.P1 ^ PID.ID4;
  3371  0209  1E4E               	btfss	LIN_calcParity@PID,4
  3372  020A  2A0D               	goto	u2440
  3373  020B  3001               	movlw	1
  3374  020C  2A0E               	goto	u2442
  3375  020D                     u2440:	
  3376  020D  3000               	movlw	0
  3377  020E                     u2442:	
  3378  020E  00CC               	movwf	??_LIN_calcParity
  3379  020F  1FCE               	btfss	LIN_calcParity@PID,7
  3380  0210  2A13               	goto	u2450
  3381  0211  3001               	movlw	1
  3382  0212  2A14               	goto	u2452
  3383  0213                     u2450:	
  3384  0213  3000               	movlw	0
  3385  0214                     u2452:	
  3386  0214  064C               	xorwf	??_LIN_calcParity,w
  3387  0215  1903               	btfsc	3,2
  3388  0216  2A1A               	goto	u2460
  3389  0217  0020               	movlb	0	; select bank0
  3390  0218  17CE               	bsf	LIN_calcParity@PID,7
  3391  0219  2A1C               	goto	u2474
  3392  021A                     u2460:	
  3393  021A  0020               	movlb	0	; select bank0
  3394  021B  13CE               	bcf	LIN_calcParity@PID,7
  3395  021C                     u2474:	
  3396                           
  3397                           ;lin_master.c: 222: PID.P1 = PID.P1 ^ PID.ID5;
  3398  021C  1ECE               	btfss	LIN_calcParity@PID,5
  3399  021D  2A20               	goto	u2480
  3400  021E  3001               	movlw	1
  3401  021F  2A21               	goto	u2482
  3402  0220                     u2480:	
  3403  0220  3000               	movlw	0
  3404  0221                     u2482:	
  3405  0221  00CC               	movwf	??_LIN_calcParity
  3406  0222  1FCE               	btfss	LIN_calcParity@PID,7
  3407  0223  2A26               	goto	u2490
  3408  0224  3001               	movlw	1
  3409  0225  2A27               	goto	u2492
  3410  0226                     u2490:	
  3411  0226  3000               	movlw	0
  3412  0227                     u2492:	
  3413  0227  064C               	xorwf	??_LIN_calcParity,w
  3414  0228  1903               	btfsc	3,2
  3415  0229  2A2D               	goto	u2500
  3416  022A  0020               	movlb	0	; select bank0
  3417  022B  17CE               	bsf	LIN_calcParity@PID,7
  3418  022C  2A2F               	goto	l2214
  3419  022D                     u2500:	
  3420  022D  0020               	movlb	0	; select bank0
  3421  022E  13CE               	bcf	LIN_calcParity@PID,7
  3422  022F                     l2214:	
  3423                           
  3424                           ;lin_master.c: 223: PID.P1 = ~PID.P1;
  3425  022F  1003               	clrc
  3426  0230  1FCE               	btfss	LIN_calcParity@PID,7
  3427  0231  1403               	setc
  3428  0232  1C03               	btfss	3,0
  3429  0233  2A37               	goto	u2520
  3430  0234  0020               	movlb	0	; select bank0
  3431  0235  17CE               	bsf	LIN_calcParity@PID,7
  3432  0236  2A39               	goto	l2216
  3433  0237                     u2520:	
  3434  0237  0020               	movlb	0	; select bank0
  3435  0238  13CE               	bcf	LIN_calcParity@PID,7
  3436  0239                     l2216:	
  3437                           
  3438                           ;lin_master.c: 225: return PID.rawPID;
  3439  0239  084E               	movf	LIN_calcParity@PID,w
  3440  023A  0008               	return
  3441  023B                     __end_of_LIN_calcParity:	
  3442                           
  3443                           	psect	text20
  3444  0328                     __ptext20:	
  3445 ;; *************** function _LIN_handler *****************
  3446 ;; Defined at:
  3447 ;;		line 106 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;		None
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      enum E119
  3454 ;; Registers used:
  3455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3463 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3464 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3465 ;;Total ram usage:        1 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:    9
  3468 ;; This function calls:
  3469 ;;		Absolute function
  3470 ;;		_EUSART_is_rx_ready
  3471 ;;		_LIN_disableRx
  3472 ;;		_LIN_enableRx
  3473 ;;		_LIN_receivePacket
  3474 ;;		_LIN_sendPacket
  3475 ;;		_LIN_startTimer
  3476 ;;		_memset
  3477 ;;		_processLIN
  3478 ;; This function is called by:
  3479 ;;		_main
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           
  3484                           ;psect for function _LIN_handler
  3485  0328                     _LIN_handler:	
  3486                           
  3487                           ;lin_master.c: 107: static lin_state_t LIN_state = LIN_IDLE;
  3488                           ;lin_master.c: 110: switch(LIN_state){
  3489                           
  3490                           ;incstack = 0
  3491                           ; Regs used in _LIN_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3492  0328  2B88               	goto	l2776
  3493  0329                     l2734:	
  3494                           ;lin_master.c: 111: case LIN_IDLE:
  3495                           
  3496                           
  3497                           ;lin_master.c: 112: if(LIN_txReady == 1){
  3498  0329  0020               	movlb	0	; select bank0
  3499  032A  032F               	decf	_LIN_txReady,w
  3500  032B  1D03               	btfss	3,2
  3501  032C  0008               	return
  3502                           
  3503                           ;lin_master.c: 113: LIN_txReady = 0;
  3504  032D  01AF               	clrf	_LIN_txReady
  3505                           
  3506                           ;lin_master.c: 114: LIN_disableRx();
  3507  032E  3186  26CE  3183   	fcall	_LIN_disableRx
  3508                           
  3509                           ;lin_master.c: 116: LIN_sendPacket();
  3510  0331  3184  2441  3183   	fcall	_LIN_sendPacket
  3511                           
  3512                           ;lin_master.c: 117: memset(LIN_packet.rawPacket, 0, sizeof(LIN_packet.rawPacket));
  3513  0334  3000               	movlw	0
  3514  0335  0020               	movlb	0	; select bank0
  3515  0336  00CC               	movwf	memset@c
  3516  0337  00CD               	movwf	memset@c+1
  3517  0338  300B               	movlw	11
  3518  0339  00CE               	movwf	memset@n
  3519  033A  3000               	movlw	0
  3520  033B  00CF               	movwf	memset@n+1
  3521  033C  3036               	movlw	(low (_LIN_packet| 0))& (0+255)
  3522  033D  3185  258B         	fcall	_memset
  3523                           
  3524                           ;lin_master.c: 118: LIN_state = LIN_TX_IP;
  3525  033F  0020               	movlb	0	; select bank0
  3526  0340  01AA               	clrf	LIN_handler@LIN_state
  3527  0341  0AAA               	incf	LIN_handler@LIN_state,f
  3528                           
  3529                           ;lin_master.c: 121: }
  3530                           ;lin_master.c: 122: break;
  3531                           
  3532                           ;lin_master.c: 119: } else {
  3533  0342  0008               	return
  3534  0343                     l423:	
  3535                           ;lin_master.c: 123: case LIN_TX_IP:
  3536                           
  3537                           
  3538                           ;lin_master.c: 125: if(PIE1bits.TXIE == 0){
  3539  0343  0021               	movlb	1	; select bank1
  3540  0344  1A11               	btfsc	17,4	;volatile
  3541  0345  0008               	return
  3542                           
  3543                           ;lin_master.c: 126: if(TXSTAbits.TRMT == 1){
  3544  0346  0023               	movlb	3	; select bank3
  3545  0347  1C9E               	btfss	30,1	;volatile
  3546  0348  0008               	return
  3547                           
  3548                           ;lin_master.c: 128: if(LIN_rxPacket.rxLength > 0){
  3549  0349  0021               	movlb	1	; select bank1
  3550  034A  0831               	movf	(_LIN_rxPacket^(0+128)+1),w
  3551  034B  1903               	btfsc	3,2
  3552  034C  2B59               	goto	l2754
  3553                           
  3554                           ;lin_master.c: 130: LIN_startTimer(LIN_rxPacket.timeout);
  3555  034D  083B               	movf	(_LIN_rxPacket^(0+128)+11),w
  3556  034E  3186  265C  3183   	fcall	_LIN_startTimer
  3557                           
  3558                           ;lin_master.c: 131: LIN_enableRx();
  3559  0351  3186  26C9         	fcall	_LIN_enableRx
  3560                           
  3561                           ;lin_master.c: 132: LIN_state = LIN_RX_IP;
  3562  0353  3002               	movlw	2
  3563  0354  0020               	movlb	0	; select bank0
  3564  0355  00D7               	movwf	??_LIN_handler
  3565  0356  0857               	movf	??_LIN_handler,w
  3566  0357  00AA               	movwf	LIN_handler@LIN_state
  3567                           
  3568                           ;lin_master.c: 133: } else {
  3569  0358  0008               	return
  3570  0359                     l2754:	
  3571                           
  3572                           ;lin_master.c: 134: LIN_state = LIN_IDLE;
  3573  0359  0020               	movlb	0	; select bank0
  3574  035A  01AA               	clrf	LIN_handler@LIN_state
  3575                           
  3576                           ;lin_master.c: 135: }
  3577                           ;lin_master.c: 136: }
  3578                           ;lin_master.c: 137: }
  3579                           ;lin_master.c: 138: break;
  3580  035B  0008               	return
  3581  035C                     l2756:	
  3582                           ;lin_master.c: 139: case LIN_RX_IP:
  3583                           
  3584                           
  3585                           ;lin_master.c: 141: if(LIN_timerRunning == 0){
  3586  035C  082D               	movf	_LIN_timerRunning,w
  3587  035D  1D03               	btfss	3,2
  3588  035E  2B6B               	goto	l2762
  3589                           
  3590                           ;lin_master.c: 143: LIN_state = LIN_IDLE;
  3591  035F  01AA               	clrf	LIN_handler@LIN_state
  3592                           
  3593                           ;lin_master.c: 144: memset(LIN_rxPacket.rawPacket, 0, sizeof(LIN_rxPacket.rawPacket));
  3594  0360  3000               	movlw	0
  3595  0361  00CC               	movwf	memset@c
  3596  0362  00CD               	movwf	memset@c+1
  3597  0363  300C               	movlw	12
  3598  0364  00CE               	movwf	memset@n
  3599  0365  3000               	movlw	0
  3600  0366  00CF               	movwf	memset@n+1
  3601  0367  30B0               	movlw	(low (_LIN_rxPacket| 0))& (0+255)
  3602  0368  3185  258B         	fcall	_memset
  3603                           
  3604                           ;lin_master.c: 145: } else if(EUSART_is_rx_ready()){
  3605  036A  0008               	return
  3606  036B                     l2762:	
  3607  036B  3186  26ED  3183   	fcall	_EUSART_is_rx_ready
  3608  036E  3A00               	xorlw	0
  3609  036F  1903               	skipnz
  3610  0370  0008               	return
  3611                           
  3612                           ;lin_master.c: 146: if(LIN_receivePacket() == 1){
  3613  0371  3184  2411  3183   	fcall	_LIN_receivePacket
  3614  0374  3A01               	xorlw	1
  3615  0375  1D03               	skipz
  3616  0376  0008               	return
  3617                           
  3618                           ;lin_master.c: 148: LIN_disableRx();
  3619  0377  3186  26CE         	fcall	_LIN_disableRx
  3620                           
  3621                           ;lin_master.c: 149: LIN_state = LIN_RX_RDY;
  3622  0379  3003               	movlw	3
  3623  037A  0020               	movlb	0	; select bank0
  3624  037B  00D7               	movwf	??_LIN_handler
  3625  037C  0857               	movf	??_LIN_handler,w
  3626  037D  00AA               	movwf	LIN_handler@LIN_state
  3627                           
  3628                           ;lin_master.c: 150: }
  3629                           ;lin_master.c: 151: }
  3630                           ;lin_master.c: 152: break;
  3631  037E  0008               	return
  3632  037F                     l2770:	
  3633                           ;lin_master.c: 153: case LIN_RX_RDY:
  3634                           
  3635                           
  3636                           ;lin_master.c: 155: LIN_processData();
  3637  037F  0021               	movlb	1	; select bank1
  3638  0380  0850               	movf	(_LIN_processData+1)^(0+128),w
  3639  0381  008A               	movwf	10
  3640  0382  084F               	movf	_LIN_processData^(0+128),w
  3641  0383  000A               	callw
  3642  0384  3183               	pagesel	$
  3643                           
  3644                           ;lin_master.c: 156: LIN_state = LIN_IDLE;
  3645  0385  0020               	movlb	0	; select bank0
  3646  0386  01AA               	clrf	LIN_handler@LIN_state
  3647                           
  3648                           ;lin_master.c: 158: }
  3649                           
  3650                           ;lin_master.c: 157: break;
  3651  0387  0008               	return
  3652  0388                     l2776:	
  3653  0388  0020               	movlb	0	; select bank0
  3654  0389  082A               	movf	LIN_handler@LIN_state,w
  3655                           
  3656                           ; Switch size 1, requested type "space"
  3657                           ; Number of cases is 4, Range of values is 0 to 3
  3658                           ; switch strategies available:
  3659                           ; Name         Instructions Cycles
  3660                           ; simple_byte           13     7 (average)
  3661                           ; direct_byte           14     6 (fixed)
  3662                           ; jumptable            260     6 (fixed)
  3663                           ;	Chosen strategy is simple_byte
  3664  038A  3A00               	xorlw	0	; case 0
  3665  038B  1903               	skipnz
  3666  038C  2B29               	goto	l2734
  3667  038D  3A01               	xorlw	1	; case 1
  3668  038E  1903               	skipnz
  3669  038F  2B43               	goto	l423
  3670  0390  3A03               	xorlw	3	; case 2
  3671  0391  1903               	skipnz
  3672  0392  2B5C               	goto	l2756
  3673  0393  3A01               	xorlw	1	; case 3
  3674  0394  1903               	skipnz
  3675  0395  2B7F               	goto	l2770
  3676  0396  2B97               	goto	l434
  3677  0397                     l434:	
  3678                           ;lin_master.c: 159: return LIN_state;
  3679                           ;	Return value of _LIN_handler is never used
  3680                           
  3681  0397  0008               	return
  3682  0398                     __end_of_LIN_handler:	
  3683                           
  3684                           	psect	text21
  3685  05F3                     __ptext21:	
  3686 ;; *************** function _processLIN *****************
  3687 ;; Defined at:
  3688 ;;		line 49 in file "mcc_generated_files/LINDrivers/lin_app.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  tempRxData      8    0[BANK1 ] unsigned char [8]
  3693 ;;  cmd             1    8[BANK1 ] unsigned char 
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  1    wreg      void 
  3696 ;; Registers used:
  3697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3704 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3705 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3706 ;;      Totals:         0       1       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3707 ;;Total ram usage:       10 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; Hardware stack levels required when called:    8
  3710 ;; This function calls:
  3711 ;;		_LIN_getPacket
  3712 ;; This function is called by:
  3713 ;;		_LIN_Master_Initialize
  3714 ;;		_main
  3715 ;;		_LIN_handler
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           
  3720                           ;psect for function _processLIN
  3721  05F3                     _processLIN:	
  3722                           
  3723                           ;lin_app.c: 50: uint8_t tempRxData[8];
  3724                           ;lin_app.c: 51: uint8_t cmd;
  3725                           ;lin_app.c: 53: cmd = LIN_getPacket(tempRxData);
  3726                           
  3727                           ;incstack = 0
  3728                           ; Regs used in _processLIN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3729  05F3  30C4               	movlw	(low (processLIN@tempRxData| 0))& (0+255)
  3730  05F4  3184  24EA  3185   	fcall	_LIN_getPacket
  3731  05F7  0020               	movlb	0	; select bank0
  3732  05F8  00D6               	movwf	??_processLIN
  3733  05F9  0856               	movf	??_processLIN,w
  3734  05FA  0021               	movlb	1	; select bank1
  3735  05FB  00CC               	movwf	processLIN@cmd^(0+128)
  3736                           
  3737                           ;lin_app.c: 65: }
  3738                           
  3739                           ;lin_app.c: 64: break;
  3740                           
  3741                           ;lin_app.c: 63: default:
  3742                           
  3743                           ;lin_app.c: 62: break;
  3744                           
  3745                           ;lin_app.c: 61: case SIGNAL:
  3746                           
  3747                           ;lin_app.c: 60: break;
  3748                           
  3749                           ;lin_app.c: 59: case LFRX:
  3750                           
  3751                           ;lin_app.c: 58: break;
  3752                           
  3753                           ;lin_app.c: 57: case RSSI:
  3754                           
  3755                           ;lin_app.c: 56: break;
  3756                           
  3757                           ;lin_app.c: 55: case UNLOCK:
  3758                           
  3759                           ;lin_app.c: 54: switch(cmd){
  3760  05FC  084C               	movf	processLIN@cmd^(0+128),w
  3761                           
  3762                           ; Switch size 1, requested type "space"
  3763                           ; Number of cases is 4, Range of values is 0 to 3
  3764                           ; switch strategies available:
  3765                           ; Name         Instructions Cycles
  3766                           ; simple_byte           13     7 (average)
  3767                           ; direct_byte           14     6 (fixed)
  3768                           ; jumptable            260     6 (fixed)
  3769                           ;	Chosen strategy is simple_byte
  3770  05FD  3A00               	xorlw	0	; case 0
  3771  05FE  1903               	skipnz
  3772  05FF  2E0A               	goto	l323
  3773  0600  3A01               	xorlw	1	; case 1
  3774  0601  1903               	skipnz
  3775  0602  2E0A               	goto	l323
  3776  0603  3A03               	xorlw	3	; case 2
  3777  0604  1903               	skipnz
  3778  0605  2E0A               	goto	l323
  3779  0606  3A01               	xorlw	1	; case 3
  3780  0607  1903               	skipnz
  3781  0608  2E0A               	goto	l323
  3782  0609  2E0A               	goto	l323
  3783  060A                     l323:	
  3784  060A  0008               	return
  3785  060B                     __end_of_processLIN:	
  3786                           
  3787                           	psect	text22
  3788  04EA                     __ptext22:	
  3789 ;; *************** function _LIN_getPacket *****************
  3790 ;; Defined at:
  3791 ;;		line 201 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  data            1    wreg     PTR unsigned char 
  3794 ;;		 -> processLIN@tempRxData(8), 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  data            1   16[BANK0 ] PTR unsigned char 
  3797 ;;		 -> processLIN@tempRxData(8), 
  3798 ;;  cmd             1   17[BANK0 ] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      unsigned char 
  3801 ;; Registers used:
  3802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3809 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3810 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3811 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3812 ;;Total ram usage:        3 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    7
  3815 ;; This function calls:
  3816 ;;		_memset
  3817 ;; This function is called by:
  3818 ;;		_processLIN
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           
  3823                           ;psect for function _LIN_getPacket
  3824  04EA                     _LIN_getPacket:	
  3825                           
  3826                           ;incstack = 0
  3827                           ; Regs used in _LIN_getPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3828                           ;LIN_getPacket@data stored from wreg
  3829  04EA  0020               	movlb	0	; select bank0
  3830  04EB  00D4               	movwf	LIN_getPacket@data
  3831                           
  3832                           ;lin_master.c: 202: uint8_t cmd = LIN_rxPacket.cmd & 0x3F;
  3833  04EC  0021               	movlb	1	; select bank1
  3834  04ED  0830               	movf	_LIN_rxPacket^(0+128),w
  3835  04EE  393F               	andlw	63
  3836  04EF  0020               	movlb	0	; select bank0
  3837  04F0  00D3               	movwf	??_LIN_getPacket
  3838  04F1  0853               	movf	??_LIN_getPacket,w
  3839  04F2  00D5               	movwf	LIN_getPacket@cmd
  3840                           
  3841                           ;lin_master.c: 204: __builtin_memcpy(data,LIN_rxPacket.data,sizeof(LIN_rxPacket.data));
  3842  04F3  0854               	movf	LIN_getPacket@data,w
  3843  04F4  0086               	movwf	6
  3844  04F5  0187               	clrf	7
  3845  04F6  3002               	movlw	2
  3846  04F7  3EB0               	addlw	(low (_LIN_rxPacket| 0))& (0+255)
  3847  04F8  0084               	movwf	4
  3848  04F9  0185               	clrf	5
  3849  04FA  3008               	movlw	8
  3850  04FB  0020               	movlb	0	; select bank0
  3851  04FC  00D3               	movwf	??_LIN_getPacket
  3852  04FD                     u225m0:	
  3853  04FD  0012               	moviw fsr0++
  3854  04FE  001E               	movwi fsr1++
  3855  04FF  0BD3               	decfsz	??_LIN_getPacket,f
  3856  0500  2CFD               	goto	u225m0
  3857                           
  3858                           ;lin_master.c: 205: memset(LIN_rxPacket.rawPacket, 0, sizeof(LIN_rxPacket.rawPacket));
  3859  0501  3000               	movlw	0
  3860  0502  0020               	movlb	0	; select bank0
  3861  0503  00CC               	movwf	memset@c
  3862  0504  00CD               	movwf	memset@c+1
  3863  0505  300C               	movlw	12
  3864  0506  00CE               	movwf	memset@n
  3865  0507  3000               	movlw	0
  3866  0508  00CF               	movwf	memset@n+1
  3867  0509  30B0               	movlw	(low (_LIN_rxPacket| 0))& (0+255)
  3868  050A  3185  258B         	fcall	_memset
  3869                           
  3870                           ;lin_master.c: 207: return cmd;
  3871  050C  0020               	movlb	0	; select bank0
  3872  050D  0855               	movf	LIN_getPacket@cmd,w
  3873  050E  0008               	return
  3874  050F                     __end_of_LIN_getPacket:	
  3875                           
  3876                           	psect	text23
  3877  058B                     __ptext23:	
  3878 ;; *************** function _memset *****************
  3879 ;; Defined at:
  3880 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  p1              1    wreg     PTR void 
  3883 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  3884 ;;  c               2    8[BANK0 ] int 
  3885 ;;  n               2   10[BANK0 ] unsigned int 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  p1              1   14[BANK0 ] PTR void 
  3888 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  3889 ;;  p               1   13[BANK0 ] PTR unsigned char 
  3890 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  1    wreg      PTR void 
  3893 ;; Registers used:
  3894 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3900 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3901 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3902 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3903 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3904 ;;Total ram usage:        7 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; Hardware stack levels required when called:    6
  3907 ;; This function calls:
  3908 ;;		Nothing
  3909 ;; This function is called by:
  3910 ;;		_LIN_handler
  3911 ;;		_LIN_getPacket
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           
  3916                           ;psect for function _memset
  3917  058B                     _memset:	
  3918                           
  3919                           ;incstack = 0
  3920                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  3921                           ;memset@p1 stored from wreg
  3922  058B  0020               	movlb	0	; select bank0
  3923  058C  00D2               	movwf	memset@p1
  3924  058D  0852               	movf	memset@p1,w
  3925  058E  00D0               	movwf	??_memset
  3926  058F  0850               	movf	??_memset,w
  3927  0590  00D1               	movwf	memset@p
  3928  0591                     l2044:	
  3929  0591  3001               	movlw	1
  3930  0592  02CE               	subwf	memset@n,f
  3931  0593  3000               	movlw	0
  3932  0594  3BCF               	subwfb	memset@n+1,f
  3933  0595  0A4E               	incf	memset@n,w
  3934  0596  1903               	btfsc	3,2
  3935  0597  0A4F               	incf	memset@n+1,w
  3936  0598  1903               	btfsc	3,2
  3937  0599  0008               	return
  3938  059A  084C               	movf	memset@c,w
  3939  059B  00D0               	movwf	??_memset
  3940  059C  0851               	movf	memset@p,w
  3941  059D  0086               	movwf	6
  3942  059E  0187               	clrf	7
  3943  059F  0850               	movf	??_memset,w
  3944  05A0  0081               	movwf	1
  3945  05A1  3001               	movlw	1
  3946  05A2  00D0               	movwf	??_memset
  3947  05A3  0850               	movf	??_memset,w
  3948  05A4  07D1               	addwf	memset@p,f
  3949  05A5  2D91               	goto	l2044
  3950  05A6                     __end_of_memset:	
  3951                           ;	Return value of _memset is never used
  3952                           
  3953                           
  3954                           	psect	text24
  3955  065C                     __ptext24:	
  3956 ;; *************** function _LIN_startTimer *****************
  3957 ;; Defined at:
  3958 ;;		line 241 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  timeout         1    wreg     unsigned char 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;  timeout         1   10[BANK0 ] unsigned char 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg, status,2, status,0, pclath, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3973 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3974 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3975 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3976 ;;Total ram usage:        2 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    7
  3979 ;; This function calls:
  3980 ;;		_TMR2_StartTimer
  3981 ;;		_TMR2_WriteTimer
  3982 ;; This function is called by:
  3983 ;;		_LIN_handler
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           
  3988                           ;psect for function _LIN_startTimer
  3989  065C                     _LIN_startTimer:	
  3990                           
  3991                           ;incstack = 0
  3992                           ; Regs used in _LIN_startTimer: [wreg+status,2+status,0+pclath+cstack]
  3993                           ;LIN_startTimer@timeout stored from wreg
  3994  065C  0020               	movlb	0	; select bank0
  3995  065D  00CE               	movwf	LIN_startTimer@timeout
  3996                           
  3997                           ;lin_master.c: 242: LIN_timeout = timeout;
  3998  065E  084E               	movf	LIN_startTimer@timeout,w
  3999  065F  00CD               	movwf	??_LIN_startTimer
  4000  0660  084D               	movf	??_LIN_startTimer,w
  4001  0661  00E7               	movwf	_LIN_timeout
  4002                           
  4003                           ;lin_master.c: 243: TMR2_WriteTimer(0);
  4004  0662  3000               	movlw	0
  4005  0663  3186  26C4  3186   	fcall	_TMR2_WriteTimer
  4006                           
  4007                           ;lin_master.c: 244: TMR2_StartTimer();
  4008  0666  3186  26E7         	fcall	_TMR2_StartTimer
  4009                           
  4010                           ;lin_master.c: 245: LIN_timerRunning = 1;
  4011  0668  0020               	movlb	0	; select bank0
  4012  0669  01AD               	clrf	_LIN_timerRunning
  4013  066A  0AAD               	incf	_LIN_timerRunning,f
  4014  066B  0008               	return
  4015  066C                     __end_of_LIN_startTimer:	
  4016                           
  4017                           	psect	text25
  4018  06C4                     __ptext25:	
  4019 ;; *************** function _TMR2_WriteTimer *****************
  4020 ;; Defined at:
  4021 ;;		line 108 in file "mcc_generated_files/tmr2.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  timerVal        1    wreg     unsigned char 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  timerVal        1    8[BANK0 ] unsigned char 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  1    wreg      void 
  4028 ;; Registers used:
  4029 ;;		wreg
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4036 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4038 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4039 ;;Total ram usage:        1 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    6
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_LIN_startTimer
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           
  4050                           ;psect for function _TMR2_WriteTimer
  4051  06C4                     _TMR2_WriteTimer:	
  4052                           
  4053                           ;incstack = 0
  4054                           ; Regs used in _TMR2_WriteTimer: [wreg]
  4055                           ;TMR2_WriteTimer@timerVal stored from wreg
  4056  06C4  0020               	movlb	0	; select bank0
  4057  06C5  00CC               	movwf	TMR2_WriteTimer@timerVal
  4058                           
  4059                           ;tmr2.c: 111: TMR2 = timerVal;
  4060  06C6  084C               	movf	TMR2_WriteTimer@timerVal,w
  4061  06C7  009A               	movwf	26	;volatile
  4062  06C8  0008               	return
  4063  06C9                     __end_of_TMR2_WriteTimer:	
  4064                           
  4065                           	psect	text26
  4066  06E7                     __ptext26:	
  4067 ;; *************** function _TMR2_StartTimer *****************
  4068 ;; Defined at:
  4069 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      void 
  4076 ;; Registers used:
  4077 ;;		None
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4087 ;;Total ram usage:        0 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    6
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_LIN_startTimer
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           
  4098                           ;psect for function _TMR2_StartTimer
  4099  06E7                     _TMR2_StartTimer:	
  4100                           
  4101                           ;tmr2.c: 90: T2CONbits.TMR2ON = 1;
  4102                           
  4103                           ;incstack = 0
  4104                           ; Regs used in _TMR2_StartTimer: []
  4105  06E7  0020               	movlb	0	; select bank0
  4106  06E8  151C               	bsf	28,2	;volatile
  4107  06E9  0008               	return
  4108  06EA                     __end_of_TMR2_StartTimer:	
  4109                           
  4110                           	psect	text27
  4111  0441                     __ptext27:	
  4112 ;; *************** function _LIN_sendPacket *****************
  4113 ;; Defined at:
  4114 ;;		line 180 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;		None
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  i               1   11[BANK0 ] unsigned char 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  1    wreg      void 
  4121 ;; Registers used:
  4122 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4129 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4130 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4131 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4132 ;;Total ram usage:        2 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:    7
  4135 ;; This function calls:
  4136 ;;		_EUSART_Write
  4137 ;;		_LIN_sendBreak
  4138 ;; This function is called by:
  4139 ;;		_LIN_handler
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           
  4144                           ;psect for function _LIN_sendPacket
  4145  0441                     _LIN_sendPacket:	
  4146                           
  4147                           ;lin_master.c: 183: LIN_sendBreak();
  4148                           
  4149                           ;incstack = 0
  4150                           ; Regs used in _LIN_sendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4151  0441  3186  26EA  3184   	fcall	_LIN_sendBreak
  4152                           
  4153                           ;lin_master.c: 184: EUSART_Write(0x00);
  4154  0444  3000               	movlw	0
  4155  0445  3185  250F  3184   	fcall	_EUSART_Write
  4156                           
  4157                           ;lin_master.c: 186: EUSART_Write(0x55);
  4158  0448  3055               	movlw	85
  4159  0449  3185  250F  3184   	fcall	_EUSART_Write
  4160                           
  4161                           ;lin_master.c: 188: EUSART_Write(LIN_packet.PID);
  4162  044C  0020               	movlb	0	; select bank0
  4163  044D  0836               	movf	_LIN_packet,w
  4164  044E  3185  250F  3184   	fcall	_EUSART_Write
  4165                           
  4166                           ;lin_master.c: 190: if(LIN_rxPacket.rxLength == 0){
  4167  0451  0021               	movlb	1	; select bank1
  4168  0452  0831               	movf	(_LIN_rxPacket^(0+128)+1),w
  4169  0453  1D03               	btfss	3,2
  4170  0454  0008               	return
  4171                           
  4172                           ;lin_master.c: 193: for(uint8_t i = 0; i < LIN_packet.length; i++){
  4173  0455  0020               	movlb	0	; select bank0
  4174  0456  01CF               	clrf	LIN_sendPacket@i
  4175  0457                     l2238:	
  4176  0457  0840               	movf	_LIN_packet+10,w
  4177  0458  024F               	subwf	LIN_sendPacket@i,w
  4178  0459  1803               	btfsc	3,0
  4179  045A  2C6A               	goto	l2240
  4180                           
  4181                           ;lin_master.c: 194: EUSART_Write(LIN_packet.data[i]);
  4182  045B  084F               	movf	LIN_sendPacket@i,w
  4183  045C  3E01               	addlw	1
  4184  045D  3E36               	addlw	(low (_LIN_packet| 0))& (0+255)
  4185  045E  0086               	movwf	6
  4186  045F  0187               	clrf	7
  4187  0460  0801               	movf	1,w
  4188  0461  3185  250F  3184   	fcall	_EUSART_Write
  4189  0464  3001               	movlw	1
  4190  0465  0020               	movlb	0	; select bank0
  4191  0466  00CE               	movwf	??_LIN_sendPacket
  4192  0467  084E               	movf	??_LIN_sendPacket,w
  4193  0468  07CF               	addwf	LIN_sendPacket@i,f
  4194  0469  2C57               	goto	l2238
  4195  046A                     l2240:	
  4196                           
  4197                           ;lin_master.c: 195: }
  4198                           ;lin_master.c: 197: EUSART_Write(LIN_packet.checksum);
  4199  046A  083F               	movf	_LIN_packet+9,w
  4200  046B  3185  250F         	fcall	_EUSART_Write
  4201  046D  0008               	return
  4202  046E                     __end_of_LIN_sendPacket:	
  4203                           
  4204                           	psect	text28
  4205  06EA                     __ptext28:	
  4206 ;; *************** function _LIN_sendBreak *****************
  4207 ;; Defined at:
  4208 ;;		line 294 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;		None
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;		None
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      void 
  4215 ;; Registers used:
  4216 ;;		None
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4226 ;;Total ram usage:        0 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; Hardware stack levels required when called:    6
  4229 ;; This function calls:
  4230 ;;		Nothing
  4231 ;; This function is called by:
  4232 ;;		_LIN_sendPacket
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           
  4237                           ;psect for function _LIN_sendBreak
  4238  06EA                     _LIN_sendBreak:	
  4239                           
  4240                           ;lin_master.c: 295: TXSTAbits.SENDB = 1;
  4241                           
  4242                           ;incstack = 0
  4243                           ; Regs used in _LIN_sendBreak: []
  4244  06EA  0023               	movlb	3	; select bank3
  4245  06EB  159E               	bsf	30,3	;volatile
  4246  06EC  0008               	return
  4247  06ED                     __end_of_LIN_sendBreak:	
  4248                           
  4249                           	psect	text29
  4250  050F                     __ptext29:	
  4251 ;; *************** function _EUSART_Write *****************
  4252 ;; Defined at:
  4253 ;;		line 170 in file "mcc_generated_files/eusart.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  txData          1    wreg     unsigned char 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  txData          1    9[BANK0 ] unsigned char 
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  1    wreg      void 
  4260 ;; Registers used:
  4261 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4268 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4269 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4270 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4271 ;;Total ram usage:        2 bytes
  4272 ;; Hardware stack levels used:    1
  4273 ;; Hardware stack levels required when called:    6
  4274 ;; This function calls:
  4275 ;;		Nothing
  4276 ;; This function is called by:
  4277 ;;		_LIN_sendPacket
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           
  4282                           ;psect for function _EUSART_Write
  4283  050F                     _EUSART_Write:	
  4284                           
  4285                           ;incstack = 0
  4286                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4287                           ;EUSART_Write@txData stored from wreg
  4288  050F  0020               	movlb	0	; select bank0
  4289  0510  00CD               	movwf	EUSART_Write@txData
  4290  0511                     l2080:	
  4291                           ;eusart.c: 173: {
  4292                           
  4293                           ;eusart.c: 172: while(0 == eusartTxBufferRemaining)
  4294                           
  4295  0511  0866               	movf	_eusartTxBufferRemaining,w	;volatile
  4296  0512  1903               	btfsc	3,2
  4297  0513  2D11               	goto	l2080
  4298                           
  4299                           ;eusart.c: 174: }
  4300                           ;eusart.c: 176: if(0 == PIE1bits.TXIE)
  4301  0514  0021               	movlb	1	; select bank1
  4302  0515  1A11               	btfsc	17,4	;volatile
  4303  0516  2D1C               	goto	l176
  4304                           
  4305                           ;eusart.c: 177: {
  4306                           ;eusart.c: 178: TXREG = txData;
  4307  0517  0020               	movlb	0	; select bank0
  4308  0518  084D               	movf	EUSART_Write@txData,w
  4309  0519  0023               	movlb	3	; select bank3
  4310  051A  009A               	movwf	26	;volatile
  4311                           
  4312                           ;eusart.c: 179: }
  4313  051B  2D30               	goto	l2094
  4314  051C                     l176:	
  4315                           
  4316                           ;eusart.c: 180: else
  4317                           ;eusart.c: 181: {
  4318                           ;eusart.c: 182: PIE1bits.TXIE = 0;
  4319  051C  1211               	bcf	17,4	;volatile
  4320                           
  4321                           ;eusart.c: 183: eusartTxBuffer[eusartTxHead++] = txData;
  4322  051D  0020               	movlb	0	; select bank0
  4323  051E  084D               	movf	EUSART_Write@txData,w
  4324  051F  00CC               	movwf	??_EUSART_Write
  4325  0520  0835               	movf	_eusartTxHead,w
  4326  0521  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4327  0522  0086               	movwf	6
  4328  0523  0187               	clrf	7
  4329  0524  084C               	movf	??_EUSART_Write,w
  4330  0525  0081               	movwf	1
  4331  0526  3001               	movlw	1
  4332  0527  00CC               	movwf	??_EUSART_Write
  4333  0528  084C               	movf	??_EUSART_Write,w
  4334  0529  07B5               	addwf	_eusartTxHead,f	;volatile
  4335                           
  4336                           ;eusart.c: 184: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4337  052A  3008               	movlw	8
  4338  052B  0235               	subwf	_eusartTxHead,w	;volatile
  4339  052C  1803               	btfsc	3,0
  4340                           
  4341                           ;eusart.c: 185: {
  4342                           ;eusart.c: 186: eusartTxHead = 0;
  4343  052D  01B5               	clrf	_eusartTxHead	;volatile
  4344                           
  4345                           ;eusart.c: 187: }
  4346                           ;eusart.c: 188: eusartTxBufferRemaining--;
  4347  052E  3001               	movlw	1
  4348  052F  02E6               	subwf	_eusartTxBufferRemaining,f	;volatile
  4349  0530                     l2094:	
  4350                           
  4351                           ;eusart.c: 189: }
  4352                           ;eusart.c: 190: PIE1bits.TXIE = 1;
  4353  0530  0021               	movlb	1	; select bank1
  4354  0531  1611               	bsf	17,4	;volatile
  4355  0532  0008               	return
  4356  0533                     __end_of_EUSART_Write:	
  4357                           
  4358                           	psect	text30
  4359  0411                     __ptext30:	
  4360 ;; *************** function _LIN_receivePacket *****************
  4361 ;; Defined at:
  4362 ;;		line 162 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;		None
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;		None
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  1    wreg      unsigned char 
  4369 ;; Registers used:
  4370 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;Total ram usage:        2 bytes
  4381 ;; Hardware stack levels used:    1
  4382 ;; Hardware stack levels required when called:    7
  4383 ;; This function calls:
  4384 ;;		_EUSART_Read
  4385 ;;		_LIN_getChecksum
  4386 ;; This function is called by:
  4387 ;;		_LIN_handler
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           
  4392                           ;psect for function _LIN_receivePacket
  4393  0411                     _LIN_receivePacket:	
  4394                           
  4395                           ;lin_master.c: 163: static uint8_t rxIndex = 0;
  4396                           ;lin_master.c: 165: if(rxIndex < LIN_rxPacket.rxLength){
  4397                           
  4398                           ;incstack = 0
  4399                           ; Regs used in _LIN_receivePacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4400  0411  0021               	movlb	1	; select bank1
  4401  0412  0831               	movf	(_LIN_rxPacket^(0+128)+1),w
  4402  0413  0020               	movlb	0	; select bank0
  4403  0414  0229               	subwf	LIN_receivePacket@rxIndex,w
  4404  0415  1803               	skipnc
  4405  0416  2C29               	goto	l2258
  4406                           
  4407                           ;lin_master.c: 167: LIN_rxPacket.data[rxIndex++] = EUSART_Read();
  4408  0417  3184  24C3  3184   	fcall	_EUSART_Read
  4409  041A  0020               	movlb	0	; select bank0
  4410  041B  00D2               	movwf	??_LIN_receivePacket
  4411  041C  0829               	movf	LIN_receivePacket@rxIndex,w
  4412  041D  3E02               	addlw	2
  4413  041E  3EB0               	addlw	(low (_LIN_rxPacket| 0))& (0+255)
  4414  041F  0086               	movwf	6
  4415  0420  0187               	clrf	7
  4416  0421  0852               	movf	??_LIN_receivePacket,w
  4417  0422  0081               	movwf	1
  4418  0423  3001               	movlw	1
  4419  0424  00D2               	movwf	??_LIN_receivePacket
  4420  0425  0852               	movf	??_LIN_receivePacket,w
  4421  0426  07A9               	addwf	LIN_receivePacket@rxIndex,f
  4422                           
  4423                           ;lin_master.c: 168: __nop();
  4424  0427  0000               	nop
  4425                           
  4426                           ;lin_master.c: 169: } else {
  4427  0428  2C3F               	goto	l2266
  4428  0429                     l2258:	
  4429                           
  4430                           ;lin_master.c: 170: rxIndex = 0;
  4431  0429  0020               	movlb	0	; select bank0
  4432  042A  01A9               	clrf	LIN_receivePacket@rxIndex
  4433                           
  4434                           ;lin_master.c: 172: if(EUSART_Read() == LIN_getChecksum(LIN_rxPacket.rxLength, LIN_rxPac
      +                          ket.data))
  4435  042B  30B2               	movlw	(low ((_LIN_rxPacket| 0+2)))& (0+255)
  4436  042C  00D2               	movwf	??_LIN_receivePacket
  4437  042D  0852               	movf	??_LIN_receivePacket,w
  4438  042E  00CC               	movwf	LIN_getChecksum@data
  4439  042F  0021               	movlb	1	; select bank1
  4440  0430  0831               	movf	(_LIN_rxPacket^(0+128)+1),w
  4441  0431  3184  246E  3184   	fcall	_LIN_getChecksum
  4442  0434  0020               	movlb	0	; select bank0
  4443  0435  00D3               	movwf	??_LIN_receivePacket+1
  4444  0436  3184  24C3  3184   	fcall	_EUSART_Read
  4445  0439  0020               	movlb	0	; select bank0
  4446  043A  0653               	xorwf	??_LIN_receivePacket+1,w
  4447  043B  1D03               	skipz
  4448  043C  2C3F               	goto	l2266
  4449                           
  4450                           ;lin_master.c: 173: return 1;
  4451  043D  3001               	movlw	1
  4452  043E  0008               	return
  4453  043F                     l2266:	
  4454                           
  4455                           ;lin_master.c: 175: }
  4456                           ;lin_master.c: 177: return 0;
  4457  043F  3000               	movlw	0
  4458  0440  0008               	return
  4459  0441                     __end_of_LIN_receivePacket:	
  4460                           
  4461                           	psect	text31
  4462  046E                     __ptext31:	
  4463 ;; *************** function _LIN_getChecksum *****************
  4464 ;; Defined at:
  4465 ;;		line 228 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;  length          1    wreg     unsigned char 
  4468 ;;  data            1    8[BANK0 ] PTR unsigned char 
  4469 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  length          1   10[BANK0 ] unsigned char 
  4472 ;;  i               1   11[BANK0 ] unsigned char 
  4473 ;;  checksum        2   12[BANK0 ] unsigned int 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  1    wreg      unsigned char 
  4476 ;; Registers used:
  4477 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4483 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4484 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4485 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;Total ram usage:        6 bytes
  4488 ;; Hardware stack levels used:    1
  4489 ;; Hardware stack levels required when called:    6
  4490 ;; This function calls:
  4491 ;;		Nothing
  4492 ;; This function is called by:
  4493 ;;		_LIN_queuePacket
  4494 ;;		_LIN_receivePacket
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           
  4499                           ;psect for function _LIN_getChecksum
  4500  046E                     _LIN_getChecksum:	
  4501                           
  4502                           ;incstack = 0
  4503                           ; Regs used in _LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  4504                           ;LIN_getChecksum@length stored from wreg
  4505  046E  0020               	movlb	0	; select bank0
  4506  046F  00CE               	movwf	LIN_getChecksum@length
  4507                           
  4508                           ;lin_master.c: 229: uint16_t checksum = 0;
  4509  0470  01D0               	clrf	LIN_getChecksum@checksum
  4510  0471  01D1               	clrf	LIN_getChecksum@checksum+1
  4511                           
  4512                           ;lin_master.c: 231: for (uint8_t i = 0; i < length; i++){
  4513  0472  01CF               	clrf	LIN_getChecksum@i
  4514  0473                     l2128:	
  4515  0473  084E               	movf	LIN_getChecksum@length,w
  4516  0474  024F               	subwf	LIN_getChecksum@i,w
  4517  0475  1803               	btfsc	3,0
  4518  0476  2C95               	goto	l461
  4519                           
  4520                           ;lin_master.c: 232: checksum = checksum + *data++;
  4521  0477  084C               	movf	LIN_getChecksum@data,w
  4522  0478  0086               	movwf	6
  4523  0479  0187               	clrf	7
  4524  047A  0801               	movf	1,w
  4525  047B  0750               	addwf	LIN_getChecksum@checksum,w
  4526  047C  00D0               	movwf	LIN_getChecksum@checksum
  4527  047D  0851               	movf	LIN_getChecksum@checksum+1,w
  4528  047E  1803               	skipnc
  4529  047F  0A51               	incf	LIN_getChecksum@checksum+1,w
  4530  0480  00D1               	movwf	LIN_getChecksum@checksum+1
  4531  0481  3001               	movlw	1
  4532  0482  00CD               	movwf	??_LIN_getChecksum
  4533  0483  084D               	movf	??_LIN_getChecksum,w
  4534  0484  07CC               	addwf	LIN_getChecksum@data,f
  4535                           
  4536                           ;lin_master.c: 233: if(checksum > 0xFF)
  4537  0485  3001               	movlw	1
  4538  0486  0251               	subwf	LIN_getChecksum@checksum+1,w
  4539  0487  3000               	movlw	0
  4540  0488  1903               	skipnz
  4541  0489  0250               	subwf	LIN_getChecksum@checksum,w
  4542  048A  1C03               	skipc
  4543  048B  2C90               	goto	l2126
  4544                           
  4545                           ;lin_master.c: 234: checksum -= 0xFF;
  4546  048C  30FF               	movlw	255
  4547  048D  02D0               	subwf	LIN_getChecksum@checksum,f
  4548  048E  3000               	movlw	0
  4549  048F  3BD1               	subwfb	LIN_getChecksum@checksum+1,f
  4550  0490                     l2126:	
  4551  0490  3001               	movlw	1
  4552  0491  00CD               	movwf	??_LIN_getChecksum
  4553  0492  084D               	movf	??_LIN_getChecksum,w
  4554  0493  07CF               	addwf	LIN_getChecksum@i,f
  4555  0494  2C73               	goto	l2128
  4556  0495                     l461:	
  4557                           
  4558                           ;lin_master.c: 235: }
  4559                           ;lin_master.c: 236: checksum = ~checksum;
  4560  0495  09D0               	comf	LIN_getChecksum@checksum,f
  4561  0496  09D1               	comf	LIN_getChecksum@checksum+1,f
  4562                           
  4563                           ;lin_master.c: 238: return (uint8_t)checksum;
  4564  0497  0850               	movf	LIN_getChecksum@checksum,w
  4565  0498  0008               	return
  4566  0499                     __end_of_LIN_getChecksum:	
  4567                           
  4568                           	psect	text32
  4569  04C3                     __ptext32:	
  4570 ;; *************** function _EUSART_Read *****************
  4571 ;; Defined at:
  4572 ;;		line 148 in file "mcc_generated_files/eusart.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;		None
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  readValue       1    9[BANK0 ] unsigned char 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      unsigned char 
  4579 ;; Registers used:
  4580 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4587 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4588 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4589 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4590 ;;Total ram usage:        2 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    6
  4593 ;; This function calls:
  4594 ;;		Nothing
  4595 ;; This function is called by:
  4596 ;;		_LIN_receivePacket
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           
  4601                           ;psect for function _EUSART_Read
  4602  04C3                     _EUSART_Read:	
  4603                           
  4604                           ;eusart.c: 150: uint8_t readValue = 0;
  4605                           
  4606                           ;incstack = 0
  4607                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  4608  04C3  0020               	movlb	0	; select bank0
  4609  04C4  01CD               	clrf	EUSART_Read@readValue
  4610  04C5                     l2058:	
  4611                           ;eusart.c: 153: {
  4612                           
  4613                           ;eusart.c: 152: while(0 == eusartRxCount)
  4614                           
  4615  04C5  0831               	movf	_eusartRxCount,w	;volatile
  4616  04C6  1903               	btfsc	3,2
  4617  04C7  2CC5               	goto	l2058
  4618                           
  4619                           ;eusart.c: 154: }
  4620                           ;eusart.c: 156: eusartRxLastError = eusartRxStatusBuffer[eusartRxTail];
  4621  04C8  0832               	movf	_eusartRxTail,w	;volatile
  4622  04C9  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4623  04CA  0086               	movwf	6
  4624  04CB  0187               	clrf	7
  4625  04CC  0801               	movf	1,w
  4626  04CD  00CC               	movwf	??_EUSART_Read
  4627  04CE  084C               	movf	??_EUSART_Read,w
  4628  04CF  00B0               	movwf	_eusartRxLastError	;volatile
  4629                           
  4630                           ;eusart.c: 158: readValue = eusartRxBuffer[eusartRxTail++];
  4631  04D0  0832               	movf	_eusartRxTail,w
  4632  04D1  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4633  04D2  0086               	movwf	6
  4634  04D3  0187               	clrf	7
  4635  04D4  0801               	movf	1,w
  4636  04D5  00CC               	movwf	??_EUSART_Read
  4637  04D6  084C               	movf	??_EUSART_Read,w
  4638  04D7  00CD               	movwf	EUSART_Read@readValue
  4639  04D8  3001               	movlw	1
  4640  04D9  00CC               	movwf	??_EUSART_Read
  4641  04DA  084C               	movf	??_EUSART_Read,w
  4642  04DB  07B2               	addwf	_eusartRxTail,f	;volatile
  4643                           
  4644                           ;eusart.c: 159: if(sizeof(eusartRxBuffer) <= eusartRxTail)
  4645  04DC  3008               	movlw	8
  4646  04DD  0232               	subwf	_eusartRxTail,w	;volatile
  4647  04DE  1803               	btfsc	3,0
  4648                           
  4649                           ;eusart.c: 160: {
  4650                           ;eusart.c: 161: eusartRxTail = 0;
  4651  04DF  01B2               	clrf	_eusartRxTail	;volatile
  4652                           
  4653                           ;eusart.c: 162: }
  4654                           ;eusart.c: 163: PIE1bits.RCIE = 0;
  4655  04E0  0021               	movlb	1	; select bank1
  4656  04E1  1291               	bcf	17,5	;volatile
  4657                           
  4658                           ;eusart.c: 164: eusartRxCount--;
  4659  04E2  3001               	movlw	1
  4660  04E3  0020               	movlb	0	; select bank0
  4661  04E4  02B1               	subwf	_eusartRxCount,f	;volatile
  4662                           
  4663                           ;eusart.c: 165: PIE1bits.RCIE = 1;
  4664  04E5  0021               	movlb	1	; select bank1
  4665  04E6  1691               	bsf	17,5	;volatile
  4666                           
  4667                           ;eusart.c: 167: return readValue;
  4668  04E7  0020               	movlb	0	; select bank0
  4669  04E8  084D               	movf	EUSART_Read@readValue,w
  4670  04E9  0008               	return
  4671  04EA                     __end_of_EUSART_Read:	
  4672                           
  4673                           	psect	text33
  4674  06C9                     __ptext33:	
  4675 ;; *************** function _LIN_enableRx *****************
  4676 ;; Defined at:
  4677 ;;		line 284 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;		None
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;		None
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		None
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4695 ;;Total ram usage:        0 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; Hardware stack levels required when called:    6
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_LIN_handler
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           
  4706                           ;psect for function _LIN_enableRx
  4707  06C9                     _LIN_enableRx:	
  4708                           
  4709                           ;lin_master.c: 285: RCSTAbits.CREN = 1;
  4710                           
  4711                           ;incstack = 0
  4712                           ; Regs used in _LIN_enableRx: []
  4713  06C9  0023               	movlb	3	; select bank3
  4714  06CA  161D               	bsf	29,4	;volatile
  4715                           
  4716                           ;lin_master.c: 286: PIE1bits.RCIE = 1;
  4717  06CB  0021               	movlb	1	; select bank1
  4718  06CC  1691               	bsf	17,5	;volatile
  4719  06CD  0008               	return
  4720  06CE                     __end_of_LIN_enableRx:	
  4721                           
  4722                           	psect	text34
  4723  06CE                     __ptext34:	
  4724 ;; *************** function _LIN_disableRx *****************
  4725 ;; Defined at:
  4726 ;;		line 289 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;		None
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      void 
  4733 ;; Registers used:
  4734 ;;		None
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4744 ;;Total ram usage:        0 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    6
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_LIN_handler
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           
  4755                           ;psect for function _LIN_disableRx
  4756  06CE                     _LIN_disableRx:	
  4757                           
  4758                           ;lin_master.c: 290: RCSTAbits.CREN = 0;
  4759                           
  4760                           ;incstack = 0
  4761                           ; Regs used in _LIN_disableRx: []
  4762  06CE  0023               	movlb	3	; select bank3
  4763  06CF  121D               	bcf	29,4	;volatile
  4764                           
  4765                           ;lin_master.c: 291: PIE1bits.RCIE = 0;
  4766  06D0  0021               	movlb	1	; select bank1
  4767  06D1  1291               	bcf	17,5	;volatile
  4768  06D2  0008               	return
  4769  06D3                     __end_of_LIN_disableRx:	
  4770                           
  4771                           	psect	text35
  4772  06ED                     __ptext35:	
  4773 ;; *************** function _EUSART_is_rx_ready *****************
  4774 ;; Defined at:
  4775 ;;		line 134 in file "mcc_generated_files/eusart.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;		None
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;		None
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  1    wreg      unsigned char 
  4782 ;; Registers used:
  4783 ;;		wreg
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4793 ;;Total ram usage:        0 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; Hardware stack levels required when called:    6
  4796 ;; This function calls:
  4797 ;;		Nothing
  4798 ;; This function is called by:
  4799 ;;		_LIN_handler
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           
  4804                           ;psect for function _EUSART_is_rx_ready
  4805  06ED                     _EUSART_is_rx_ready:	
  4806                           
  4807                           ;eusart.c: 136: return eusartRxCount;
  4808                           
  4809                           ;incstack = 0
  4810                           ; Regs used in _EUSART_is_rx_ready: [wreg]
  4811  06ED  0020               	movlb	0	; select bank0
  4812  06EE  0831               	movf	_eusartRxCount,w	;volatile
  4813  06EF  0008               	return
  4814  06F0                     __end_of_EUSART_is_rx_ready:	
  4815                           
  4816                           	psect	intentry
  4817  0004                     __pintentry:	
  4818 ;; *************** function _INTERRUPT_InterruptManager *****************
  4819 ;; Defined at:
  4820 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;		None
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;		None
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      void 
  4827 ;; Registers used:
  4828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;Total ram usage:        1 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    5
  4841 ;; This function calls:
  4842 ;;		Absolute function
  4843 ;;		_EUSART_Receive_ISR
  4844 ;;		_EUSART_Transmit_ISR
  4845 ;;		_TMR2_ISR
  4846 ;; This function is called by:
  4847 ;;		Interrupt level 1
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851  0004                     _INTERRUPT_InterruptManager:	
  4852                           
  4853                           ;incstack = 0
  4854  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4855                           
  4856                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4857  0005  3180               	pagesel	$
  4858  0006  0020               	movlb	0	; select bank0
  4859  0007  087F               	movf	127,w
  4860  0008  00CB               	movwf	??_INTERRUPT_InterruptManager
  4861                           
  4862                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  4863  0009  1F0B               	btfss	11,6	;volatile
  4864  000A  282B               	goto	i1l33
  4865                           
  4866                           ;interrupt_manager.c: 56: {
  4867                           ;interrupt_manager.c: 57: if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  4868  000B  0021               	movlb	1	; select bank1
  4869  000C  1E11               	btfss	17,4	;volatile
  4870  000D  2817               	goto	i1l26
  4871  000E  0020               	movlb	0	; select bank0
  4872  000F  1E11               	btfss	17,4	;volatile
  4873  0010  2817               	goto	i1l26
  4874                           
  4875                           ;interrupt_manager.c: 58: {
  4876                           ;interrupt_manager.c: 59: EUSART_TxDefaultInterruptHandler();
  4877  0011  0864               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  4878  0012  008A               	movwf	10
  4879  0013  0863               	movf	_EUSART_TxDefaultInterruptHandler,w
  4880  0014  000A               	callw
  4881  0015  3180               	pagesel	$
  4882                           
  4883                           ;interrupt_manager.c: 60: }
  4884  0016  282B               	goto	i1l33
  4885  0017                     i1l26:	
  4886                           
  4887                           ;interrupt_manager.c: 61: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  4888  0017  0021               	movlb	1	; select bank1
  4889  0018  1E91               	btfss	17,5	;volatile
  4890  0019  2823               	goto	i1l28
  4891  001A  0020               	movlb	0	; select bank0
  4892  001B  1E91               	btfss	17,5	;volatile
  4893  001C  2823               	goto	i1l28
  4894                           
  4895                           ;interrupt_manager.c: 62: {
  4896                           ;interrupt_manager.c: 63: EUSART_RxDefaultInterruptHandler();
  4897  001D  0862               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  4898  001E  008A               	movwf	10
  4899  001F  0861               	movf	_EUSART_RxDefaultInterruptHandler,w
  4900  0020  000A               	callw
  4901  0021  3180               	pagesel	$
  4902                           
  4903                           ;interrupt_manager.c: 64: }
  4904  0022  282B               	goto	i1l33
  4905  0023                     i1l28:	
  4906                           
  4907                           ;interrupt_manager.c: 65: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4908  0023  0021               	movlb	1	; select bank1
  4909  0024  1C91               	btfss	17,1	;volatile
  4910  0025  282B               	goto	i1l33
  4911  0026  0020               	movlb	0	; select bank0
  4912  0027  1C91               	btfss	17,1	;volatile
  4913  0028  282B               	goto	i1l33
  4914                           
  4915                           ;interrupt_manager.c: 66: {
  4916                           ;interrupt_manager.c: 67: TMR2_ISR();
  4917  0029  3186  2679         	fcall	_TMR2_ISR
  4918  002B                     i1l33:	
  4919                           ;interrupt_manager.c: 74: else
  4920                           ;interrupt_manager.c: 75: {
  4921                           
  4922                           ;interrupt_manager.c: 72: }
  4923                           ;interrupt_manager.c: 73: }
  4924                           
  4925                           ;interrupt_manager.c: 69: else
  4926                           ;interrupt_manager.c: 70: {
  4927                           
  4928                           ;interrupt_manager.c: 68: }
  4929                           
  4930  002B  0020               	movlb	0	; select bank0
  4931  002C  084B               	movf	??_INTERRUPT_InterruptManager,w
  4932  002D  00FF               	movwf	127
  4933  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4934  002F  0009               	retfie
  4935  0030                     __end_of_INTERRUPT_InterruptManager:	
  4936                           
  4937                           	psect	text37
  4938  0679                     __ptext37:	
  4939 ;; *************** function _TMR2_ISR *****************
  4940 ;; Defined at:
  4941 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;		None
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;		None
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  1    wreg      void 
  4948 ;; Registers used:
  4949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4959 ;;Total ram usage:        0 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; Hardware stack levels required when called:    4
  4962 ;; This function calls:
  4963 ;;		Absolute function
  4964 ;;		_LIN_timerHandler
  4965 ;;		_TMR2_DefaultInterruptHandler
  4966 ;; This function is called by:
  4967 ;;		_INTERRUPT_InterruptManager
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           
  4972                           ;psect for function _TMR2_ISR
  4973  0679                     _TMR2_ISR:	
  4974                           
  4975                           ;tmr2.c: 123: PIR1bits.TMR2IF = 0;
  4976                           
  4977                           ;incstack = 0
  4978                           ; Regs used in _TMR2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4979  0679  0020               	movlb	0	; select bank0
  4980  067A  1091               	bcf	17,1	;volatile
  4981                           
  4982                           ;tmr2.c: 125: if(TMR2_InterruptHandler)
  4983  067B  085D               	movf	_TMR2_InterruptHandler,w
  4984  067C  045E               	iorwf	_TMR2_InterruptHandler+1,w
  4985  067D  1903               	btfsc	3,2
  4986  067E  0008               	return
  4987                           
  4988                           ;tmr2.c: 126: {
  4989                           ;tmr2.c: 127: TMR2_InterruptHandler();
  4990  067F  085E               	movf	_TMR2_InterruptHandler+1,w
  4991  0680  008A               	movwf	10
  4992  0681  085D               	movf	_TMR2_InterruptHandler,w
  4993  0682  000A               	callw
  4994  0683  3186               	pagesel	$
  4995  0684  0008               	return
  4996  0685                     __end_of_TMR2_ISR:	
  4997                           
  4998                           	psect	text38
  4999  0533                     __ptext38:	
  5000 ;; *************** function _LIN_timerHandler *****************
  5001 ;; Defined at:
  5002 ;;		line 248 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;		None
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      void 
  5009 ;; Registers used:
  5010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5018 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5019 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5020 ;;Total ram usage:        1 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; Hardware stack levels required when called:    3
  5023 ;; This function calls:
  5024 ;;		_LIN_sendPeriodicTx
  5025 ;;		i1_LIN_stopTimer
  5026 ;; This function is called by:
  5027 ;;		_LIN_setTimerHandler
  5028 ;;		_TMR2_ISR
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           
  5033                           ;psect for function _LIN_timerHandler
  5034  0533                     _LIN_timerHandler:	
  5035                           
  5036                           ;lin_master.c: 250: if(LIN_timerRunning == 1){
  5037                           
  5038                           ;incstack = 0
  5039                           ; Regs used in _LIN_timerHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5040  0533  0020               	movlb	0	; select bank0
  5041  0534  032D               	decf	_LIN_timerRunning,w
  5042  0535  1D03               	btfss	3,2
  5043  0536  2D42               	goto	i1l1876
  5044                           
  5045                           ;lin_master.c: 251: if (++LIN_timerCallBack >= LIN_timeout){
  5046  0537  3001               	movlw	1
  5047  0538  00CA               	movwf	??_LIN_timerHandler
  5048  0539  084A               	movf	??_LIN_timerHandler,w
  5049  053A  07AC               	addwf	_LIN_timerCallBack,f	;volatile
  5050  053B  0867               	movf	_LIN_timeout,w
  5051  053C  022C               	subwf	_LIN_timerCallBack,w	;volatile
  5052  053D  1C03               	skipc
  5053  053E  2D42               	goto	i1l1876
  5054                           
  5055                           ;lin_master.c: 253: LIN_stopTimer();
  5056  053F  3186  26DF  3185   	fcall	i1_LIN_stopTimer
  5057  0542                     i1l1876:	
  5058                           
  5059                           ;lin_master.c: 254: }
  5060                           ;lin_master.c: 255: }
  5061                           ;lin_master.c: 256: if(LIN_enablePeriodTx == 1){
  5062  0542  0021               	movlb	1	; select bank1
  5063  0543  0355               	decf	_LIN_enablePeriodTx^(0+128),w
  5064  0544  1D03               	btfss	3,2
  5065  0545  0008               	return
  5066                           
  5067                           ;lin_master.c: 257: if(++LIN_periodCallBack >= LIN_period){
  5068  0546  3001               	movlw	1
  5069  0547  0020               	movlb	0	; select bank0
  5070  0548  00CA               	movwf	??_LIN_timerHandler
  5071  0549  084A               	movf	??_LIN_timerHandler,w
  5072  054A  07AB               	addwf	_LIN_periodCallBack,f	;volatile
  5073  054B  082E               	movf	_LIN_period,w
  5074  054C  022B               	subwf	_LIN_periodCallBack,w	;volatile
  5075  054D  1C03               	skipc
  5076  054E  0008               	return
  5077                           
  5078                           ;lin_master.c: 258: LIN_sendPeriodicTx();
  5079  054F  3182  223B         	fcall	_LIN_sendPeriodicTx
  5080  0551  0008               	return
  5081  0552                     __end_of_LIN_timerHandler:	
  5082                           
  5083                           	psect	text39
  5084  06F4                     __ptext39:	
  5085 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  5086 ;; Defined at:
  5087 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;		None
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;		None
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  1    wreg      void 
  5094 ;; Registers used:
  5095 ;;		None
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;Total ram usage:        0 bytes
  5106 ;; Hardware stack levels used:    1
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_TMR2_Initialize
  5111 ;;		_TMR2_ISR
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           
  5116                           ;psect for function _TMR2_DefaultInterruptHandler
  5117  06F4                     _TMR2_DefaultInterruptHandler:	
  5118                           
  5119                           ;incstack = 0
  5120                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  5121  06F4  0008               	return
  5122  06F5                     __end_of_TMR2_DefaultInterruptHandler:	
  5123                           
  5124                           	psect	text40
  5125  06DF                     __ptext40:	
  5126 ;; *************** function i1_LIN_stopTimer *****************
  5127 ;; Defined at:
  5128 ;;		line 268 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;		None
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;		None
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  1    wreg      void 
  5135 ;; Registers used:
  5136 ;;		status,2
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5146 ;;Total ram usage:        0 bytes
  5147 ;; Hardware stack levels used:    1
  5148 ;; This function calls:
  5149 ;;		Nothing
  5150 ;; This function is called by:
  5151 ;;		_LIN_timerHandler
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           
  5156                           ;psect for function i1_LIN_stopTimer
  5157  06DF                     i1_LIN_stopTimer:	
  5158                           
  5159                           ;lin_master.c: 270: LIN_timerCallBack = 0;
  5160                           
  5161                           ;incstack = 0
  5162                           ; Regs used in i1_LIN_stopTimer: [status,2]
  5163  06DF  0020               	movlb	0	; select bank0
  5164  06E0  01AC               	clrf	_LIN_timerCallBack	;volatile
  5165                           
  5166                           ;lin_master.c: 271: LIN_timerRunning = 0;
  5167  06E1  01AD               	clrf	_LIN_timerRunning
  5168  06E2  0008               	return
  5169  06E3                     __end_ofi1_LIN_stopTimer:	
  5170                           
  5171                           	psect	text41
  5172  023B                     __ptext41:	
  5173 ;; *************** function _LIN_sendPeriodicTx *****************
  5174 ;; Defined at:
  5175 ;;		line 298 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;		None
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;  periodicTx      2    4[BANK0 ] PTR const struct .
  5180 ;;		 -> ROM(8192), scheduleTable(24), 
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  1    wreg      void 
  5183 ;; Registers used:
  5184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5191 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5192 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5193 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5194 ;;Total ram usage:        5 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; Hardware stack levels required when called:    2
  5197 ;; This function calls:
  5198 ;;		___wmul
  5199 ;;		i1_LIN_queuePacket
  5200 ;; This function is called by:
  5201 ;;		_LIN_timerHandler
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           
  5206                           ;psect for function _LIN_sendPeriodicTx
  5207  023B                     _LIN_sendPeriodicTx:	
  5208                           
  5209                           ;lin_master.c: 299: static volatile uint8_t scheduleIndex = 0;
  5210                           ;lin_master.c: 300: const lin_cmd_packet_t* periodicTx;
  5211                           ;lin_master.c: 302: LIN_periodCallBack = 0;
  5212                           
  5213                           ;incstack = 0
  5214                           ; Regs used in _LIN_sendPeriodicTx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5215  023B  0020               	movlb	0	; select bank0
  5216  023C  01AB               	clrf	_LIN_periodCallBack	;volatile
  5217                           
  5218                           ;lin_master.c: 303: periodicTx = schedule + scheduleIndex;
  5219  023D  0828               	movf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  5220  023E  00FB               	movwf	??_LIN_sendPeriodicTx
  5221  023F  01FC               	clrf	??_LIN_sendPeriodicTx+1
  5222  0240  087B               	movf	??_LIN_sendPeriodicTx,w
  5223  0241  00F0               	movwf	___wmul@multiplier
  5224  0242  087C               	movf	??_LIN_sendPeriodicTx+1,w
  5225  0243  00F1               	movwf	___wmul@multiplier+1
  5226  0244  3006               	movlw	6
  5227  0245  00F2               	movwf	___wmul@multiplicand
  5228  0246  3000               	movlw	0
  5229  0247  00F3               	movwf	___wmul@multiplicand+1
  5230  0248  3185  25A6  3182   	fcall	___wmul
  5231  024B  0870               	movf	?___wmul,w
  5232  024C  0020               	movlb	0	; select bank0
  5233  024D  075B               	addwf	_schedule,w
  5234  024E  00C8               	movwf	LIN_sendPeriodicTx@periodicTx
  5235  024F  0871               	movf	?___wmul+1,w
  5236  0250  3D5C               	addwfc	_schedule+1,w
  5237  0251  00C9               	movwf	LIN_sendPeriodicTx@periodicTx+1
  5238                           
  5239                           ;lin_master.c: 305: if(periodicTx->period > 0){
  5240  0252  0849               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5241  0253  00FC               	movwf	??_LIN_sendPeriodicTx+1
  5242  0254  0848               	movf	LIN_sendPeriodicTx@periodicTx,w
  5243  0255  00FB               	movwf	??_LIN_sendPeriodicTx
  5244  0256  3004               	movlw	4
  5245  0257  077B               	addwf	??_LIN_sendPeriodicTx,w
  5246  0258  0084               	movwf	4
  5247  0259  087C               	movf	??_LIN_sendPeriodicTx+1,w
  5248  025A  1803               	skipnc
  5249  025B  0A7C               	incf	??_LIN_sendPeriodicTx+1,w
  5250  025C  0085               	movwf	5
  5251  025D  0012               	moviw fsr0++
  5252  025E  1903               	btfsc	3,2
  5253  025F  2A77               	goto	i1l1720
  5254                           
  5255                           ;lin_master.c: 306: LIN_queuePacket(periodicTx->cmd, periodicTx->data);
  5256  0260  0849               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5257  0261  00FC               	movwf	??_LIN_sendPeriodicTx+1
  5258  0262  0848               	movf	LIN_sendPeriodicTx@periodicTx,w
  5259  0263  00FB               	movwf	??_LIN_sendPeriodicTx
  5260  0264  3005               	movlw	5
  5261  0265  077B               	addwf	??_LIN_sendPeriodicTx,w
  5262  0266  0084               	movwf	4
  5263  0267  087C               	movf	??_LIN_sendPeriodicTx+1,w
  5264  0268  1803               	skipnc
  5265  0269  0A7C               	incf	??_LIN_sendPeriodicTx+1,w
  5266  026A  0085               	movwf	5
  5267  026B  0800               	movf	0,w	;code access
  5268  026C  00FD               	movwf	??_LIN_sendPeriodicTx+2
  5269  026D  087D               	movf	??_LIN_sendPeriodicTx+2,w
  5270  026E  00F6               	movwf	i1LIN_queuePacket@data
  5271  026F  0848               	movf	LIN_sendPeriodicTx@periodicTx,w
  5272  0270  0084               	movwf	4
  5273  0271  0849               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5274  0272  0085               	movwf	5
  5275  0273  0800               	movf	0,w	;code access
  5276  0274  3181  2100  3182   	fcall	i1_LIN_queuePacket
  5277  0277                     i1l1720:	
  5278                           ;lin_master.c: 307: }
  5279                           ;lin_master.c: 309: do{
  5280                           
  5281                           
  5282                           ;lin_master.c: 310: if(++scheduleIndex >= scheduleLength){
  5283  0277  3001               	movlw	1
  5284  0278  00FB               	movwf	??_LIN_sendPeriodicTx
  5285  0279  087B               	movf	??_LIN_sendPeriodicTx,w
  5286  027A  0020               	movlb	0	; select bank0
  5287  027B  07A8               	addwf	LIN_sendPeriodicTx@scheduleIndex,f	;volatile
  5288  027C  0865               	movf	_scheduleLength,w
  5289  027D  0228               	subwf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  5290  027E  1803               	btfsc	3,0
  5291                           
  5292                           ;lin_master.c: 311: scheduleIndex = 0;
  5293  027F  01A8               	clrf	LIN_sendPeriodicTx@scheduleIndex	;volatile
  5294                           
  5295                           ;lin_master.c: 312: }
  5296                           ;lin_master.c: 313: periodicTx = schedule + scheduleIndex;
  5297  0280  0828               	movf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  5298  0281  00FB               	movwf	??_LIN_sendPeriodicTx
  5299  0282  01FC               	clrf	??_LIN_sendPeriodicTx+1
  5300  0283  087B               	movf	??_LIN_sendPeriodicTx,w
  5301  0284  00F0               	movwf	___wmul@multiplier
  5302  0285  087C               	movf	??_LIN_sendPeriodicTx+1,w
  5303  0286  00F1               	movwf	___wmul@multiplier+1
  5304  0287  3006               	movlw	6
  5305  0288  00F2               	movwf	___wmul@multiplicand
  5306  0289  3000               	movlw	0
  5307  028A  00F3               	movwf	___wmul@multiplicand+1
  5308  028B  3185  25A6  3182   	fcall	___wmul
  5309  028E  0870               	movf	?___wmul,w
  5310  028F  0020               	movlb	0	; select bank0
  5311  0290  075B               	addwf	_schedule,w
  5312  0291  00C8               	movwf	LIN_sendPeriodicTx@periodicTx
  5313  0292  0871               	movf	?___wmul+1,w
  5314  0293  3D5C               	addwfc	_schedule+1,w
  5315  0294  00C9               	movwf	LIN_sendPeriodicTx@periodicTx+1
  5316                           
  5317                           ;lin_master.c: 314: } while(periodicTx->period == 0);
  5318  0295  0849               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5319  0296  00FC               	movwf	??_LIN_sendPeriodicTx+1
  5320  0297  0848               	movf	LIN_sendPeriodicTx@periodicTx,w
  5321  0298  00FB               	movwf	??_LIN_sendPeriodicTx
  5322  0299  3004               	movlw	4
  5323  029A  077B               	addwf	??_LIN_sendPeriodicTx,w
  5324  029B  0084               	movwf	4
  5325  029C  087C               	movf	??_LIN_sendPeriodicTx+1,w
  5326  029D  1803               	skipnc
  5327  029E  0A7C               	incf	??_LIN_sendPeriodicTx+1,w
  5328  029F  0085               	movwf	5
  5329  02A0  0012               	moviw fsr0++
  5330  02A1  1903               	btfsc	3,2
  5331  02A2  2A77               	goto	i1l1720
  5332                           
  5333                           ;lin_master.c: 316: LIN_period = periodicTx->period;
  5334  02A3  0849               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5335  02A4  00FC               	movwf	??_LIN_sendPeriodicTx+1
  5336  02A5  0848               	movf	LIN_sendPeriodicTx@periodicTx,w
  5337  02A6  00FB               	movwf	??_LIN_sendPeriodicTx
  5338  02A7  3004               	movlw	4
  5339  02A8  077B               	addwf	??_LIN_sendPeriodicTx,w
  5340  02A9  0084               	movwf	4
  5341  02AA  087C               	movf	??_LIN_sendPeriodicTx+1,w
  5342  02AB  1803               	skipnc
  5343  02AC  0A7C               	incf	??_LIN_sendPeriodicTx+1,w
  5344  02AD  0085               	movwf	5
  5345  02AE  0800               	movf	0,w	;code access
  5346  02AF  00FD               	movwf	??_LIN_sendPeriodicTx+2
  5347  02B0  087D               	movf	??_LIN_sendPeriodicTx+2,w
  5348  02B1  00AE               	movwf	_LIN_period
  5349  02B2  0008               	return
  5350  02B3                     __end_of_LIN_sendPeriodicTx:	
  5351                           
  5352                           	psect	text42
  5353  0100                     __ptext42:	
  5354 ;; *************** function i1_LIN_queuePacket *****************
  5355 ;; Defined at:
  5356 ;;		line 70 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;  cmd             1    wreg     unsigned char 
  5359 ;;  data            1    6[COMMON] PTR unsigned char 
  5360 ;;		 -> main@data_to_send(1), SIGNAL_Data(1), LFRX_Data(8), RSSI_Data(1), 
  5361 ;;		 -> UNLOCK_Data(1), 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  cmd             1    0[BANK0 ] unsigned char 
  5364 ;;  LIN_queuePac    2    2[BANK0 ] PTR const struct .
  5365 ;;		 -> ROM(8192), scheduleTable(24), 
  5366 ;;  LIN_queuePac    1    1[BANK0 ] unsigned char 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      void 
  5369 ;; Registers used:
  5370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5376 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5377 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5378 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;Total ram usage:        9 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; Hardware stack levels required when called:    1
  5383 ;; This function calls:
  5384 ;;		i1_LIN_calcParity
  5385 ;;		i1_LIN_getChecksum
  5386 ;; This function is called by:
  5387 ;;		_LIN_sendPeriodicTx
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           
  5392                           ;psect for function i1_LIN_queuePacket
  5393  0100                     i1_LIN_queuePacket:	
  5394                           
  5395                           ;incstack = 0
  5396                           ; Regs used in i1_LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5397                           ;i1LIN_queuePacket@cmd stored from wreg
  5398  0100  0020               	movlb	0	; select bank0
  5399  0101  00C4               	movwf	i1LIN_queuePacket@cmd
  5400                           
  5401                           ;lin_master.c: 71: const lin_cmd_packet_t* tempSchedule = schedule;
  5402  0102  085C               	movf	_schedule+1,w
  5403  0103  00C7               	movwf	i1LIN_queuePacket@tempSchedule+1
  5404  0104  085B               	movf	_schedule,w
  5405  0105  00C6               	movwf	i1LIN_queuePacket@tempSchedule
  5406                           
  5407                           ;lin_master.c: 73: for(uint8_t i = 0; i < scheduleLength; i++){
  5408  0106  01C5               	clrf	i1LIN_queuePacket@i
  5409  0107                     i1l1592:	
  5410  0107  0865               	movf	_scheduleLength,w
  5411  0108  0245               	subwf	i1LIN_queuePacket@i,w
  5412  0109  1803               	btfsc	3,0
  5413  010A  291C               	goto	i1l1594
  5414                           
  5415                           ;lin_master.c: 74: if(cmd == tempSchedule->cmd){
  5416  010B  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5417  010C  0084               	movwf	4
  5418  010D  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5419  010E  0085               	movwf	5
  5420  010F  0800               	movf	0,w	;code access
  5421  0110  0644               	xorwf	i1LIN_queuePacket@cmd,w
  5422  0111  1903               	btfsc	3,2
  5423  0112  291C               	goto	i1l1594
  5424                           
  5425                           ;lin_master.c: 76: }
  5426                           ;lin_master.c: 77: tempSchedule++;
  5427                           
  5428                           ;lin_master.c: 75: break;
  5429  0113  3006               	movlw	6
  5430  0114  07C6               	addwf	i1LIN_queuePacket@tempSchedule,f
  5431  0115  3000               	movlw	0
  5432  0116  3DC7               	addwfc	i1LIN_queuePacket@tempSchedule+1,f
  5433  0117  3001               	movlw	1
  5434  0118  00F7               	movwf	??i1_LIN_queuePacket
  5435  0119  0877               	movf	??i1_LIN_queuePacket,w
  5436  011A  07C5               	addwf	i1LIN_queuePacket@i,f
  5437  011B  2907               	goto	i1l1592
  5438  011C                     i1l1594:	
  5439                           
  5440                           ;lin_master.c: 78: }
  5441                           ;lin_master.c: 81: LIN_packet.PID = LIN_calcParity(tempSchedule->cmd);
  5442  011C  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5443  011D  0084               	movwf	4
  5444  011E  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5445  011F  0085               	movwf	5
  5446  0120  0800               	movf	0,w	;code access
  5447  0121  3182  22B3  3181   	fcall	i1_LIN_calcParity
  5448  0124  00F7               	movwf	??i1_LIN_queuePacket
  5449  0125  0877               	movf	??i1_LIN_queuePacket,w
  5450  0126  0020               	movlb	0	; select bank0
  5451  0127  00B6               	movwf	_LIN_packet
  5452                           
  5453                           ;lin_master.c: 83: if(tempSchedule->type == TRANSMIT){
  5454  0128  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5455  0129  00F8               	movwf	??i1_LIN_queuePacket+1
  5456  012A  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5457  012B  00F7               	movwf	??i1_LIN_queuePacket
  5458  012C  3001               	movlw	1
  5459  012D  0777               	addwf	??i1_LIN_queuePacket,w
  5460  012E  0084               	movwf	4
  5461  012F  0878               	movf	??i1_LIN_queuePacket+1,w
  5462  0130  1803               	skipnc
  5463  0131  0A78               	incf	??i1_LIN_queuePacket+1,w
  5464  0132  0085               	movwf	5
  5465  0133  0012               	moviw fsr0++
  5466  0134  1D03               	btfss	3,2
  5467  0135  2988               	goto	i1l1608
  5468                           
  5469                           ;lin_master.c: 86: if(tempSchedule->length > 0){
  5470  0136  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5471  0137  00F8               	movwf	??i1_LIN_queuePacket+1
  5472  0138  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5473  0139  00F7               	movwf	??i1_LIN_queuePacket
  5474  013A  3002               	movlw	2
  5475  013B  0777               	addwf	??i1_LIN_queuePacket,w
  5476  013C  0084               	movwf	4
  5477  013D  0878               	movf	??i1_LIN_queuePacket+1,w
  5478  013E  1803               	skipnc
  5479  013F  0A78               	incf	??i1_LIN_queuePacket+1,w
  5480  0140  0085               	movwf	5
  5481  0141  0012               	moviw fsr0++
  5482  0142  1903               	btfsc	3,2
  5483  0143  2974               	goto	i1l410
  5484                           
  5485                           ;lin_master.c: 87: LIN_packet.length = tempSchedule->length;
  5486  0144  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5487  0145  00F8               	movwf	??i1_LIN_queuePacket+1
  5488  0146  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5489  0147  00F7               	movwf	??i1_LIN_queuePacket
  5490  0148  3002               	movlw	2
  5491  0149  0777               	addwf	??i1_LIN_queuePacket,w
  5492  014A  0084               	movwf	4
  5493  014B  0878               	movf	??i1_LIN_queuePacket+1,w
  5494  014C  1803               	skipnc
  5495  014D  0A78               	incf	??i1_LIN_queuePacket+1,w
  5496  014E  0085               	movwf	5
  5497  014F  0800               	movf	0,w	;code access
  5498  0150  00F9               	movwf	??i1_LIN_queuePacket+2
  5499  0151  0879               	movf	??i1_LIN_queuePacket+2,w
  5500  0152  00C0               	movwf	_LIN_packet+10
  5501                           
  5502                           ;lin_master.c: 88: __builtin_memcpy(LIN_packet.data,data,tempSchedule->length);
  5503  0153  3001               	movlw	1
  5504  0154  3E36               	addlw	(low (_LIN_packet| 0))& (0+255)
  5505  0155  0086               	movwf	6
  5506  0156  0187               	clrf	7
  5507  0157  0020               	movlb	0	; select bank0
  5508  0158  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5509  0159  00F8               	movwf	??i1_LIN_queuePacket+1
  5510  015A  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5511  015B  00F7               	movwf	??i1_LIN_queuePacket
  5512  015C  3002               	movlw	2
  5513  015D  0777               	addwf	??i1_LIN_queuePacket,w
  5514  015E  0084               	movwf	4
  5515  015F  0878               	movf	??i1_LIN_queuePacket+1,w
  5516  0160  1803               	skipnc
  5517  0161  0A78               	incf	??i1_LIN_queuePacket+1,w
  5518  0162  0085               	movwf	5
  5519  0163  0800               	movf	0,w	;code access
  5520  0164  00F9               	movwf	??i1_LIN_queuePacket+2
  5521  0165  01FA               	clrf	??i1_LIN_queuePacket+3
  5522  0166  0876               	movf	i1LIN_queuePacket@data,w
  5523  0167  0084               	movwf	4
  5524  0168  0185               	clrf	5
  5525  0169                     u147_2m0:	
  5526  0169  0012               	moviw fsr0++
  5527  016A  001E               	movwi fsr1++
  5528  016B  3001               	movlw	1
  5529  016C  02F9               	subwf	??i1_LIN_queuePacket+2,f
  5530  016D  3000               	movlw	0
  5531  016E  3BFA               	subwfb	??i1_LIN_queuePacket+3,f
  5532  016F  087A               	movf	??i1_LIN_queuePacket+3,w
  5533  0170  0479               	iorwf	??i1_LIN_queuePacket+2,w
  5534  0171  1D03               	btfss	3,2
  5535  0172  2969               	goto	u147_2m0
  5536  0173  297A               	goto	i1l1606
  5537  0174                     i1l410:	
  5538                           ;lin_master.c: 89: } else {
  5539                           
  5540                           
  5541                           ;lin_master.c: 90: LIN_packet.length = 1;
  5542  0174  01C0               	clrf	_LIN_packet+10
  5543  0175  0AC0               	incf	_LIN_packet+10,f
  5544                           
  5545                           ;lin_master.c: 91: LIN_packet.data[0] = 0xAA;
  5546  0176  30AA               	movlw	170
  5547  0177  00F7               	movwf	??i1_LIN_queuePacket
  5548  0178  0877               	movf	??i1_LIN_queuePacket,w
  5549  0179  00B7               	movwf	_LIN_packet+1
  5550  017A                     i1l1606:	
  5551                           
  5552                           ;lin_master.c: 92: }
  5553                           ;lin_master.c: 95: LIN_packet.checksum = LIN_getChecksum(LIN_packet.length, LIN_packet.d
      +                          ata);
  5554  017A  3037               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
  5555  017B  00F7               	movwf	??i1_LIN_queuePacket
  5556  017C  0877               	movf	??i1_LIN_queuePacket,w
  5557  017D  00F0               	movwf	i1LIN_getChecksum@data
  5558  017E  0020               	movlb	0	; select bank0
  5559  017F  0840               	movf	_LIN_packet+10,w
  5560  0180  3184  2499  3181   	fcall	i1_LIN_getChecksum
  5561  0183  00F8               	movwf	??i1_LIN_queuePacket+1
  5562  0184  0878               	movf	??i1_LIN_queuePacket+1,w
  5563  0185  0020               	movlb	0	; select bank0
  5564  0186  00BF               	movwf	_LIN_packet+9
  5565                           
  5566                           ;lin_master.c: 97: } else {
  5567  0187  29B3               	goto	i1l1610
  5568  0188                     i1l1608:	
  5569                           
  5570                           ;lin_master.c: 98: LIN_rxPacket.rxLength = tempSchedule->length;
  5571  0188  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5572  0189  00F8               	movwf	??i1_LIN_queuePacket+1
  5573  018A  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5574  018B  00F7               	movwf	??i1_LIN_queuePacket
  5575  018C  3002               	movlw	2
  5576  018D  0777               	addwf	??i1_LIN_queuePacket,w
  5577  018E  0084               	movwf	4
  5578  018F  0878               	movf	??i1_LIN_queuePacket+1,w
  5579  0190  1803               	skipnc
  5580  0191  0A78               	incf	??i1_LIN_queuePacket+1,w
  5581  0192  0085               	movwf	5
  5582  0193  0800               	movf	0,w	;code access
  5583  0194  00F9               	movwf	??i1_LIN_queuePacket+2
  5584  0195  0879               	movf	??i1_LIN_queuePacket+2,w
  5585  0196  0021               	movlb	1	; select bank1
  5586  0197  00B1               	movwf	(_LIN_rxPacket^(0+128)+1)
  5587                           
  5588                           ;lin_master.c: 99: LIN_rxPacket.cmd = tempSchedule->cmd;
  5589  0198  0020               	movlb	0	; select bank0
  5590  0199  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5591  019A  0084               	movwf	4
  5592  019B  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5593  019C  0085               	movwf	5
  5594  019D  0800               	movf	0,w	;code access
  5595  019E  00F7               	movwf	??i1_LIN_queuePacket
  5596  019F  0877               	movf	??i1_LIN_queuePacket,w
  5597  01A0  0021               	movlb	1	; select bank1
  5598  01A1  00B0               	movwf	_LIN_rxPacket^(0+128)
  5599                           
  5600                           ;lin_master.c: 100: LIN_rxPacket.timeout = tempSchedule->timeout;
  5601  01A2  0020               	movlb	0	; select bank0
  5602  01A3  0847               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5603  01A4  00F8               	movwf	??i1_LIN_queuePacket+1
  5604  01A5  0846               	movf	i1LIN_queuePacket@tempSchedule,w
  5605  01A6  00F7               	movwf	??i1_LIN_queuePacket
  5606  01A7  3003               	movlw	3
  5607  01A8  0777               	addwf	??i1_LIN_queuePacket,w
  5608  01A9  0084               	movwf	4
  5609  01AA  0878               	movf	??i1_LIN_queuePacket+1,w
  5610  01AB  1803               	skipnc
  5611  01AC  0A78               	incf	??i1_LIN_queuePacket+1,w
  5612  01AD  0085               	movwf	5
  5613  01AE  0800               	movf	0,w	;code access
  5614  01AF  00F9               	movwf	??i1_LIN_queuePacket+2
  5615  01B0  0879               	movf	??i1_LIN_queuePacket+2,w
  5616  01B1  0021               	movlb	1	; select bank1
  5617  01B2  00BB               	movwf	(_LIN_rxPacket^(0+128)+11)
  5618  01B3                     i1l1610:	
  5619                           
  5620                           ;lin_master.c: 101: }
  5621                           ;lin_master.c: 103: LIN_txReady = 1;
  5622  01B3  0020               	movlb	0	; select bank0
  5623  01B4  01AF               	clrf	_LIN_txReady
  5624  01B5  0AAF               	incf	_LIN_txReady,f
  5625  01B6  0008               	return
  5626  01B7                     __end_ofi1_LIN_queuePacket:	
  5627                           
  5628                           	psect	text43
  5629  0499                     __ptext43:	
  5630 ;; *************** function i1_LIN_getChecksum *****************
  5631 ;; Defined at:
  5632 ;;		line 228 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  length          1    wreg     unsigned char 
  5635 ;;  data            1    0[COMMON] PTR unsigned char 
  5636 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;  length          1    2[COMMON] unsigned char 
  5639 ;;  LIN_getCheck    2    4[COMMON] unsigned int 
  5640 ;;  LIN_getCheck    1    3[COMMON] unsigned char 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  1    wreg      unsigned char 
  5643 ;; Registers used:
  5644 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5650 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5651 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5653 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5654 ;;Total ram usage:        6 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		i1_LIN_queuePacket
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           
  5664                           ;psect for function i1_LIN_getChecksum
  5665  0499                     i1_LIN_getChecksum:	
  5666                           
  5667                           ;incstack = 0
  5668                           ; Regs used in i1_LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  5669                           ;i1LIN_getChecksum@length stored from wreg
  5670  0499  00F2               	movwf	i1LIN_getChecksum@length
  5671                           
  5672                           ;lin_master.c: 229: uint16_t checksum = 0;
  5673  049A  01F4               	clrf	i1LIN_getChecksum@checksum
  5674  049B  01F5               	clrf	i1LIN_getChecksum@checksum+1
  5675                           
  5676                           ;lin_master.c: 231: for (uint8_t i = 0; i < length; i++){
  5677  049C  01F3               	clrf	i1LIN_getChecksum@i
  5678  049D                     i1l1546:	
  5679  049D  0872               	movf	i1LIN_getChecksum@length,w
  5680  049E  0273               	subwf	i1LIN_getChecksum@i,w
  5681  049F  1803               	btfsc	3,0
  5682  04A0  2CBF               	goto	i1l461
  5683                           
  5684                           ;lin_master.c: 232: checksum = checksum + *data++;
  5685  04A1  0870               	movf	i1LIN_getChecksum@data,w
  5686  04A2  0086               	movwf	6
  5687  04A3  0187               	clrf	7
  5688  04A4  0801               	movf	1,w
  5689  04A5  0774               	addwf	i1LIN_getChecksum@checksum,w
  5690  04A6  00F4               	movwf	i1LIN_getChecksum@checksum
  5691  04A7  0875               	movf	i1LIN_getChecksum@checksum+1,w
  5692  04A8  1803               	skipnc
  5693  04A9  0A75               	incf	i1LIN_getChecksum@checksum+1,w
  5694  04AA  00F5               	movwf	i1LIN_getChecksum@checksum+1
  5695  04AB  3001               	movlw	1
  5696  04AC  00F1               	movwf	??i1_LIN_getChecksum
  5697  04AD  0871               	movf	??i1_LIN_getChecksum,w
  5698  04AE  07F0               	addwf	i1LIN_getChecksum@data,f
  5699                           
  5700                           ;lin_master.c: 233: if(checksum > 0xFF)
  5701  04AF  3001               	movlw	1
  5702  04B0  0275               	subwf	i1LIN_getChecksum@checksum+1,w
  5703  04B1  3000               	movlw	0
  5704  04B2  1903               	skipnz
  5705  04B3  0274               	subwf	i1LIN_getChecksum@checksum,w
  5706  04B4  1C03               	skipc
  5707  04B5  2CBA               	goto	i1l1544
  5708                           
  5709                           ;lin_master.c: 234: checksum -= 0xFF;
  5710  04B6  30FF               	movlw	255
  5711  04B7  02F4               	subwf	i1LIN_getChecksum@checksum,f
  5712  04B8  3000               	movlw	0
  5713  04B9  3BF5               	subwfb	i1LIN_getChecksum@checksum+1,f
  5714  04BA                     i1l1544:	
  5715  04BA  3001               	movlw	1
  5716  04BB  00F1               	movwf	??i1_LIN_getChecksum
  5717  04BC  0871               	movf	??i1_LIN_getChecksum,w
  5718  04BD  07F3               	addwf	i1LIN_getChecksum@i,f
  5719  04BE  2C9D               	goto	i1l1546
  5720  04BF                     i1l461:	
  5721                           
  5722                           ;lin_master.c: 235: }
  5723                           ;lin_master.c: 236: checksum = ~checksum;
  5724  04BF  09F4               	comf	i1LIN_getChecksum@checksum,f
  5725  04C0  09F5               	comf	i1LIN_getChecksum@checksum+1,f
  5726                           
  5727                           ;lin_master.c: 238: return (uint8_t)checksum;
  5728  04C1  0874               	movf	i1LIN_getChecksum@checksum,w
  5729  04C2  0008               	return
  5730  04C3                     __end_ofi1_LIN_getChecksum:	
  5731                           
  5732                           	psect	text44
  5733  02B3                     __ptext44:	
  5734 ;; *************** function i1_LIN_calcParity *****************
  5735 ;; Defined at:
  5736 ;;		line 210 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;  CMD             1    wreg     unsigned char 
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;  CMD             1    1[COMMON] unsigned char 
  5741 ;;  LIN_calcPari    1    2[COMMON] struct .
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      unsigned char 
  5744 ;; Registers used:
  5745 ;;		wreg, status,0
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5752 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5753 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5754 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5755 ;;Total ram usage:        3 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		i1_LIN_queuePacket
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           
  5765                           ;psect for function i1_LIN_calcParity
  5766  02B3                     i1_LIN_calcParity:	
  5767                           
  5768                           ;incstack = 0
  5769                           ; Regs used in i1_LIN_calcParity: [wreg+status,0]
  5770                           ;i1LIN_calcParity@CMD stored from wreg
  5771  02B3  00F1               	movwf	i1LIN_calcParity@CMD
  5772                           
  5773                           ;lin_master.c: 211: lin_pid_t PID;
  5774                           ;lin_master.c: 212: PID.rawPID = CMD;
  5775  02B4  0871               	movf	i1LIN_calcParity@CMD,w
  5776  02B5  00F0               	movwf	??i1_LIN_calcParity
  5777  02B6  0870               	movf	??i1_LIN_calcParity,w
  5778  02B7  00F2               	movwf	i1LIN_calcParity@PID
  5779                           
  5780                           ;lin_master.c: 217: PID.P0 = PID.ID0 ^ PID.ID1;
  5781  02B8  1CF2               	btfss	i1LIN_calcParity@PID,1
  5782  02B9  2ABC               	goto	u110_20
  5783  02BA  3001               	movlw	1
  5784  02BB  2ABD               	goto	u110_22
  5785  02BC                     u110_20:	
  5786  02BC  3000               	movlw	0
  5787  02BD                     u110_22:	
  5788  02BD  00F0               	movwf	??i1_LIN_calcParity
  5789  02BE  1C72               	btfss	i1LIN_calcParity@PID,0
  5790  02BF  2AC2               	goto	u111_20
  5791  02C0  3001               	movlw	1
  5792  02C1  2AC3               	goto	u111_22
  5793  02C2                     u111_20:	
  5794  02C2  3000               	movlw	0
  5795  02C3                     u111_22:	
  5796  02C3  0670               	xorwf	??i1_LIN_calcParity,w
  5797  02C4  1903               	btfsc	3,2
  5798  02C5  2AC8               	goto	u112_20
  5799  02C6  1772               	bsf	i1LIN_calcParity@PID,6
  5800  02C7  2AC9               	goto	u113_24
  5801  02C8                     u112_20:	
  5802  02C8  1372               	bcf	i1LIN_calcParity@PID,6
  5803  02C9                     u113_24:	
  5804                           
  5805                           ;lin_master.c: 218: PID.P0 = PID.P0 ^ PID.ID2;
  5806  02C9  1D72               	btfss	i1LIN_calcParity@PID,2
  5807  02CA  2ACD               	goto	u114_20
  5808  02CB  3001               	movlw	1
  5809  02CC  2ACE               	goto	u114_22
  5810  02CD                     u114_20:	
  5811  02CD  3000               	movlw	0
  5812  02CE                     u114_22:	
  5813  02CE  00F0               	movwf	??i1_LIN_calcParity
  5814  02CF  1F72               	btfss	i1LIN_calcParity@PID,6
  5815  02D0  2AD3               	goto	u115_20
  5816  02D1  3001               	movlw	1
  5817  02D2  2AD4               	goto	u115_22
  5818  02D3                     u115_20:	
  5819  02D3  3000               	movlw	0
  5820  02D4                     u115_22:	
  5821  02D4  0670               	xorwf	??i1_LIN_calcParity,w
  5822  02D5  1903               	btfsc	3,2
  5823  02D6  2AD9               	goto	u116_20
  5824  02D7  1772               	bsf	i1LIN_calcParity@PID,6
  5825  02D8  2ADA               	goto	u117_24
  5826  02D9                     u116_20:	
  5827  02D9  1372               	bcf	i1LIN_calcParity@PID,6
  5828  02DA                     u117_24:	
  5829                           
  5830                           ;lin_master.c: 219: PID.P0 = PID.P0 ^ PID.ID4;
  5831  02DA  1E72               	btfss	i1LIN_calcParity@PID,4
  5832  02DB  2ADE               	goto	u118_20
  5833  02DC  3001               	movlw	1
  5834  02DD  2ADF               	goto	u118_22
  5835  02DE                     u118_20:	
  5836  02DE  3000               	movlw	0
  5837  02DF                     u118_22:	
  5838  02DF  00F0               	movwf	??i1_LIN_calcParity
  5839  02E0  1F72               	btfss	i1LIN_calcParity@PID,6
  5840  02E1  2AE4               	goto	u119_20
  5841  02E2  3001               	movlw	1
  5842  02E3  2AE5               	goto	u119_22
  5843  02E4                     u119_20:	
  5844  02E4  3000               	movlw	0
  5845  02E5                     u119_22:	
  5846  02E5  0670               	xorwf	??i1_LIN_calcParity,w
  5847  02E6  1903               	btfsc	3,2
  5848  02E7  2AEA               	goto	u120_20
  5849  02E8  1772               	bsf	i1LIN_calcParity@PID,6
  5850  02E9  2AEB               	goto	u121_24
  5851  02EA                     u120_20:	
  5852  02EA  1372               	bcf	i1LIN_calcParity@PID,6
  5853  02EB                     u121_24:	
  5854                           
  5855                           ;lin_master.c: 220: PID.P1 = PID.ID1 ^ PID.ID3;
  5856  02EB  1DF2               	btfss	i1LIN_calcParity@PID,3
  5857  02EC  2AEF               	goto	u122_20
  5858  02ED  3001               	movlw	1
  5859  02EE  2AF0               	goto	u122_22
  5860  02EF                     u122_20:	
  5861  02EF  3000               	movlw	0
  5862  02F0                     u122_22:	
  5863  02F0  00F0               	movwf	??i1_LIN_calcParity
  5864  02F1  1CF2               	btfss	i1LIN_calcParity@PID,1
  5865  02F2  2AF5               	goto	u123_20
  5866  02F3  3001               	movlw	1
  5867  02F4  2AF6               	goto	u123_22
  5868  02F5                     u123_20:	
  5869  02F5  3000               	movlw	0
  5870  02F6                     u123_22:	
  5871  02F6  0670               	xorwf	??i1_LIN_calcParity,w
  5872  02F7  1903               	btfsc	3,2
  5873  02F8  2AFB               	goto	u124_20
  5874  02F9  17F2               	bsf	i1LIN_calcParity@PID,7
  5875  02FA  2AFC               	goto	u125_24
  5876  02FB                     u124_20:	
  5877  02FB  13F2               	bcf	i1LIN_calcParity@PID,7
  5878  02FC                     u125_24:	
  5879                           
  5880                           ;lin_master.c: 221: PID.P1 = PID.P1 ^ PID.ID4;
  5881  02FC  1E72               	btfss	i1LIN_calcParity@PID,4
  5882  02FD  2B00               	goto	u126_20
  5883  02FE  3001               	movlw	1
  5884  02FF  2B01               	goto	u126_22
  5885  0300                     u126_20:	
  5886  0300  3000               	movlw	0
  5887  0301                     u126_22:	
  5888  0301  00F0               	movwf	??i1_LIN_calcParity
  5889  0302  1FF2               	btfss	i1LIN_calcParity@PID,7
  5890  0303  2B06               	goto	u127_20
  5891  0304  3001               	movlw	1
  5892  0305  2B07               	goto	u127_22
  5893  0306                     u127_20:	
  5894  0306  3000               	movlw	0
  5895  0307                     u127_22:	
  5896  0307  0670               	xorwf	??i1_LIN_calcParity,w
  5897  0308  1903               	btfsc	3,2
  5898  0309  2B0C               	goto	u128_20
  5899  030A  17F2               	bsf	i1LIN_calcParity@PID,7
  5900  030B  2B0D               	goto	u129_24
  5901  030C                     u128_20:	
  5902  030C  13F2               	bcf	i1LIN_calcParity@PID,7
  5903  030D                     u129_24:	
  5904                           
  5905                           ;lin_master.c: 222: PID.P1 = PID.P1 ^ PID.ID5;
  5906  030D  1EF2               	btfss	i1LIN_calcParity@PID,5
  5907  030E  2B11               	goto	u130_20
  5908  030F  3001               	movlw	1
  5909  0310  2B12               	goto	u130_22
  5910  0311                     u130_20:	
  5911  0311  3000               	movlw	0
  5912  0312                     u130_22:	
  5913  0312  00F0               	movwf	??i1_LIN_calcParity
  5914  0313  1FF2               	btfss	i1LIN_calcParity@PID,7
  5915  0314  2B17               	goto	u131_20
  5916  0315  3001               	movlw	1
  5917  0316  2B18               	goto	u131_22
  5918  0317                     u131_20:	
  5919  0317  3000               	movlw	0
  5920  0318                     u131_22:	
  5921  0318  0670               	xorwf	??i1_LIN_calcParity,w
  5922  0319  1903               	btfsc	3,2
  5923  031A  2B1D               	goto	u132_20
  5924  031B  17F2               	bsf	i1LIN_calcParity@PID,7
  5925  031C  2B1E               	goto	i1l1528
  5926  031D                     u132_20:	
  5927  031D  13F2               	bcf	i1LIN_calcParity@PID,7
  5928  031E                     i1l1528:	
  5929                           
  5930                           ;lin_master.c: 223: PID.P1 = ~PID.P1;
  5931  031E  1003               	clrc
  5932  031F  1FF2               	btfss	i1LIN_calcParity@PID,7
  5933  0320  1403               	setc
  5934  0321  1C03               	btfss	3,0
  5935  0322  2B25               	goto	u134_20
  5936  0323  17F2               	bsf	i1LIN_calcParity@PID,7
  5937  0324  2B26               	goto	i1l1530
  5938  0325                     u134_20:	
  5939  0325  13F2               	bcf	i1LIN_calcParity@PID,7
  5940  0326                     i1l1530:	
  5941                           
  5942                           ;lin_master.c: 225: return PID.rawPID;
  5943  0326  0872               	movf	i1LIN_calcParity@PID,w
  5944  0327  0008               	return
  5945  0328                     __end_ofi1_LIN_calcParity:	
  5946                           
  5947                           	psect	text45
  5948  05A6                     __ptext45:	
  5949 ;; *************** function ___wmul *****************
  5950 ;; Defined at:
  5951 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;  multiplier      2    0[COMMON] unsigned int 
  5954 ;;  multiplicand    2    2[COMMON] unsigned int 
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;  product         2    4[COMMON] unsigned int 
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  2    0[COMMON] unsigned int 
  5959 ;; Registers used:
  5960 ;;		wreg, status,2, status,0
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5969 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5970 ;;Total ram usage:        6 bytes
  5971 ;; Hardware stack levels used:    1
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_LIN_sendPeriodicTx
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           
  5980                           ;psect for function ___wmul
  5981  05A6                     ___wmul:	
  5982                           
  5983                           ;incstack = 0
  5984                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5985  05A6  01F4               	clrf	___wmul@product
  5986  05A7  01F5               	clrf	___wmul@product+1
  5987  05A8                     i1l1568:	
  5988  05A8  1C70               	btfss	___wmul@multiplier,0
  5989  05A9  2DAE               	goto	i1l616
  5990  05AA  0872               	movf	___wmul@multiplicand,w
  5991  05AB  07F4               	addwf	___wmul@product,f
  5992  05AC  0873               	movf	___wmul@multiplicand+1,w
  5993  05AD  3DF5               	addwfc	___wmul@product+1,f
  5994  05AE                     i1l616:	
  5995  05AE  3001               	movlw	1
  5996  05AF                     u140_25:	
  5997  05AF  35F2               	lslf	___wmul@multiplicand,f
  5998  05B0  0DF3               	rlf	___wmul@multiplicand+1,f
  5999  05B1  0B89               	decfsz	9,f
  6000  05B2  2DAF               	goto	u140_25
  6001  05B3  3001               	movlw	1
  6002  05B4                     u141_25:	
  6003  05B4  36F1               	lsrf	___wmul@multiplier+1,f
  6004  05B5  0CF0               	rrf	___wmul@multiplier,f
  6005  05B6  0B89               	decfsz	9,f
  6006  05B7  2DB4               	goto	u141_25
  6007  05B8  0870               	movf	___wmul@multiplier,w
  6008  05B9  0471               	iorwf	___wmul@multiplier+1,w
  6009  05BA  1D03               	btfss	3,2
  6010  05BB  2DA8               	goto	i1l1568
  6011  05BC  0875               	movf	___wmul@product+1,w
  6012  05BD  00F1               	movwf	?___wmul+1
  6013  05BE  0874               	movf	___wmul@product,w
  6014  05BF  00F0               	movwf	?___wmul
  6015  05C0  0008               	return
  6016  05C1                     __end_of___wmul:	
  6017                           
  6018                           	psect	text46
  6019  0552                     __ptext46:	
  6020 ;; *************** function _EUSART_Transmit_ISR *****************
  6021 ;; Defined at:
  6022 ;;		line 194 in file "mcc_generated_files/eusart.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;		None
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;		None
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  1    wreg      void 
  6029 ;; Registers used:
  6030 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6038 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6040 ;;Total ram usage:        1 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; This function calls:
  6043 ;;		Nothing
  6044 ;; This function is called by:
  6045 ;;		_EUSART_Initialize
  6046 ;;		_INTERRUPT_InterruptManager
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           
  6051                           ;psect for function _EUSART_Transmit_ISR
  6052  0552                     _EUSART_Transmit_ISR:	
  6053                           
  6054                           ;eusart.c: 198: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  6055                           
  6056                           ;incstack = 0
  6057                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6058  0552  3008               	movlw	8
  6059  0553  0020               	movlb	0	; select bank0
  6060  0554  0266               	subwf	_eusartTxBufferRemaining,w	;volatile
  6061  0555  1803               	skipnc
  6062  0556  2D6C               	goto	i1l182
  6063                           
  6064                           ;eusart.c: 199: {
  6065                           ;eusart.c: 200: TXREG = eusartTxBuffer[eusartTxTail++];
  6066  0557  0834               	movf	_eusartTxTail,w
  6067  0558  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  6068  0559  0086               	movwf	6
  6069  055A  0187               	clrf	7
  6070  055B  0801               	movf	1,w
  6071  055C  0023               	movlb	3	; select bank3
  6072  055D  009A               	movwf	26	;volatile
  6073  055E  3001               	movlw	1
  6074  055F  00F0               	movwf	??_EUSART_Transmit_ISR
  6075  0560  0870               	movf	??_EUSART_Transmit_ISR,w
  6076  0561  0020               	movlb	0	; select bank0
  6077  0562  07B4               	addwf	_eusartTxTail,f	;volatile
  6078                           
  6079                           ;eusart.c: 201: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  6080  0563  3008               	movlw	8
  6081  0564  0234               	subwf	_eusartTxTail,w	;volatile
  6082  0565  1803               	btfsc	3,0
  6083                           
  6084                           ;eusart.c: 202: {
  6085                           ;eusart.c: 203: eusartTxTail = 0;
  6086  0566  01B4               	clrf	_eusartTxTail	;volatile
  6087                           
  6088                           ;eusart.c: 204: }
  6089                           ;eusart.c: 205: eusartTxBufferRemaining++;
  6090  0567  3001               	movlw	1
  6091  0568  00F0               	movwf	??_EUSART_Transmit_ISR
  6092  0569  0870               	movf	??_EUSART_Transmit_ISR,w
  6093  056A  07E6               	addwf	_eusartTxBufferRemaining,f	;volatile
  6094                           
  6095                           ;eusart.c: 206: }
  6096  056B  0008               	return
  6097  056C                     i1l182:	
  6098                           
  6099                           ;eusart.c: 207: else
  6100                           ;eusart.c: 208: {
  6101                           ;eusart.c: 209: PIE1bits.TXIE = 0;
  6102  056C  0021               	movlb	1	; select bank1
  6103  056D  1211               	bcf	17,4	;volatile
  6104  056E  0008               	return
  6105  056F                     __end_of_EUSART_Transmit_ISR:	
  6106                           
  6107                           	psect	text47
  6108  03DC                     __ptext47:	
  6109 ;; *************** function _EUSART_Receive_ISR *****************
  6110 ;; Defined at:
  6111 ;;		line 213 in file "mcc_generated_files/eusart.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;		None
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;		None
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  1    wreg      void 
  6118 ;; Registers used:
  6119 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6129 ;;Total ram usage:        0 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; Hardware stack levels required when called:    2
  6132 ;; This function calls:
  6133 ;;		Absolute function
  6134 ;;		_EUSART_DefaultErrorHandler
  6135 ;;		_EUSART_DefaultFramingErrorHandler
  6136 ;;		_EUSART_DefaultOverrunErrorHandler
  6137 ;;		_EUSART_RxDataHandler
  6138 ;; This function is called by:
  6139 ;;		_EUSART_Initialize
  6140 ;;		_INTERRUPT_InterruptManager
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           
  6145                           ;psect for function _EUSART_Receive_ISR
  6146  03DC                     _EUSART_Receive_ISR:	
  6147                           
  6148                           ;eusart.c: 216: eusartRxStatusBuffer[eusartRxHead].status = 0;
  6149                           
  6150                           ;incstack = 0
  6151                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6152  03DC  0020               	movlb	0	; select bank0
  6153  03DD  0833               	movf	_eusartRxHead,w	;volatile
  6154  03DE  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6155  03DF  0086               	movwf	6
  6156  03E0  0187               	clrf	7
  6157  03E1  0181               	clrf	1
  6158                           
  6159                           ;eusart.c: 218: if(RCSTAbits.FERR){
  6160  03E2  0023               	movlb	3	; select bank3
  6161  03E3  1D1D               	btfss	29,2	;volatile
  6162  03E4  2BF0               	goto	i1l2720
  6163                           
  6164                           ;eusart.c: 219: eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  6165  03E5  0020               	movlb	0	; select bank0
  6166  03E6  0833               	movf	_eusartRxHead,w	;volatile
  6167  03E7  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6168  03E8  0086               	movwf	6
  6169  03E9  0187               	clrf	7
  6170  03EA  1481               	bsf	1,1
  6171                           
  6172                           ;eusart.c: 220: EUSART_FramingErrorHandler();
  6173  03EB  0860               	movf	_EUSART_FramingErrorHandler+1,w
  6174  03EC  008A               	movwf	10
  6175  03ED  085F               	movf	_EUSART_FramingErrorHandler,w
  6176  03EE  000A               	callw
  6177  03EF  3183               	pagesel	$
  6178  03F0                     i1l2720:	
  6179                           
  6180                           ;eusart.c: 221: }
  6181                           ;eusart.c: 223: if(RCSTAbits.OERR){
  6182  03F0  0023               	movlb	3	; select bank3
  6183  03F1  1C9D               	btfss	29,1	;volatile
  6184  03F2  2BFF               	goto	i1l2726
  6185                           
  6186                           ;eusart.c: 224: eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  6187  03F3  0020               	movlb	0	; select bank0
  6188  03F4  0833               	movf	_eusartRxHead,w	;volatile
  6189  03F5  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6190  03F6  0086               	movwf	6
  6191  03F7  0187               	clrf	7
  6192  03F8  1501               	bsf	1,2
  6193                           
  6194                           ;eusart.c: 225: EUSART_OverrunErrorHandler();
  6195  03F9  0021               	movlb	1	; select bank1
  6196  03FA  0854               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
  6197  03FB  008A               	movwf	10
  6198  03FC  0853               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  6199  03FD  000A               	callw
  6200  03FE  3183               	pagesel	$
  6201  03FF                     i1l2726:	
  6202                           
  6203                           ;eusart.c: 226: }
  6204                           ;eusart.c: 228: if(eusartRxStatusBuffer[eusartRxHead].status){
  6205  03FF  0020               	movlb	0	; select bank0
  6206  0400  0833               	movf	_eusartRxHead,w	;volatile
  6207  0401  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6208  0402  0086               	movwf	6
  6209  0403  0187               	clrf	7
  6210  0404  0801               	movf	1,w
  6211  0405  1903               	btfsc	3,2
  6212  0406  2C0E               	goto	i1l2730
  6213                           
  6214                           ;eusart.c: 229: EUSART_ErrorHandler();
  6215  0407  0021               	movlb	1	; select bank1
  6216  0408  0852               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
  6217  0409  008A               	movwf	10
  6218  040A  0851               	movf	_EUSART_ErrorHandler^(0+128),w
  6219  040B  000A               	callw
  6220  040C  3183               	pagesel	$
  6221                           
  6222                           ;eusart.c: 230: } else {
  6223  040D  0008               	return
  6224  040E                     i1l2730:	
  6225                           
  6226                           ;eusart.c: 231: EUSART_RxDataHandler();
  6227  040E  3186  260B         	fcall	_EUSART_RxDataHandler
  6228  0410  0008               	return
  6229  0411                     __end_of_EUSART_Receive_ISR:	
  6230                           
  6231                           	psect	text48
  6232  06E3                     __ptext48:	
  6233 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  6234 ;; Defined at:
  6235 ;;		line 249 in file "mcc_generated_files/eusart.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;		None
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;		None
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  1    wreg      void 
  6242 ;; Registers used:
  6243 ;;		None
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6253 ;;Total ram usage:        0 bytes
  6254 ;; Hardware stack levels used:    1
  6255 ;; This function calls:
  6256 ;;		Nothing
  6257 ;; This function is called by:
  6258 ;;		_EUSART_Initialize
  6259 ;;		_EUSART_Receive_ISR
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           
  6264                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  6265  06E3                     _EUSART_DefaultOverrunErrorHandler:	
  6266                           
  6267                           ;eusart.c: 252: RCSTAbits.CREN = 0;
  6268                           
  6269                           ;incstack = 0
  6270                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  6271  06E3  0023               	movlb	3	; select bank3
  6272  06E4  121D               	bcf	29,4	;volatile
  6273                           
  6274                           ;eusart.c: 253: RCSTAbits.CREN = 1;
  6275  06E5  161D               	bsf	29,4	;volatile
  6276  06E6  0008               	return
  6277  06E7                     __end_of_EUSART_DefaultOverrunErrorHandler:	
  6278                           
  6279                           	psect	text49
  6280  06F5                     __ptext49:	
  6281 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  6282 ;; Defined at:
  6283 ;;		line 247 in file "mcc_generated_files/eusart.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;		None
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;		None
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  1    wreg      void 
  6290 ;; Registers used:
  6291 ;;		None
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6301 ;;Total ram usage:        0 bytes
  6302 ;; Hardware stack levels used:    1
  6303 ;; This function calls:
  6304 ;;		Nothing
  6305 ;; This function is called by:
  6306 ;;		_EUSART_Initialize
  6307 ;;		_EUSART_Receive_ISR
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           
  6312                           ;psect for function _EUSART_DefaultFramingErrorHandler
  6313  06F5                     _EUSART_DefaultFramingErrorHandler:	
  6314                           
  6315                           ;incstack = 0
  6316                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  6317  06F5  0008               	return
  6318  06F6                     __end_of_EUSART_DefaultFramingErrorHandler:	
  6319                           
  6320                           	psect	text50
  6321  06F0                     __ptext50:	
  6322 ;; *************** function _EUSART_DefaultErrorHandler *****************
  6323 ;; Defined at:
  6324 ;;		line 257 in file "mcc_generated_files/eusart.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;		None
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;		None
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  1    wreg      void 
  6331 ;; Registers used:
  6332 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6342 ;;Total ram usage:        0 bytes
  6343 ;; Hardware stack levels used:    1
  6344 ;; Hardware stack levels required when called:    1
  6345 ;; This function calls:
  6346 ;;		_EUSART_RxDataHandler
  6347 ;; This function is called by:
  6348 ;;		_EUSART_Initialize
  6349 ;;		_EUSART_Receive_ISR
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           
  6354                           ;psect for function _EUSART_DefaultErrorHandler
  6355  06F0                     _EUSART_DefaultErrorHandler:	
  6356                           
  6357                           ;eusart.c: 258: EUSART_RxDataHandler();
  6358                           
  6359                           ;incstack = 0
  6360                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6361  06F0  3186  260B         	fcall	_EUSART_RxDataHandler
  6362  06F2  0008               	return
  6363  06F3                     __end_of_EUSART_DefaultErrorHandler:	
  6364                           
  6365                           	psect	text51
  6366  060B                     __ptext51:	
  6367 ;; *************** function _EUSART_RxDataHandler *****************
  6368 ;; Defined at:
  6369 ;;		line 237 in file "mcc_generated_files/eusart.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;		None
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;		None
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  1    wreg      void 
  6376 ;; Registers used:
  6377 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6385 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6386 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6387 ;;Total ram usage:        1 bytes
  6388 ;; Hardware stack levels used:    1
  6389 ;; This function calls:
  6390 ;;		Nothing
  6391 ;; This function is called by:
  6392 ;;		_EUSART_Receive_ISR
  6393 ;;		_EUSART_DefaultErrorHandler
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           
  6398                           ;psect for function _EUSART_RxDataHandler
  6399  060B                     _EUSART_RxDataHandler:	
  6400                           
  6401                           ;eusart.c: 239: eusartRxBuffer[eusartRxHead++] = RCREG;
  6402                           
  6403                           ;incstack = 0
  6404                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  6405  060B  0023               	movlb	3	; select bank3
  6406  060C  0819               	movf	25,w	;volatile
  6407  060D  00F0               	movwf	??_EUSART_RxDataHandler
  6408  060E  0020               	movlb	0	; select bank0
  6409  060F  0833               	movf	_eusartRxHead,w
  6410  0610  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  6411  0611  0086               	movwf	6
  6412  0612  0187               	clrf	7
  6413  0613  0870               	movf	??_EUSART_RxDataHandler,w
  6414  0614  0081               	movwf	1
  6415  0615  3001               	movlw	1
  6416  0616  00F0               	movwf	??_EUSART_RxDataHandler
  6417  0617  0870               	movf	??_EUSART_RxDataHandler,w
  6418  0618  07B3               	addwf	_eusartRxHead,f	;volatile
  6419                           
  6420                           ;eusart.c: 240: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  6421  0619  3008               	movlw	8
  6422  061A  0233               	subwf	_eusartRxHead,w	;volatile
  6423  061B  1803               	btfsc	3,0
  6424                           
  6425                           ;eusart.c: 241: {
  6426                           ;eusart.c: 242: eusartRxHead = 0;
  6427  061C  01B3               	clrf	_eusartRxHead	;volatile
  6428                           
  6429                           ;eusart.c: 243: }
  6430                           ;eusart.c: 244: eusartRxCount++;
  6431  061D  3001               	movlw	1
  6432  061E  00F0               	movwf	??_EUSART_RxDataHandler
  6433  061F  0870               	movf	??_EUSART_RxDataHandler,w
  6434  0620  07B1               	addwf	_eusartRxCount,f	;volatile
  6435  0621  0008               	return
  6436  0622                     __end_of_EUSART_RxDataHandler:	
  6437  007E                     btemp	set	126	;btemp
  6438  007E                     int$flags	set	126
  6439  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    24
    Data        1
    BSS         72
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      72
    BANK1            80     11      54
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 12
		 -> main@data_to_send(BANK1[1]), LIN_rxPacket.data(BANK1[8]), LIN_rxPacket(BANK1[12]), SIGNAL_Data(BANK0[1]), 
		 -> LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 11
		 -> LIN_packet(BANK0[11]), processLIN@tempRxData(BANK1[8]), 

    memset@p1	PTR void  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_packet(BANK0[11]), 

    memset@p	PTR unsigned char  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_packet(BANK0[11]), 

    LIN_sendPeriodicTx@periodicTx.data	PTR unsigned char  size(1) Largest target is 8
		 -> SIGNAL_Data(BANK0[1]), LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 

    LIN_sendPeriodicTx@periodicTx	PTR const struct . size(2) Largest target is 8192
		 -> ROM(CODE[8192]), scheduleTable(CODE[24]), 

    LIN_getChecksum@data	PTR unsigned char  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_packet(BANK0[11]), 

    LIN_getPacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> processLIN@tempRxData(BANK1[8]), 

    sp__memset	PTR void  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_packet(BANK0[11]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    LIN_queuePacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> main@data_to_send(BANK1[1]), SIGNAL_Data(BANK0[1]), LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), 
		 -> UNLOCK_Data(BANK0[1]), 

    LIN_queuePacket@tempSchedule.data	PTR unsigned char  size(1) Largest target is 8
		 -> SIGNAL_Data(BANK0[1]), LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 

    LIN_queuePacket@tempSchedule	PTR const struct . size(2) Largest target is 8192
		 -> ROM(CODE[8192]), scheduleTable(CODE[24]), 

    LIN_init@processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), 

    LIN_processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), Absolute function(), 

    LIN_init@table	const PTR const struct . size(2) Largest target is 28
		 -> scheduleTable(CODE[24]), 

    schedule	PTR const struct . size(2) Largest target is 8192
		 -> ROM(CODE[8192]), scheduleTable(CODE[24]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), Absolute function(), TMR2_DefaultInterruptHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    S24$data	PTR unsigned char  size(1) Largest target is 8
		 -> SIGNAL_Data(BANK0[1]), LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 

    scheduleTable.data	PTR unsigned char  size(1) Largest target is 8
		 -> SIGNAL_Data(BANK0[1]), LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _LIN_timerHandler->_LIN_sendPeriodicTx
    _LIN_sendPeriodicTx->i1_LIN_queuePacket
    i1_LIN_queuePacket->i1_LIN_getChecksum
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_LIN_queuePacket
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _LIN_Master_Initialize->_LIN_init
    _LIN_setTimerHandler->_TMR2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _LIN_queuePacket->_LIN_getChecksum
    _LIN_handler->_processLIN
    _processLIN->_LIN_getPacket
    _LIN_getPacket->_memset
    _LIN_startTimer->_TMR2_WriteTimer
    _LIN_sendPacket->_EUSART_Write
    _LIN_receivePacket->_LIN_getChecksum

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR2_ISR->_LIN_timerHandler
    _LIN_timerHandler->_LIN_sendPeriodicTx
    _LIN_sendPeriodicTx->i1_LIN_queuePacket

Critical Paths under _main in BANK1

    _main->_processLIN
    _LIN_handler->_processLIN

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6099
                                              9 BANK1      2     2      0
              _LIN_Master_Initialize
                        _LIN_handler
                    _LIN_queuePacket
                  _SYSTEM_Initialize
                         _processLIN
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1157
                  _EUSART_Initialize
              _LIN_Master_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     185
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_Master_Initialize                                0     0      0     432
                           _LIN_init
 ---------------------------------------------------------------------------------
 (3) _LIN_init                                             6     2      4     432
                                             10 BANK0      6     2      4
                _LIN_setTimerHandler
                    _LIN_startPeriod
                      _LIN_stopTimer
 ---------------------------------------------------------------------------------
 (4) _LIN_stopTimer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LIN_startPeriod                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LIN_setTimerHandler                                  0     0      0     185
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     185
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     540
                                             10 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     108
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     108
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     108
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     108
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     108
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LIN_queuePacket                                      9     8      1    1384
                                             14 BANK0      9     8      1
                     _LIN_calcParity
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (2) _LIN_calcParity                                       3     3      0     489
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _LIN_handler                                          1     1      0    2180
                                             19 BANK0      1     1      0
                   Absolute function *
                 _EUSART_is_rx_ready
                      _LIN_disableRx
                       _LIN_enableRx
                  _LIN_receivePacket
                     _LIN_sendPacket
                     _LIN_startTimer
                             _memset
                         _processLIN *
 ---------------------------------------------------------------------------------
 (1) _processLIN                                          10    10      0     861
                                             18 BANK0      1     1      0
                                              0 BANK1      9     9      0
                      _LIN_getPacket
 ---------------------------------------------------------------------------------
 (2) _LIN_getPacket                                        3     3      0     796
                                             15 BANK0      3     3      0
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     698
                                              8 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LIN_startTimer                                       2     2      0      62
                                              9 BANK0      2     2      0
                    _TMR2_StartTimer
                    _TMR2_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_WriteTimer                                      1     1      0      31
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_sendPacket                                       2     2      0     130
                                             10 BANK0      2     2      0
                       _EUSART_Write
                      _LIN_sendBreak
 ---------------------------------------------------------------------------------
 (3) _LIN_sendBreak                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LIN_receivePacket                                    2     2      0     429
                                             14 BANK0      2     2      0
                        _EUSART_Read
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (2) _LIN_getChecksum                                      6     5      1     392
                                              8 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      37
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LIN_enableRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_disableRx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0    1279
                                              7 BANK0      1     1      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR2_ISR                                             0     0      0    1279
                   Absolute function *
                   _LIN_timerHandler *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _LIN_timerHandler                                     1     1      0    1279
                                              6 BANK0      1     1      0
                 _LIN_sendPeriodicTx
                    i1_LIN_stopTimer
 ---------------------------------------------------------------------------------
 (9) i1_LIN_stopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _LIN_sendPeriodicTx                                   5     5      0    1279
                                             11 COMMON     3     3      0
                                              4 BANK0      2     2      0
                             ___wmul
                  i1_LIN_queuePacket
 ---------------------------------------------------------------------------------
 (10) i1_LIN_queuePacket                                   9     8      1     819
                                              6 COMMON     5     4      1
                                              0 BANK0      4     4      0
                   i1_LIN_calcParity
                  i1_LIN_getChecksum
 ---------------------------------------------------------------------------------
 (11) i1_LIN_getChecksum                                   6     5      1     187
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (11) i1_LIN_calcParity                                    3     3      0     338
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (10) ___wmul                                              6     2      4     348
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LIN_Master_Initialize
     _LIN_init
       _LIN_setTimerHandler
         _TMR2_SetInterruptHandler
       _LIN_startPeriod
       _LIN_stopTimer
   _LIN_handler
     Absolute function(Fake) *
     _EUSART_is_rx_ready *
     _LIN_disableRx *
     _LIN_enableRx *
     _LIN_receivePacket *
       _EUSART_Read
       _LIN_getChecksum
     _LIN_sendPacket *
       _EUSART_Write
       _LIN_sendBreak
     _LIN_startTimer *
       _TMR2_StartTimer
       _TMR2_WriteTimer
     _memset *
     _processLIN *
       _LIN_getPacket
         _memset
   _LIN_queuePacket
     _LIN_calcParity
     _LIN_getChecksum
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _LIN_Master_Initialize
       _LIN_init
         _LIN_setTimerHandler
           _TMR2_SetInterruptHandler
         _LIN_startPeriod
         _LIN_stopTimer
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _processLIN
     _LIN_getPacket
       _memset

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR2_ISR *
     Absolute function(Fake) *
     _LIN_timerHandler *
       _LIN_sendPeriodicTx
         ___wmul
         i1_LIN_queuePacket
           i1_LIN_calcParity
           i1_LIN_getChecksum
       i1_LIN_stopTimer
     _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      48       5       90.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      B      36       7       67.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      8C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      8C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Sep 12 21:56:25 2018

                ?_EUSART_SetRxInterruptHandler 004C                          __end_of_LIN_getPacket 050F  
                        ??_LIN_setTimerHandler 004E               __end_of_TMR2_SetInterruptHandler 06B2  
                        __end_of_LIN_disableRx 06D3                                 _scheduleLength 0065  
                                  __CFG_CP$OFF 0000                            ___wmul@multiplicand 0072  
                              ?_LIN_calcParity 0070                                    __CFG_LVP$ON 0000  
                                          l410 00BD                                            l323 060A  
                                          l423 0343                                            l176 051C  
                                          l434 0397                                            l461 0495  
                                          _PR2 001B                                   __CFG_CPD$OFF 0000  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 004C  
                              _TMR2_Initialize 064A                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   __CFG_IESO$ON 0000  
                        __end_of_scheduleTable 05F3                                   ?_EUSART_Read 0070  
                                         l2044 0591                                           l2126 0490  
                                         l2214 022F                                           l2310 0050  
                                         l2128 0473                                           l2080 0511  
                                         l2240 046A                                           l2216 0239  
                                         l2312 0065                                           l2058 04C5  
                                         l2324 00C3                                           l2094 0530  
                                         l2238 0457                                           l2326 00D1  
                                         l2328 00FC                                           l2266 043F  
                                         l2258 0429                                           l2800 057A  
                                         l2734 0329                                           l2770 037F  
                                         l2762 036B                                           l2754 0359  
                                         l2756 035C                                           l2776 0388  
                                         u2300 01CE                                           _LATA 010C  
                                         _LATC 010E                                           u2400 01FA  
                                         u2320 01D4                                           u2410 0200  
                                         u2402 01FB                                           u2330 01DA  
                                         u2322 01D5                                           u2314 01D0  
                                         u2500 022D                                           u2420 0207  
                                         u2412 0201                                           u2340 01E1  
                                         u2332 01DB                                           u2520 0237  
                                         u2440 020D                                           u2360 01E7  
                                         u2280 01C1                                           u2450 0213  
                                         u2442 020E                                           u2434 0209  
                                         u2370 01ED                                           u2362 01E8  
                                         u2354 01E3                                           u2290 01C7  
                                         u2282 01C2                                           u2460 021A  
                                         u2452 0214                                           u2380 01F4  
                                         u2372 01EE                                           u2292 01C8  
                                         u2480 0220                                           u2490 0226  
                                         u2482 0221                                           u2474 021C  
                                         u2394 01F6                                           u2492 0227  
                                         i1l33 002B                                           i1l26 0017  
                                         i1l28 0023                                           _TMR2 001A  
                                         _WPUA 020C                                           _WPUC 020E  
                               _LIN_sendPacket 0441                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                          __end_of_LIN_sendBreak 06ED  
                                         _main 056F                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                           start 0030  
                                processLIN@cmd 00CC                                  __CFG_MCLRE$ON 0000  
                     LIN_receivePacket@rxIndex 0029                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0007                  __end_of_OSCILLATOR_Initialize 06A6  
                                        ?_main 0070                                  __CFG_WDTE$OFF 0000  
                                        _T2CON 001C                                          i1l410 0174  
                                        i1l182 056C                                          i1l461 04BF  
                                        i1l616 05AE                                          u225m0 04FD  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        u266m0 00B2                                          _TRISA 008C  
                                        _TRISC 008E                                          _TXREG 019A  
                             __end_of_LIN_init 05DB                          __end_of_LIN_stopTimer 06DB  
                                        _TXSTA 019E                               __end_of_TMR2_ISR 0685  
                               _WDT_Initialize 06D3                         __end_of_LIN_sendPacket 046E  
                i1LIN_queuePacket@tempSchedule 0046                                          pclath 000A  
                               _LIN_startTimer 065C                                          status 0003  
                                        wtemp0 007E                                _TMR2_StartTimer 06E7  
                       ?_LIN_Master_Initialize 0070                               ?_LIN_getChecksum 004C  
                  LIN_queuePacket@tempSchedule 0059                                __initialization 0032  
                    __size_of_LIN_timerHandler 001F                                   ?_LIN_handler 0070  
                                 __end_of_main 058B                                 ??_EUSART_Write 004C  
                      __end_of_TMR2_Initialize 065C                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 004E                       _TMR2_SetInterruptHandler 06AC  
                                       ??_main 00CD                               main@data_to_send 00CE  
                              _TMR2_WriteTimer 06C4                                 __CFG_PLLEN$OFF 0000  
                       __end_of_WDT_Initialize 06D7                             i1LIN_queuePacket@i 0045  
    __end_of_EUSART_DefaultFramingErrorHandler 06F6     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 06F5                     _EUSART_OverrunErrorHandler 00D3  
                       __end_of_LIN_startTimer 066C                                ?_LIN_sendPacket 0070  
                                       _ANSELA 018C                                         _ANSELC 018E  
                   __end_of_EUSART_is_rx_ready 06F0                                         _BORCON 0116  
                                       u110_20 02BC                                         u110_22 02BD  
                                       u111_20 02C2                                         u111_22 02C3  
                                       u120_20 02EA                                         u112_20 02C8  
                                       i1l1530 0326                                         i1l1610 01B3  
                                       i1l1606 017A                                         i1l1528 031E  
                                       i1l1544 04BA                                         i1l1608 0188  
                                       i1l1720 0277                                         i1l1546 049D  
                                       u121_24 02EB                                         u113_24 02C9  
                                       i1l2720 03F0                                         i1l1568 05A8  
                                       u130_20 0311                                         u122_20 02EF  
                                       u114_20 02CD                                         i1l1592 0107  
                                       i1l2730 040E                                         u130_22 0312  
                                       u122_22 02F0                                         u114_22 02CE  
                                       i1l1594 011C                                         i1l2726 03FF  
                                       u131_20 0317                                         u123_20 02F5  
                                       u115_20 02D3                                         u131_22 0318  
                                       u123_22 02F6                                         u115_22 02D4  
                                       i1l1876 0542                                         u132_20 031D  
                                       u124_20 02FB                                         u116_20 02D9  
                                       u140_25 05AF                                         u125_24 02FC  
                                       u117_24 02DA                                         u141_25 05B4  
                                       u134_20 0325                                         u126_20 0300  
                                       u118_20 02DE                                         u126_22 0301  
                                       u118_22 02DF                                         u127_20 0306  
                                       u119_20 02E4                                         u127_22 0307  
                                       u119_22 02E5                                         u128_20 030C  
                                       u129_24 030D                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                _LIN_processData 00CF  
                             i1_LIN_calcParity 02B3                                 __CFG_PWRTE$OFF 0000  
                  __size_of_LIN_sendPeriodicTx 0078                                         ___wmul 05A6  
                               __CFG_STVREN$ON 0000                                _LIN_queuePacket 0049  
                      i1LIN_getChecksum@length 0072                            _EUSART_Transmit_ISR 0552  
                                       _memset 058B                             _LIN_enablePeriodTx 00D5  
                              _LIN_startPeriod 06DB                                ?_WDT_Initialize 0070  
                      __end_of_TMR2_StartTimer 06EA       TMR2_SetInterruptHandler@InterruptHandler 004C  
                              ?_LIN_startTimer 0070                           ?_EUSART_Transmit_ISR 0070  
                         __size_of_EUSART_Read 0027                              _SYSTEM_Initialize 0638  
                      __end_of__initialization 0045                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 06B8          __size_of_EUSART_SetTxInterruptHandler 0006  
                 _EUSART_SetTxInterruptHandler 06B2                                      ?_LIN_init 004E  
                               __pcstackCOMMON 0070                                  ?_LIN_enableRx 0070  
                             ??_LIN_calcParity 004C                                LIN_sendPacket@i 004F  
                                 __pidataBANK0 06F3                            ??_SYSTEM_Initialize 0054  
                            _LIN_receivePacket 0411                                  LIN_init@table 004E  
                                    ?_TMR2_ISR 0070                        __end_of_TMR2_WriteTimer 06C9  
                             ?_TMR2_Initialize 0070                             ?_LIN_receivePacket 0070  
                               _OPTION_REGbits 0095                           _eusartRxStatusBuffer 0020  
                          ??_LIN_receivePacket 0052                ??_EUSART_SetOverrunErrorHandler 004E  
                    __end_of_SYSTEM_Initialize 064A                          ??_EUSART_Transmit_ISR 0070  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 0533                       __size_ofi1_LIN_stopTimer 0004  
                  __end_of_LIN_setTimerHandler 069F                    __size_of_EUSART_Receive_ISR 0035  
                      __end_of_LIN_queuePacket 0100                           LIN_handler@LIN_state 002A  
                    __end_of_LIN_receivePacket 0441                                 ??_LIN_enableRx 004C  
                                   __pmaintext 056F                               _LIN_timerHandler 0533  
                                   ??_LIN_init 0052                            LIN_getChecksum@data 004C  
                ?_EUSART_SetTxInterruptHandler 004C               _EUSART_TxDefaultInterruptHandler 0063  
                                      ?___wmul 0070                                     ??_TMR2_ISR 007E  
                                   __pintentry 0004                           __size_of_LIN_handler 0070  
                      __end_of_LIN_startPeriod 06DF                                        _BAUDCON 019F  
                                      ?_memset 004C                                        _APFCON0 011D  
                                      _APFCON1 011E                   ??_EUSART_DefaultErrorHandler 0071  
                        LIN_getChecksum@length 004E                               _LIN_timerRunning 002D  
                                _eusartRxCount 0031                                        u147_2m0 0169  
                __size_of_EUSART_RxDataHandler 0017                          i1LIN_queuePacket@data 0076  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 004E  
                             ?_TMR2_StartTimer 0070                         __size_of_LIN_getPacket 0025  
                       __size_of_LIN_disableRx 0005                        ??_LIN_Master_Initialize 0054  
                      LIN_getChecksum@checksum 0050            __size_of_EUSART_DefaultErrorHandler 0003  
                   ??_TMR2_SetInterruptHandler 004E                                __size_of___wmul 001B  
                    i1LIN_getChecksum@checksum 0074                               ?_TMR2_WriteTimer 0070  
                              __size_of_memset 001B                                        __ptext1 0638  
                                      __ptext2 06D3                                        __ptext3 064A  
                                      __ptext4 0622                                        __ptext5 069F  
                                      __ptext6 066C                                        __ptext7 05C1  
                                      __ptext8 06D7                                        __ptext9 06DB  
                     __end_ofi1_LIN_calcParity 0328                         __size_of_LIN_sendBreak 0003  
                        _OSCILLATOR_Initialize 069F                               ??_LIN_sendPacket 004E  
                                    _T2CONbits 001C                       ??_PIN_MANAGER_Initialize 004C  
                   __size_of_SYSTEM_Initialize 0012                                        clrloop0 06A7  
                         end_of_initialization 0045          __end_of_EUSART_SetOverrunErrorHandler 068E  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 0685  
                                      memset@c 004C                                        memset@n 004E  
                                      memset@p 0051                                      _LFRX_Data 00BC  
                            _EUSART_Initialize 0398                               ?_LIN_queuePacket 0052  
                   __size_of_LIN_receivePacket 0030                             ?_EUSART_Initialize 0070  
                       __size_of_LIN_stopTimer 0004                              i1_LIN_getChecksum 0499  
                                    _RCSTAbits 019D                              ??i1_LIN_stopTimer 0070  
                           _EUSART_is_rx_ready 06ED                                  _LIN_getPacket 04EA  
                                 __pstringtext 05DB                             ?i1_LIN_getChecksum 0070  
                                _LIN_disableRx 06CE                               ?_LIN_startPeriod 0070  
                     __size_of_LIN_getChecksum 002B                            ??_EUSART_Initialize 004E  
                             ??_WDT_Initialize 004C                 ??_EUSART_SetTxInterruptHandler 004E  
                            LIN_getPacket@data 0054                            ?_EUSART_is_rx_ready 0070  
                                   _processLIN 05F3                            ??i1_LIN_getChecksum 0071  
                          LIN_init@tableLength 0053                               ??_LIN_startTimer 004D  
                             __CFG_FOSC$INTOSC 0000                          __size_of_EUSART_Write 0024  
                                    _RSSI_Data 0042                           __end_of_LIN_enableRx 06CE  
                                _scheduleTable 05DB                __size_of_EUSART_SetErrorHandler 0009  
                 LIN_sendPeriodicTx@periodicTx 0048                        TMR2_WriteTimer@timerVal 004C  
                    __end_of_EUSART_Initialize 03DC                           ??_EUSART_is_rx_ready 004C  
                   __end_of_LIN_sendPeriodicTx 02B3                                  _LIN_sendBreak 06EA  
                                    _TXSTAbits 019E                      __end_ofi1_LIN_getChecksum 04C3  
                               ?_LIN_getPacket 0070                                 ?_LIN_disableRx 0070  
         __end_of_TMR2_DefaultInterruptHandler 06F5          __size_of_TMR2_DefaultInterruptHandler 0001  
                 _TMR2_DefaultInterruptHandler 06F4                              __size_of_LIN_init 001A  
           __end_of_EUSART_DefaultErrorHandler 06F3                     _EUSART_DefaultErrorHandler 06F0  
                               __end_of___wmul 05C1                                   _EUSART_Write 050F  
                            __size_of_TMR2_ISR 000C                         ?_OSCILLATOR_Initialize 0070  
              LIN_sendPeriodicTx@scheduleIndex 0028                                 __end_of_memset 05A6  
                          start_initialization 0032                                  _LIN_stopTimer 06D7  
              __size_of_PIN_MANAGER_Initialize 0016                       __end_of_LIN_timerHandler 0552  
                                ??_EUSART_Read 004C   EUSART_SetRxInterruptHandler@interruptHandler 004C  
 EUSART_SetTxInterruptHandler@interruptHandler 004C                          LIN_startTimer@timeout 004E  
                               ?_LIN_sendBreak 0070                              LIN_calcParity@CMD 004D  
               ?_EUSART_SetOverrunErrorHandler 004C                              LIN_calcParity@PID 004E  
                   _EUSART_FramingErrorHandler 005F                                       ??___wmul 0074  
                       _EUSART_SetErrorHandler 068E                                    __pdataBANK0 0067  
                                     ??_memset 0050                           processLIN@tempRxData 00C4  
                ?_TMR2_DefaultInterruptHandler 0070                                    ?_processLIN 0070  
                          LIN_init@processData 0050                    __end_of_EUSART_Transmit_ISR 056F  
                               ?_LIN_stopTimer 0070                                      ___latbits 0002  
                                __pcstackBANK0 0044                                  __pcstackBANK1 00C4  
                            ??_LIN_getChecksum 004D                       __size_of_TMR2_Initialize 0012  
                   __end_of_EUSART_Receive_ISR 0411                     __size_of_EUSART_Initialize 0044  
                            _LIN_timerCallBack 002C               _EUSART_RxDefaultInterruptHandler 0061  
               __size_of_LIN_Master_Initialize 000D                            __end_of_EUSART_Read 04EA  
                __end_of_LIN_Master_Initialize 0679                                      __pnvBANK0 005B  
                                    __pnvBANK1 00CF                     __size_ofi1_LIN_getChecksum 002A  
                 __end_of_EUSART_RxDataHandler 0622                                ??_LIN_getPacket 0053  
                       _PIN_MANAGER_Initialize 0622                                  ??_LIN_handler 0057  
                             LIN_getChecksum@i 004F                                ??_LIN_disableRx 004C  
                         EUSART_Read@readValue 004D                   __size_of_LIN_setTimerHandler 0008  
                                 _eusartRxHead 0033                                   _eusartTxHead 0035  
                                 _eusartRxTail 0032                                   _eusartTxTail 0034  
                 ??_INTERRUPT_InterruptManager 004B                           i1LIN_queuePacket@cmd 0044  
                        __size_of_LIN_enableRx 0005                        _eusartTxBufferRemaining 0066  
                            ?i1_LIN_calcParity 0070                        __size_of_LIN_calcParity 0084  
                           ??i1_LIN_calcParity 0070                                ??_LIN_sendBreak 004C  
                              i1_LIN_stopTimer 06DF                                 _eusartRxBuffer 00A0  
                               _eusartTxBuffer 00A8                                 ___wmul@product 0074  
       EUSART_SetErrorHandler@interruptHandler 004C                                      clear_ram0 06A6  
                          __size_of_processLIN 0018                                       _PIE1bits 0091  
                            _eusartRxLastError 0030                       __size_of_TMR2_StartTimer 0003  
          __size_of_INTERRUPT_InterruptManager 002C                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 004E                                       _LIN_init 05C1  
                                 _LIN_enableRx 06C9      __end_of_EUSART_DefaultOverrunErrorHandler 06E7  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 06E3  
                                     _TMR2_ISR 0679                               LIN_getPacket@cmd 0055  
                          __end_of_LIN_handler 0398                              ___wmul@multiplier 0070  
                              ??_LIN_stopTimer 004C                 ??_TMR2_DefaultInterruptHandler 0070  
            __size_of_TMR2_SetInterruptHandler 0006                       __size_of_TMR2_WriteTimer 0005  
                    ?_TMR2_SetInterruptHandler 004C                                   _LIN_rxPacket 00B0  
                                  _EUSART_Read 04C3                             _LIN_periodCallBack 002B  
                            ??_TMR2_Initialize 004E                              i1_LIN_queuePacket 0100  
                        i1LIN_getChecksum@data 0070                             ?i1_LIN_queuePacket 0076  
                      ??_OSCILLATOR_Initialize 004C                            _EUSART_ErrorHandler 00D1  
                     __size_of_LIN_queuePacket 00B7                    ?_EUSART_DefaultErrorHandler 0070  
                           _LIN_sendPeriodicTx 023B                            ??i1_LIN_queuePacket 0077  
                      __end_ofi1_LIN_stopTimer 06E3                            ?_LIN_sendPeriodicTx 0070  
                     __size_of_LIN_startPeriod 0004                           _EUSART_RxDataHandler 060B  
                                     __ptext10 0697                                       __ptext11 06AC  
                                     __ptext20 0328                                       __ptext12 0398  
                                     __ptext21 05F3                                       __ptext13 06B2  
                                     __ptext30 0411                                       __ptext22 04EA  
                                     __ptext14 06B8                                       __ptext31 046E  
                                     __ptext23 058B                                       __ptext15 0685  
                                     __ptext40 06DF                                       __ptext32 04C3  
                                     __ptext24 065C                                       __ptext16 06BE  
                                     __ptext41 023B                                       __ptext33 06C9  
                                     __ptext25 06C4                                       __ptext17 068E  
                                     __ptext50 06F0                                       __ptext42 0100  
                                     __ptext34 06CE                                       __ptext26 06E7  
                                     __ptext18 0049                                       __ptext51 060B  
                                     __ptext43 0499                                       __ptext35 06ED  
                                     __ptext27 0441                                       __ptext19 01B7  
                                     __ptext44 02B3                                       __ptext28 06EA  
                                     __ptext45 05A6                                       __ptext37 0679  
                                     __ptext29 050F                                       __ptext46 0552  
                                     __ptext38 0533                                       __ptext47 03DC  
                                     __ptext39 06F4                                       __ptext48 06E3  
                                     __ptext49 06F5                              ?_LIN_timerHandler 0070  
                           ??_LIN_timerHandler 004A                             i1LIN_getChecksum@i 0073  
                      __size_of_LIN_sendPacket 002D                    __size_of_EUSART_is_rx_ready 0003  
                                __size_of_main 001C                      __end_ofi1_LIN_queuePacket 01B7  
                                     _schedule 005B                                    _SIGNAL_Data 0041  
                      ?_EUSART_SetErrorHandler 004C                           ??_LIN_sendPeriodicTx 007B  
EUSART_SetOverrunErrorHandler@interruptHandler 004C                                    _LIN_handler 0328  
                                     int$flags 007E                                _LIN_getChecksum 046E  
                            ??_TMR2_StartTimer 004C             __end_of_INTERRUPT_InterruptManager 0030  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 06C4  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 06BE  
                                 ??_processLIN 0056                                    _LIN_txReady 002F  
                                  _LIN_timeout 0067                                 _LIN_calcParity 01B7  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                          LIN_queuePacket@data 0052                                       memset@p1 0052  
                      __size_of_WDT_Initialize 0004                            _LIN_setTimerHandler 0697  
                                     intlevel1 0000                              ??_TMR2_WriteTimer 004C  
                      __size_of_LIN_startTimer 0010                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0697                              __CFG_CLKOUTEN$OFF 0000  
                           __end_of_processLIN 060B           __end_of_EUSART_SetRxInterruptHandler 06BE  
        __size_of_EUSART_SetRxInterruptHandler 0006                   _EUSART_SetRxInterruptHandler 06B8  
                                   _LIN_packet 0036                             _EUSART_Receive_ISR 03DC  
                         ?_LIN_setTimerHandler 0070                                     _LIN_period 002E  
EUSART_SetFramingErrorHandler@interruptHandler 004C                         __end_of_LIN_calcParity 023B  
                           LIN_queuePacket@cmd 0057                            ?_EUSART_Receive_ISR 0070  
                                  _UNLOCK_Data 0043                            i1LIN_calcParity@CMD 0071  
                            ??_LIN_queuePacket 0053                            i1LIN_calcParity@PID 0072  
                             ?i1_LIN_stopTimer 0070                             EUSART_Write@txData 004D  
                 __size_of_EUSART_Transmit_ISR 001D                 __end_of_PIN_MANAGER_Initialize 0638  
                            ??_LIN_startPeriod 004C                               LIN_queuePacket@i 0058  
                         ??_EUSART_Receive_ISR 0071                      __size_ofi1_LIN_calcParity 0075  
                   __size_ofi1_LIN_queuePacket 00B7                          _TMR2_InterruptHandler 005D  
                      __end_of_LIN_getChecksum 0499                          _LIN_Master_Initialize 066C  
